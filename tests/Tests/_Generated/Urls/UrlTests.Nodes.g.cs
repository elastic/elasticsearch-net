// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using Elastic.Elasticsearch.Xunit.XunitPlumbing;
using Nest;
using System.Threading.Tasks;
using Tests.Domain;
using Tests.Framework.EndpointTests;

namespace Tests.Urls.Nodes
{
    public class NodesHotThreadsUrlTests : UrlTestsBase
    {
        [U]
        public override async Task Urls()
        {
            await UrlTester.GET("/_nodes/hot_threads").Request(c => c.Nodes.HotThreads(new NodesHotThreadsRequest())).RequestAsync(c => c.Nodes.HotThreadsAsync(new NodesHotThreadsRequest()));
        }
    }

    public class NodesInfoUrlTests : UrlTestsBase
    {
        [U]
        public override async Task Urls()
        {
            await UrlTester.GET("/_nodes").Request(c => c.Nodes.Info(new NodesInfoRequest())).RequestAsync(c => c.Nodes.InfoAsync(new NodesInfoRequest()));
        }
    }

    public class NodesReloadSecureSettingsUrlTests : UrlTestsBase
    {
        [U]
        public override async Task Urls()
        {
            await UrlTester.POST("/_nodes/reload_secure_settings").Request(c => c.Nodes.ReloadSecureSettings(new ReloadSecureSettingsRequest())).RequestAsync(c => c.Nodes.ReloadSecureSettingsAsync(new ReloadSecureSettingsRequest()));
        }
    }

    public class NodesStatsUrlTests : UrlTestsBase
    {
        [U]
        public override async Task Urls()
        {
            await UrlTester.GET("/_nodes/stats").Request(c => c.Nodes.Stats(new NodesStatsRequest())).RequestAsync(c => c.Nodes.StatsAsync(new NodesStatsRequest()));
        }
    }

    public class NodesUsageUrlTests : UrlTestsBase
    {
        [U]
        public override async Task Urls()
        {
            await UrlTester.GET("/_nodes/usage").Request(c => c.Nodes.Usage(new NodesUsageRequest())).RequestAsync(c => c.Nodes.UsageAsync(new NodesUsageRequest()));
        }
    }
}
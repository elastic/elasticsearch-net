// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using Elastic.Elasticsearch.Xunit.XunitPlumbing;
using Nest;
using System.Threading.Tasks;
using Tests.Domain;
using Tests.Framework.EndpointTests;

namespace Tests.Urls.License
{
    public class LicenseDeleteUrlTests : UrlTestsBase
    {
        [U]
        public override async Task Urls()
        {
            await UrlTester.DELETE("/_license").Request(c => c.License.DeleteLicense(new DeleteLicenseRequest())).RequestAsync(c => c.License.DeleteLicenseAsync(new DeleteLicenseRequest()));
        }
    }

    public class LicenseGetUrlTests : UrlTestsBase
    {
        [U]
        public override async Task Urls()
        {
            await UrlTester.GET("/_license").Request(c => c.License.GetLicense(new GetLicenseRequest())).RequestAsync(c => c.License.GetLicenseAsync(new GetLicenseRequest()));
        }
    }

    public class LicenseGetBasicStatusUrlTests : UrlTestsBase
    {
        [U]
        public override async Task Urls()
        {
            await UrlTester.GET("/_license/basic_status").Request(c => c.License.GetBasicLicenseStatus(new GetBasicLicenseStatusRequest())).RequestAsync(c => c.License.GetBasicLicenseStatusAsync(new GetBasicLicenseStatusRequest()));
        }
    }

    public class LicenseGetTrialStatusUrlTests : UrlTestsBase
    {
        [U]
        public override async Task Urls()
        {
            await UrlTester.GET("/_license/trial_status").Request(c => c.License.GetTrialLicenseStatus(new GetTrialLicenseStatusRequest())).RequestAsync(c => c.License.GetTrialLicenseStatusAsync(new GetTrialLicenseStatusRequest()));
        }
    }

    public class LicensePostUrlTests : UrlTestsBase
    {
        [U]
        public override async Task Urls()
        {
            await UrlTester.PUT("/_license").Request(c => c.License.PostLicense(new PostLicenseRequest())).RequestAsync(c => c.License.PostLicenseAsync(new PostLicenseRequest()));
        }
    }

    public class LicensePostStartBasicUrlTests : UrlTestsBase
    {
        [U]
        public override async Task Urls()
        {
            await UrlTester.POST("/_license/start_basic").Request(c => c.License.StartBasicLicense(new StartBasicLicenseRequest())).RequestAsync(c => c.License.StartBasicLicenseAsync(new StartBasicLicenseRequest()));
        }
    }

    public class LicensePostStartTrialUrlTests : UrlTestsBase
    {
        [U]
        public override async Task Urls()
        {
            await UrlTester.POST("/_license/start_trial").Request(c => c.License.StartTrialLicense(new StartTrialLicenseRequest())).RequestAsync(c => c.License.StartTrialLicenseAsync(new StartTrialLicenseRequest()));
        }
    }
}
name: 'CD'

# TODO: Remove 'stack'

on:
  workflow_call:
    inputs:
      release_tag:
        description: 'The release tag (release version)'
        type: 'string'
        required: true

concurrency:
  group: 'docfx-stack'
  cancel-in-progress: false

env:
  # Configuration
  GLOBAL_JSON_FILE: 'global.json'
  CACHE_PATTERNS: '["**/*.[cf]sproj*", "**/*.Build.props"]'
  # .NET SDK related environment variables
  DOTNET_NOLOGO: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_GENERATE_ASPNET_CERTIFICATE: 0

jobs:
  docfx:
    name: 'Generate API Documentation'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Parse Version'
        id: 'version'
        uses: 'zyactions/semver@v1'
        with:
          version: ${{ inputs.release_tag }}

      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      - name: '.NET Setup'
        uses: 'actions/setup-dotnet@v4'
        with:
          global-json-file: '${{ github.workspace }}/${{ env.GLOBAL_JSON_FILE }}'

      - name: 'DocFX Setup'
        run: |-
          dotnet tool update -g docfx

      - name: '.NET Cache Packages'
        uses: 'actions/cache@v4'
        with:
          path: '~/.nuget/packages'
          key: '${{ runner.os }}-nuget-stack-${{ hashFiles(fromJson(env.CACHE_PATTERNS)) }}'
          restore-keys: '${{ runner.os }}-nuget-stack-'

      - name: 'DocFx Build'
        working-directory: 'docfx'
        run: |-
          docfx docfx.json
          mv ./_site ./../..

      - name: 'Checkout'
        uses: 'actions/checkout@v4'
        with:
          ref: 'refdoc'

      - name: 'Commit'
        run: |-
          rm -r "./${{ steps.version.outputs.version }}" || true
          mv ../_site "./${{ steps.version.outputs.version }}"
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@users.noreply.github.com'
          git add .
          git commit -am "Add ${{ steps.version.outputs.version }}"
          git push

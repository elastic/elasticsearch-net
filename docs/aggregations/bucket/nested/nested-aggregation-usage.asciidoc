

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Tests/Aggregations/Bucket/Nested/NestedAggregationUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[nested-aggregation-usage]]
=== Nested Aggregation Usage

==== Fluent DSL example

[source,csharp]
----
a => a
.Nested("tags", n => n
    .Path(p => p.Tags)
    .Aggregations(aa => aa
        .Terms("tag_names", t => t
            .Field(p => p.Tags.Suffix("name"))
        )
    )
)
----

==== Object Initializer syntax example

[source,csharp]
----
new NestedAggregation("tags")
{
    Path = "tags",
    Aggregations = new TermsAggregation("tag_names")
    {
        Field = "tags.name"
    }
}
----

[source,javascript]
.Example json output
----
{
  "tags": {
    "nested": {
      "path": "tags"
    },
    "aggs": {
      "tag_names": {
        "terms": {
          "field": "tags.name"
        }
      }
    }
  }
}
----

==== Handling Responses

[source,csharp]
----
response.ShouldBeValid();
var tags = response.Aggregations.Nested("tags");
tags.Should().NotBeNull();
var tagNames = tags.Terms("tag_names");
tagNames.Should().NotBeNull();
foreach (var item in tagNames.Buckets)
{
    item.Key.Should().NotBeNullOrEmpty();
    item.DocCount.Should().BeGreaterThan(0);
}
----




:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Tests/Aggregations/Bucket/GeoHashGrid/GeoHashGridAggregationUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[geo-hash-grid-aggregation-usage]]
=== Geo Hash Grid Aggregation Usage

==== Fluent DSL example

[source,csharp]
----
a => a
.GeoHash("my_geohash_grid", g => g
    .Field(p => p.LocationPoint)
    .GeoHashPrecision(GeoHashPrecision.Precision3)
    .Size(1000)
    .ShardSize(100)
)
----

==== Object Initializer syntax example

[source,csharp]
----
new GeoHashGridAggregation("my_geohash_grid")
{
    Field = Field<Project>(p => p.LocationPoint),
    Precision = GeoHashPrecision.Precision3,
    Size = 1000,
    ShardSize = 100
}
----

[source,javascript]
.Example json output
----
{
  "my_geohash_grid": {
    "geohash_grid": {
      "field": "locationPoint",
      "precision": 3,
      "size": 1000,
      "shard_size": 100
    }
  }
}
----

==== Handling Responses

[source,csharp]
----
response.ShouldBeValid();
var myGeoHashGrid = response.Aggregations.GeoHash("my_geohash_grid");
myGeoHashGrid.Should().NotBeNull();
----

==== Fluent DSL example

[source,csharp]
----
a => a
.GeoHash("my_geohash_grid", g => g
    .Field(p => p.LocationPoint)
    .Bounds(b => b
        .TopLeft(90,-180)
        .BottomRight(-90, 180)
    )
)
----

==== Object Initializer syntax example

[source,csharp]
----
new GeoHashGridAggregation("my_geohash_grid")
{
    Field = Field<Project>(p => p.LocationPoint),
    Bounds = new BoundingBox
    {
        TopLeft = new GeoLocation(90, -180),
        BottomRight = new GeoLocation(-90, 180)
    }
}
----

[source,javascript]
.Example json output
----
{
  "my_geohash_grid": {
    "geohash_grid": {
      "field": "locationPoint",
      "bounds": {
        "top_left": {
          "lat": 90.0,
          "lon": -180.0
        },
        "bottom_right": {
          "lat": -90.0,
          "lon": 180.0
        }
      }
    }
  }
}
----

==== Handling Responses

[source,csharp]
----
response.ShouldBeValid();
var myGeoHashGrid = response.Aggregations.GeoHash("my_geohash_grid");
myGeoHashGrid.Should().NotBeNull();
----


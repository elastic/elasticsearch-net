

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Tests/Aggregations/Bucket/Range/RangeAggregationUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[range-aggregation-usage]]
=== Range Aggregation Usage

==== Fluent DSL example

[source,csharp]
----
a => a
.Range("commit_ranges", ra => ra
    .Field(p => p.NumberOfCommits)
    .Ranges(
        r => r.To(100),
        r => r.From(100).To(500),
        r => r.From(500)
    )
)
----

==== Object Initializer syntax example

[source,csharp]
----
new RangeAggregation("commit_ranges")
{
    Field = Field<Project>(p => p.NumberOfCommits),
    Ranges = new List<AggregationRange>
    {
        { new AggregationRange { To = 100 } },
        { new AggregationRange { From = 100, To = 500 } },
        { new AggregationRange { From = 500 } }
    }
}
----

[source,javascript]
.Example json output
----
{
  "commit_ranges": {
    "range": {
      "field": "numberOfCommits",
      "ranges": [
        {
          "to": 100.0
        },
        {
          "from": 100.0,
          "to": 500.0
        },
        {
          "from": 500.0
        }
      ]
    }
  }
}
----

==== Handling Responses

[source,csharp]
----
response.ShouldBeValid();
var commitRanges = response.Aggregations.Range("commit_ranges");
commitRanges.Should().NotBeNull();
commitRanges.Buckets.Count.Should().Be(3);
commitRanges.Buckets.FirstOrDefault(r => r.Key == "*-100.0").Should().NotBeNull();
commitRanges.Buckets.FirstOrDefault(r => r.Key == "100.0-500.0").Should().NotBeNull();
commitRanges.Buckets.FirstOrDefault(r => r.Key == "500.0-*").Should().NotBeNull();
----


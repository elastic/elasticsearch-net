

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Tests/Aggregations/Bucket/Children/ChildrenAggregationUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[children-aggregation-usage]]
=== Children Aggregation Usage

A special single bucket aggregation that enables aggregating from buckets on parent document types to
buckets on child documents.

Be sure to read the Elasticsearch documentation on {ref_current}/search-aggregations-bucket-children-aggregation.html[Children Aggregation]

==== Fluent DSL example

[source,csharp]
----
a => a
.Children<CommitActivity>("name_of_child_agg", child => child
    .Aggregations(childAggs => childAggs
        .Average("average_per_child", avg => avg.Field(p => p.ConfidenceFactor))
        .Max("max_per_child", avg => avg.Field(p => p.ConfidenceFactor))
        .Min("min_per_child", avg => avg.Field(p => p.ConfidenceFactor))
    )
)
----

==== Object Initializer syntax example

[source,csharp]
----
new ChildrenAggregation("name_of_child_agg", typeof(CommitActivity))
{
    Aggregations =
        new AverageAggregation("average_per_child", "confidenceFactor")
        && new MaxAggregation("max_per_child", "confidenceFactor")
        && new MinAggregation("min_per_child", "confidenceFactor")
}
----

[source,javascript]
.Example json output
----
{
  "name_of_child_agg": {
    "children": {
      "type": "commits"
    },
    "aggs": {
      "average_per_child": {
        "avg": {
          "field": "confidenceFactor"
        }
      },
      "max_per_child": {
        "max": {
          "field": "confidenceFactor"
        }
      },
      "min_per_child": {
        "min": {
          "field": "confidenceFactor"
        }
      }
    }
  }
}
----


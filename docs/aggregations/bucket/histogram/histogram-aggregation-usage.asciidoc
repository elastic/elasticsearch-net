

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Tests/Aggregations/Bucket/Histogram/HistogramAggregationUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[histogram-aggregation-usage]]
=== Histogram Aggregation Usage

==== Fluent DSL example

[source,csharp]
----
a => a
.Histogram("commits", h => h
    .Field(p => p.NumberOfCommits)
    .Interval(100)
    .MinimumDocumentCount(1)
    .Order(HistogramOrder.KeyDescending)
    .Offset(1.1)
)
----

==== Object Initializer syntax example

[source,csharp]
----
new HistogramAggregation("commits")
{
    Field = Field<Project>(p => p.NumberOfCommits),
    Interval = 100,
    MinimumDocumentCount = 1,
    Order = HistogramOrder.KeyDescending,
    Offset = 1.1
}
----

[source,javascript]
.Example json output
----
{
  "commits": {
    "histogram": {
      "field": "numberOfCommits",
      "interval": 100.0,
      "min_doc_count": 1,
      "order": {
        "_key": "desc"
      },
      "offset": 1.1
    }
  }
}
----

==== Handling Responses

[source,csharp]
----
response.ShouldBeValid();
var commits = response.Aggregations.Histogram("commits");
commits.Should().NotBeNull();
commits.Buckets.Should().NotBeNull();
commits.Buckets.Count.Should().BeGreaterThan(0);
foreach (var item in commits.Buckets)
    item.DocCount.Should().BeGreaterThan(0);
----


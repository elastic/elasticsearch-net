

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Tests/Aggregations/Metric/Boxplot/BoxplotAggregationUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[boxplot-aggregation-usage]]
=== Boxplot Aggregation Usage

A boxplot metrics aggregation that computes boxplot of numeric values extracted from the aggregated documents.
These values can be generated by a provided script or extracted from specific numeric or histogram fields in the documents.

boxplot aggregation returns essential information for making a box plot: minimum, maximum median, first quartile (25th percentile)
and third quartile (75th percentile) values.

Be sure to read the Elasticsearch documentation on {ref_current}/search-aggregations-metrics-boxplot-aggregation.html[Boxplot Aggregation]

==== Fluent DSL example

[source,csharp]
----
a => a
.Boxplot("boxplot_commits", plot => plot
    .Meta(m => m
        .Add("foo", "bar")
    )
    .Field(p => p.NumberOfCommits)
    .Missing(10)
    .Compression(100)
)
----

==== Object Initializer syntax example

[source,csharp]
----
new BoxplotAggregation("boxplot_commits", Field<Project>(p => p.NumberOfCommits))
{
    Meta = new Dictionary<string, object>
    {
        { "foo", "bar" }
    },
    Missing = 10,
    Compression = 100
}
----

[source,javascript]
.Example json output
----
{
  "boxplot_commits": {
    "meta": {
      "foo": "bar"
    },
    "boxplot": {
      "field": "numberOfCommits",
      "missing": 10.0,
      "compression": 100.0
    }
  }
}
----

==== Handling Responses

[source,csharp]
----
response.ShouldBeValid();
var boxplot = response.Aggregations.Boxplot("boxplot_commits");
boxplot.Should().NotBeNull();
boxplot.Min.Should().BeGreaterOrEqualTo(0);
boxplot.Max.Should().BeGreaterOrEqualTo(0);
boxplot.Q1.Should().BeGreaterOrEqualTo(0);
boxplot.Q2.Should().BeGreaterOrEqualTo(0);
boxplot.Q3.Should().BeGreaterOrEqualTo(0);
boxplot.Lower.Should().BeGreaterOrEqualTo(0);
boxplot.Upper.Should().BeGreaterOrEqualTo(0);
boxplot.Meta.Should().NotBeNull().And.HaveCount(1);
boxplot.Meta["foo"].Should().Be("bar");
----




:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Tests/Aggregations/Metric/GeoBounds/GeoBoundsAggregationUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[geo-bounds-aggregation-usage]]
=== Geo Bounds Aggregation Usage

==== Fluent DSL example

[source,csharp]
----
a => a
.GeoBounds("viewport", gb => gb
    .Field(p => p.LocationPoint)
    .WrapLongitude()
)
----

==== Object Initializer syntax example

[source,csharp]
----
new GeoBoundsAggregation("viewport", Field<Project>(p => p.LocationPoint))
{
    WrapLongitude = true
}
----

[source,javascript]
.Example json output
----
{
  "viewport": {
    "geo_bounds": {
      "field": "locationPoint",
      "wrap_longitude": true
    }
  }
}
----

==== Handling Responses

[source,csharp]
----
response.ShouldBeValid();
var viewport = response.Aggregations.GeoBounds("viewport");
viewport.Should().NotBeNull();
viewport.Bounds.Should().NotBeNull();

var bottomRight = viewport.Bounds.BottomRight;
bottomRight.Should().NotBeNull();
bottomRight.Lat.Should().HaveValue();
GeoLocation.IsValidLatitude(bottomRight.Lat.Value).Should().BeTrue();
bottomRight.Lon.Should().HaveValue();
GeoLocation.IsValidLongitude(bottomRight.Lon.Value).Should().BeTrue();

var topLeft = viewport.Bounds.TopLeft;
topLeft.Should().NotBeNull();
topLeft.Lat.Should().HaveValue();
GeoLocation.IsValidLatitude(topLeft.Lat.Value).Should().BeTrue();
topLeft.Lon.Should().HaveValue();
GeoLocation.IsValidLongitude(topLeft.Lon.Value).Should().BeTrue();
----




:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Tests/Aggregations/Metric/GeoCentroid/GeoCentroidAggregationUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[geo-centroid-aggregation-usage]]
=== Geo Centroid Aggregation Usage

A metric aggregation that computes the weighted centroid from all coordinate values
for a Geo-point datatype field.

Be sure to read the Elasticsearch documentation on {ref_current}/search-aggregations-metrics-geocentroid-aggregation.html[Geo Centroid Aggregation]

==== Fluent DSL example

[source,csharp]
----
a => a
.GeoCentroid("centroid", gb => gb
    .Field(p => p.LocationPoint)
)
----

==== Object Initializer syntax example

[source,csharp]
----
new GeoCentroidAggregation("centroid", Infer.Field<Project>(p => p.LocationPoint))
----

[source,javascript]
.Example json output
----
{
  "centroid": {
    "geo_centroid": {
      "field": "locationPoint"
    }
  }
}
----

==== Handling Responses

[source,csharp]
----
response.ShouldBeValid();
var centroid = response.Aggregations.GeoCentroid("centroid");
centroid.Should().NotBeNull();
centroid.Count.Should().BeGreaterThan(0);
centroid.Location.Should().NotBeNull();

centroid.Location.Latitude.Should().NotBe(0);
centroid.Location.Longitude.Should().NotBe(0);
----

[[geo-centroid-sub-aggregation]]
[float]
=== Geo Centroid Sub Aggregation

The `geo_centroid` aggregation is more interesting when combined as a sub-aggregation to other bucket aggregations

==== Fluent DSL example

[source,csharp]
----
a => a
.Terms("projects", t => t
    .Field(p => p.Name)
    .Aggregations(sa => sa
        .GeoCentroid("centroid", gb => gb
            .Field(p => p.LocationPoint)
        )
    )
)
----

==== Object Initializer syntax example

[source,csharp]
----
new TermsAggregation("projects")
{
    Field = Infer.Field<Project>(p => p.Name),
    Aggregations = new GeoCentroidAggregation("centroid", Infer.Field<Project>(p => p.LocationPoint))
}
----

[source,javascript]
.Example json output
----
{
  "projects": {
    "terms": {
      "field": "name"
    },
    "aggs": {
      "centroid": {
        "geo_centroid": {
          "field": "locationPoint"
        }
      }
    }
  }
}
----

==== Handling Responses

[source,csharp]
----
response.ShouldBeValid();

var projects = response.Aggregations.Terms("projects");

foreach (var bucket in projects.Buckets)
{
    var centroid = bucket.GeoCentroid("centroid");
    centroid.Should().NotBeNull();
    centroid.Count.Should().BeGreaterThan(0);
    centroid.Location.Should().NotBeNull();

    centroid.Location.Latitude.Should().NotBe(0);
    centroid.Location.Longitude.Should().NotBe(0);
}
----

==== Fluent DSL example

[source,csharp]
----
a => a
.GeoCentroid("centroid", gb => gb
    .Field(p => p.LocationPoint)
)
----

==== Object Initializer syntax example

[source,csharp]
----
new GeoCentroidAggregation("centroid", Infer.Field<Project>(p => p.LocationPoint))
----

[source,javascript]
.Example json output
----
{
  "centroid": {
    "geo_centroid": {
      "field": "locationPoint"
    }
  }
}
----

==== Handling Responses

[source,csharp]
----
response.ShouldBeValid();
var centroid = response.Aggregations.GeoCentroid("centroid");
centroid.Should().NotBeNull();
centroid.Count.Should().Be(0);
----


[[aggregations]]
== Aggregation Examples

This page demonstrates how to use aggregations.

[discrete]
=== Top Level Aggreggation

[discrete]
==== Fluent API

[source,csharp]
----
var response = await client
	.SearchAsync<Person>(search => search
		.Index("persons")
		.Query(query => query
			.MatchAll(_ => {})
		)
		.Aggregations(aggregations => aggregations
			.Add("agg_name", aggregation => aggregation
				.Max(max => max
					.Field(x => x.Age)
				)
			)
		)
		.Size(10)
	);
----

[discrete]
==== Consuming the Response

[source,csharp]
----
var max = response.Aggregations!.GetMax("agg_name")!;
Console.WriteLine(max.Value);
----

[discrete]
=== Sub Aggregation

[discrete]
==== Fluent API

[source,csharp]
----
var response = await client
	.SearchAsync<Person>(search => search
		.Index("persons")
		.Query(query => query
			.MatchAll(_ => {})
		)
		.Aggregations(aggregations => aggregations
			.Add("firstnames", aggregation => aggregation
				.Terms(terms => terms
					.Field(x => x.FirstName)
				)
				.Aggregations(aggregations => aggregations
					.Add("avg_age", aggregation => aggregation
						.Max(avg => avg
							.Field(x => x.Age)
						)
					)
				)
			)
		)
		.Size(10)
	);
----

[discrete]
==== Consuming the Response

[source,csharp]
----
var firstnames = response.Aggregations!.GetStringTerms("firstnames")!;
foreach (var bucket in firstnames.Buckets)
{
	var avg = bucket.Aggregations.GetAverage("avg_age")!;
	Console.WriteLine($"The average age for persons named '{bucket.Key}' is {avg}");
}
----



:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Tests/ClientConcepts/Troubleshooting/LoggingWithFiddler.doc.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[logging-with-fiddler]]
=== Logging with Fiddler

A web debugging proxy such as http://www.telerik.com/fiddler[Fiddler] is a useful way to capture HTTP traffic
from a machine, particularly whilst developing against a local Elasticsearch cluster.

==== Capturing traffic to a remote cluster

To capture traffic against a remote cluster is as simple as launching Fiddler! You may want to also
filter traffic to only show requests to the remote cluster by using the filters tab

image::capture-requests-remotehost.png[Capturing requests to a remote host]

==== Capturing traffic to a local cluster

The .NET Framework is hardcoded not to send requests for `localhost` through any proxies and as a proxy
Fiddler will not receive such traffic.

This is easily circumvented by using `ipv4.fiddler` as the hostname instead of `localhost`

[source,csharp]
----
var isFiddlerRunning = Process.GetProcessesByName("fiddler").Any();
var host = isFiddlerRunning ? "ipv4.fiddler" : "localhost";

var connectionSettings = new ConnectionSettings(new Uri($"http://{host}:9200"))
    .PrettyJson(); <1>

var client = new ElasticClient(connectionSettings);
----
<1> prettify json requests and responses to make them easier to read in Fiddler

With Fiddler running, the requests and responses will now be captured and can be inspected in the
Inspectors tab

image::inspect-requests.png[Inspecting requests and responses]

As before, you may also want to filter traffic to only show requests to `ipv4.fiddler` on the port
on which you are running Elasticsearch.

image::capture-requests-localhost.png[Capturing requests to localhost]




:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Tests/ClientConcepts/HighLevel/Indexing/IngestNodes.doc.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[ingest-nodes]]
=== Ingest Node

Elasticsearch will automatically re-route index requests to ingest nodes,
however with some careful consideration you can optimise this path.

==== Custom indexing client

Since Elasticsearch will automatically reroute ingest requests to ingest nodes, you don't have to specify or configure any routing
information. However, if you're doing heavy ingestion and have dedicated ingest nodes, it makes sense to send index requests to
these nodes directly, to avoid any extra hops in the cluster.

The simplest way to achieve this is to create a dedicated "indexing" client instance, and use it for indexing requests.

[source,csharp]
----
var pool = new StaticConnectionPool(new [] <1>
{
    new Uri("http://ingestnode1:9200"),
    new Uri("http://ingestnode2:9200"),
    new Uri("http://ingestnode3:9200")
});
var settings = new ConnectionSettings(pool);
var indexingClient = new ElasticClient(settings);
----
<1> list of ingest nodes

==== Determining ingest capability

In complex cluster configurations it can be easier to use a sniffing connection pool along with a node predicate to
filter out the nodes that have ingest capabilities. This allows you to customise the cluster and not have to reconfigure
the client.

[source,csharp]
----
var pool = new SniffingConnectionPool(new [] <1>
{
    new Uri("http://node1:9200"),
    new Uri("http://node2:9200"),
    new Uri("http://node3:9200")
});
var settings = new ConnectionSettings(pool).NodePredicate(n => n.HasFeature(IngestEnabled)); <2>
var indexingClient = new ElasticClient(settings);
----
<1> list of cluster nodes
<2> predicate to select only nodes with ingest capabilities


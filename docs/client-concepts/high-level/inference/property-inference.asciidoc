

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Tests/ClientConcepts/HighLevel/Inference/PropertyInference.doc.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[property-inference]]
=== Property name inference

==== Appending suffixes to a lambda expression body

Suffixes can be appended to the body of a lambda expression, which is useful in cases where
you have a POCO property mapped as a <<multi-fields, multi-field>>
and want to use strongly typed access with a lambda expression, yet append a suffix to the
generated field name, in order to access a particular sub field of the multi-field.

The `.Suffix()` extension method can be used for this purpose and when serializing expressions suffixed
in this way, the serialized property name resolves to the last token

[source,csharp]
----
Expression<Func<Project, object>> expression = p => p.Name.Suffix("raw");
Expect("raw").WhenSerializing<PropertyName>(expression);
----

==== Appending suffixes to a Lambda expression

Alternatively, suffixes can be applied to a lambda expression directly using
the `.ApplySuffix()` extension method. Again, the serialized field name
resolves to the last token

[source,csharp]
----
Expression<Func<Project, object>> expression = p => p.Name;
expression = expression.AppendSuffix("raw");
Expect("raw").WhenSerializing<PropertyName>(expression);
----


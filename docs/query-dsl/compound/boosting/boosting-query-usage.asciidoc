

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Tests/QueryDsl/Compound/Boosting/BoostingQueryUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[boosting-query-usage]]
=== Boosting Query Usage

==== Fluent DSL example

[source,csharp]
----
q
.Boosting(c => c
    .Name("named_query")
    .Boost(1.1)
    .Positive(qq => qq.MatchAll(m => m.Name("filter")))
    .Negative(qq => qq.MatchAll(m => m.Name("query")))
    .NegativeBoost(1.12)
)
----

==== Object Initializer syntax example

[source,csharp]
----
new BoostingQuery()
{
    Name = "named_query",
    Boost = 1.1,
    PositiveQuery = new MatchAllQuery { Name = "filter" },
    NegativeQuery = new MatchAllQuery() { Name = "query" },
    NegativeBoost = 1.12
}
----

[source,javascript]
.Example json output
----
{
  "boosting": {
    "_name": "named_query",
    "boost": 1.1,
    "negative": {
      "match_all": {
        "_name": "query"
      }
    },
    "negative_boost": 1.12,
    "positive": {
      "match_all": {
        "_name": "filter"
      }
    }
  }
}
----


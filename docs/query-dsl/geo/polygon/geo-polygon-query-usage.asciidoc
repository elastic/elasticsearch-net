

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Tests/QueryDsl/Geo/Polygon/GeoPolygonQueryUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[geo-polygon-query-usage]]
=== Geo Polygon Query Usage

==== Fluent DSL example

[source,csharp]
----
q
.GeoPolygon(c => c
    .Name("named_query")
    .Boost(1.1)
    .Field(p => p.LocationPoint)
    .ValidationMethod(GeoValidationMethod.Strict)
    .Points(new GeoLocation(45, -45), new GeoLocation(-34, 34), new GeoLocation(70, -70))
)
----

==== Object Initializer syntax example

[source,csharp]
----
new GeoPolygonQuery
{
    Boost = 1.1,
    Name = "named_query",
    ValidationMethod = GeoValidationMethod.Strict,
    Points = new[] { new GeoLocation(45, -45), new GeoLocation(-34, 34), new GeoLocation(70, -70) },
    Field = Infer.Field<Project>(p => p.LocationPoint)
}
----

[source,javascript]
.Example json output
----
{
  "geo_polygon": {
    "_name": "named_query",
    "boost": 1.1,
    "validation_method": "strict",
    "locationPoint": {
      "points": [
        {
          "lat": 45.0,
          "lon": -45.0
        },
        {
          "lat": -34.0,
          "lon": 34.0
        },
        {
          "lat": 70.0,
          "lon": -70.0
        }
      ]
    }
  }
}
----


// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using System.Text.Json.Serialization;

namespace Nest
{
    public class CompletionStats
    {
        [JsonPropertyName("size_in_bytes")]
        public long SizeInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class DocStats
    {
        [JsonPropertyName("count")]
        public long Count { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("deleted")]
        public long Deleted { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class FielddataStats
    {
        [JsonPropertyName("evictions")]
        public long Evictions { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("memory_size_in_bytes")]
        public long MemorySizeInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class FlushStats
    {
        [JsonPropertyName("periodic")]
        public long Periodic { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total")]
        public long Total { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_time")]
        public string TotalTime { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_time_in_millis")]
        public long TotalTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class GetStats
    {
        [JsonPropertyName("current")]
        public long Current { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("exists_time")]
        public string ExistsTime { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("exists_time_in_millis")]
        public long ExistsTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("exists_total")]
        public long ExistsTotal { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("missing_time")]
        public string MissingTime { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("missing_time_in_millis")]
        public long MissingTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("missing_total")]
        public long MissingTotal { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("time")]
        public string Time { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("time_in_millis")]
        public long TimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total")]
        public long Total { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class IndexingStats
    {
        [JsonPropertyName("index_current")]
        public long IndexCurrent { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("delete_current")]
        public long DeleteCurrent { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("delete_time")]
        public string DeleteTime { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("delete_time_in_millis")]
        public long DeleteTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("delete_total")]
        public long DeleteTotal { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("is_throttled")]
        public bool IsThrottled { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("noop_update_total")]
        public long NoopUpdateTotal { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("throttle_time")]
        public string ThrottleTime { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("throttle_time_in_millis")]
        public long ThrottleTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("index_time")]
        public string IndexTime { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("index_time_in_millis")]
        public long IndexTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("index_total")]
        public long IndexTotal { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("index_failed")]
        public long IndexFailed { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class MergesStats
    {
        [JsonPropertyName("current")]
        public long Current { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("current_docs")]
        public long CurrentDocs { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("current_size")]
        public string CurrentSize { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("current_size_in_bytes")]
        public long CurrentSizeInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total")]
        public long Total { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_auto_throttle")]
        public string TotalAutoThrottle { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_auto_throttle_in_bytes")]
        public long TotalAutoThrottleInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_docs")]
        public long TotalDocs { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_size")]
        public string TotalSize { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_size_in_bytes")]
        public long TotalSizeInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_stopped_time")]
        public string TotalStoppedTime { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_stopped_time_in_millis")]
        public long TotalStoppedTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_throttled_time")]
        public string TotalThrottledTime { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_throttled_time_in_millis")]
        public long TotalThrottledTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_time")]
        public string TotalTime { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_time_in_millis")]
        public long TotalTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class PluginStats
    {
        [JsonPropertyName("classname")]
        public string Classname { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("description")]
        public string Description { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("elasticsearch_version")]
        public string ElasticsearchVersion { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("has_native_controller")]
        public bool HasNativeController { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("java_version")]
        public string JavaVersion { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("name")]
        public string Name { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("version")]
        public string Version { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("licensed")]
        public bool Licensed { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("type")]
        public string Type { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class QueryCacheStats
    {
        [JsonPropertyName("cache_count")]
        public long CacheCount { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("cache_size")]
        public long CacheSize { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("evictions")]
        public long Evictions { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("hit_count")]
        public long HitCount { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("memory_size_in_bytes")]
        public long MemorySizeInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("miss_count")]
        public long MissCount { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_count")]
        public long TotalCount { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class RecoveryStats
    {
        [JsonPropertyName("current_as_source")]
        public long CurrentAsSource { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("current_as_target")]
        public long CurrentAsTarget { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("throttle_time")]
        public string ThrottleTime { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("throttle_time_in_millis")]
        public long ThrottleTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class RefreshStats
    {
        [JsonPropertyName("external_total")]
        public long ExternalTotal { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("external_total_time_in_millis")]
        public long ExternalTotalTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("listeners")]
        public long Listeners { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total")]
        public long Total { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_time")]
        public string TotalTime { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_time_in_millis")]
        public long TotalTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class RequestCacheStats
    {
        [JsonPropertyName("evictions")]
        public long Evictions { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("hit_count")]
        public long HitCount { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("memory_size")]
        public string MemorySize { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("memory_size_in_bytes")]
        public long MemorySizeInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("miss_count")]
        public long MissCount { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class SearchStats
    {
        [JsonPropertyName("fetch_current")]
        public long FetchCurrent { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("fetch_time_in_millis")]
        public long FetchTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("fetch_total")]
        public long FetchTotal { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("open_contexts")]
        public long OpenContexts { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("query_current")]
        public long QueryCurrent { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("query_time_in_millis")]
        public long QueryTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("query_total")]
        public long QueryTotal { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("scroll_current")]
        public long ScrollCurrent { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("scroll_time_in_millis")]
        public long ScrollTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("scroll_total")]
        public long ScrollTotal { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("suggest_current")]
        public long SuggestCurrent { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("suggest_time_in_millis")]
        public long SuggestTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("suggest_total")]
        public long SuggestTotal { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class SegmentsStats
    {
        [JsonPropertyName("count")]
        public long Count { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("doc_values_memory_in_bytes")]
        public long DocValuesMemoryInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("fixed_bit_set_memory_in_bytes")]
        public long FixedBitSetMemoryInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("index_writer_max_memory_in_bytes")]
        public long IndexWriterMaxMemoryInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("index_writer_memory_in_bytes")]
        public long IndexWriterMemoryInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("max_unsafe_auto_id_timestamp")]
        public long MaxUnsafeAutoIdTimestamp { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("memory_in_bytes")]
        public long MemoryInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("norms_memory_in_bytes")]
        public long NormsMemoryInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("points_memory_in_bytes")]
        public long PointsMemoryInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("stored_fields_memory_in_bytes")]
        public long StoredFieldsMemoryInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("terms_memory_in_bytes")]
        public long TermsMemoryInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("term_vectors_memory_in_bytes")]
        public long TermVectorsMemoryInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("version_map_memory_in_bytes")]
        public long VersionMapMemoryInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class StoreStats
    {
        [JsonPropertyName("size")]
        public string Size { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("size_in_bytes")]
        public double SizeInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("reserved_in_bytes")]
        public double ReservedInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class TranslogStats
    {
        [JsonPropertyName("earliest_last_modified_age")]
        public long EarliestLastModifiedAge { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("operations")]
        public long Operations { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("size")]
        public string Size { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("size_in_bytes")]
        public long SizeInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("uncommitted_operations")]
        public int UncommittedOperations { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("uncommitted_size")]
        public string UncommittedSize { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("uncommitted_size_in_bytes")]
        public long UncommittedSizeInBytes { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class WarmerStats
    {
        [JsonPropertyName("current")]
        public long Current { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total")]
        public long Total { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_time")]
        public string TotalTime { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total_time_in_millis")]
        public long TotalTimeInMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }
}
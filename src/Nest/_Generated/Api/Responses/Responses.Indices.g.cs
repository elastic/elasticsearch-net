// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// ------------------------------------------------

using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Nest
{
	public partial class IndicesAddBlockResponse : AcknowledgedResponseBase
	{
		[JsonPropertyName("indices")]
		public IReadOnlyCollection<IndicesBlockStatus> Indices
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesAnalyzeResponse : ResponseBase
	{
		[JsonPropertyName("detail")]
		public AnalyzeDetail? Detail
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("tokens")]
		public IReadOnlyCollection<AnalyzeToken>? Tokens
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesClearCacheResponse : ShardsOperationResponseBase
	{
	}

	public partial class IndicesCloneResponse : AcknowledgedResponseBase
	{
		[JsonPropertyName("index")]
		public IndexName Index
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesCloseResponse : AcknowledgedResponseBase
	{
		[JsonPropertyName("indices")]
		public Dictionary<IndexName, CloseIndexResult> Indices
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesCreateResponse : AcknowledgedResponseBase
	{
		[JsonPropertyName("index")]
		public IndexName Index
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesCreateDataStreamResponse : AcknowledgedResponseBase
	{
	}

	public partial class IndicesDataStreamsStatsResponse : ResponseBase
	{
		[JsonPropertyName("backing_indices")]
		public int BackingIndices
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("data_stream_count")]
		public int DataStreamCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("data_streams")]
		public IReadOnlyCollection<DataStreamsStatsItem> DataStreams
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_shards")]
		public ShardStatistics Shards
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total_store_size_bytes")]
		public int TotalStoreSizeBytes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total_store_sizes")]
		public ByteSize? TotalStoreSizes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class DeleteIndicesResponse : IndicesResponseBase
	{
	}

	public partial class IndicesDeleteAliasResponse : AcknowledgedResponseBase
	{
	}

	public partial class IndicesDeleteDataStreamResponse : AcknowledgedResponseBase
	{
	}

	public partial class IndicesDeleteIndexTemplateResponse : AcknowledgedResponseBase
	{
	}

	public partial class IndicesDeleteTemplateResponse : AcknowledgedResponseBase
	{
	}

	public partial class IndicesExistsResponse : ExistsResponseBase
	{
	}

	public partial class IndicesExistsAliasResponse : ResponseBase
	{
	}

	public partial class IndicesExistsIndexTemplateResponse : ResponseBase
	{
	}

	public partial class IndicesExistsTemplateResponse : ResponseBase
	{
	}

	public partial class IndicesExistsTypeResponse : ResponseBase
	{
	}

	public partial class IndicesFlushResponse : ShardsOperationResponseBase
	{
	}

	public partial class IndicesForcemergeResponse : ShardsOperationResponseBase
	{
	}

	public partial class GetIndicesResponse : DictionaryResponseBase
	{
	}

	public partial class IndicesGetAliasResponse : DictionaryResponseBase
	{
	}

	public partial class IndicesGetDataStreamResponse : ResponseBase
	{
		[JsonPropertyName("data_streams")]
		public IReadOnlyCollection<IndicesGetDataStreamItem> DataStreams
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesGetFieldMappingResponse : DictionaryResponseBase
	{
	}

	public partial class IndicesGetIndexTemplateResponse : ResponseBase
	{
		[JsonPropertyName("index_templates")]
		public IReadOnlyCollection<IndexTemplateItem> IndexTemplates
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesGetMappingResponse : DictionaryResponseBase
	{
	}

	public partial class IndicesGetSettingsResponse : DictionaryResponseBase
	{
	}

	public partial class IndicesGetTemplateResponse : DictionaryResponseBase
	{
	}

	public partial class IndicesMigrateToDataStreamResponse : AcknowledgedResponseBase
	{
	}

	public partial class IndicesOpenResponse : AcknowledgedResponseBase
	{
		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesPromoteDataStreamResponse : ResponseBase
	{
		[JsonPropertyName("stub")]
		public int Stub
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesPutAliasResponse : AcknowledgedResponseBase
	{
	}

	public partial class IndicesPutIndexTemplateResponse : AcknowledgedResponseBase
	{
	}

	public partial class IndicesPutMappingResponse : IndicesResponseBase
	{
	}

	public partial class IndicesPutSettingsResponse : AcknowledgedResponseBase
	{
	}

	public partial class IndicesPutTemplateResponse : AcknowledgedResponseBase
	{
	}

	public partial class IndicesRecoveryResponse : DictionaryResponseBase
	{
	}

	public partial class IndicesRefreshResponse : ShardsOperationResponseBase
	{
	}

	public partial class IndicesReloadSearchAnalyzersResponse : ResponseBase
	{
		[JsonPropertyName("reload_details")]
		public IReadOnlyCollection<ReloadDetails> ReloadDetails
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_shards")]
		public ShardStatistics Shards
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesResolveIndexResponse : ResponseBase
	{
		[JsonPropertyName("aliases")]
		public IReadOnlyCollection<ResolveIndexAliasItem> Aliases
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("data_streams")]
		public IReadOnlyCollection<ResolveIndexDataStreamsItem> DataStreams
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("indices")]
		public IReadOnlyCollection<ResolveIndexItem> Indices
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesRolloverResponse : AcknowledgedResponseBase
	{
		[JsonPropertyName("conditions")]
		public Dictionary<string, bool> Conditions
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("dry_run")]
		public bool DryRun
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("new_index")]
		public string NewIndex
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("old_index")]
		public string OldIndex
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("rolled_over")]
		public bool RolledOver
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesSegmentsResponse : ResponseBase
	{
		[JsonPropertyName("indices")]
		public Dictionary<string, IndexSegment> Indices
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_shards")]
		public ShardStatistics Shards
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesShardStoresResponse : ResponseBase
	{
		[JsonPropertyName("indices")]
		public Dictionary<IndexName, IndicesShardStores> Indices
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesShrinkResponse : AcknowledgedResponseBase
	{
		[JsonPropertyName("index")]
		public IndexName Index
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesSimulateIndexTemplateResponse : ResponseBase
	{
	}

	public partial class IndicesSimulateTemplateResponse : ResponseBase
	{
		[JsonPropertyName("stub")]
		public string Stub
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesSplitResponse : AcknowledgedResponseBase
	{
		[JsonPropertyName("index")]
		public IndexName Index
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesStatsResponse : ResponseBase
	{
		[JsonPropertyName("_all")]
		public IndicesStats All
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("indices")]
		public Dictionary<string, IndicesStats>? Indices
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_shards")]
		public ShardStatistics Shards
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesUpdateAliasesResponse : AcknowledgedResponseBase
	{
	}

	public partial class IndicesValidateQueryResponse : ResponseBase
	{
		[JsonPropertyName("explanations")]
		public IReadOnlyCollection<IndicesValidationExplanation>? Explanations
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_shards")]
		public ShardStatistics? Shards
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("valid")]
		public bool Valid
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}
}
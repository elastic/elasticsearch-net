// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using System;
using System.Text.Json.Serialization;

namespace Nest
{
    public class IndexAddBlockResponse : AcknowledgedResponseBase
    {
        [JsonPropertyName("shards_acknowledged")]
        public bool ShardsAcknowledged { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class AnalyzeResponse : ResponseBase
    {
    }

    public class ClearCacheResponse : ShardsOperationResponseBase
    {
    }

    public class CloneIndexResponse : AcknowledgedResponseBase
    {
        [JsonPropertyName("index")]
        public string Index { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("shards_acknowledged")]
        public bool ShardsAcknowledged { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class CloseIndexResponse : AcknowledgedResponseBase
    {
        [JsonPropertyName("shards_acknowledged")]
        public bool ShardsAcknowledged { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class CreateIndexResponse : AcknowledgedResponseBase
    {
        [JsonPropertyName("index")]
        public string Index { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("shards_acknowledged")]
        public bool ShardsAcknowledged { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class DeleteIndexResponse : IndicesResponseBase
    {
    }

    public class DeleteAliasResponse : ResponseBase
    {
    }

    public class DeleteIndexTemplateResponse : AcknowledgedResponseBase
    {
    }

    public class IndexExistsResponse : ResponseBase
    {
    }

    public class AliasExistsResponse : ResponseBase
    {
    }

    public class IndexTemplateExistsResponse : ResponseBase
    {
    }

    public class TypeExistsResponse : ResponseBase
    {
    }

    public class FlushResponse : ShardsOperationResponseBase
    {
    }

    public class ForceMergeResponse : ShardsOperationResponseBase
    {
    }

    public class FreezeIndexResponse : AcknowledgedResponseBase
    {
        [JsonPropertyName("shards_acknowledged")]
        public bool ShardsAcknowledged { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class GetIndexResponse : DictionaryResponseBase
    {
    }

    public class GetAliasResponse : DictionaryResponseBase
    {
    }

    public class GetFieldMappingResponse : DictionaryResponseBase
    {
    }

    public class GetMappingResponse : DictionaryResponseBase
    {
    }

    public class GetIndexSettingsResponse : DictionaryResponseBase
    {
    }

    public class GetIndexTemplateResponse : DictionaryResponseBase
    {
    }

    public class OpenIndexResponse : AcknowledgedResponseBase
    {
        [JsonPropertyName("shards_acknowledged")]
        public bool ShardsAcknowledged { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class PutAliasResponse : ResponseBase
    {
    }

    public class PutMappingResponse : IndicesResponseBase
    {
    }

    public class UpdateIndexSettingsResponse : AcknowledgedResponseBase
    {
    }

    public class PutIndexTemplateResponse : AcknowledgedResponseBase
    {
    }

    public class RecoveryStatusResponse : DictionaryResponseBase
    {
    }

    public class RefreshResponse : ShardsOperationResponseBase
    {
    }

    public class ReloadSearchAnalyzersResponse : ResponseBase
    {
    }

    public class RolloverIndexResponse : AcknowledgedResponseBase
    {
        [JsonPropertyName("dry_run")]
        public bool DryRun { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("new_index")]
        public string NewIndex { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("old_index")]
        public string OldIndex { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("rolled_over")]
        public bool RolledOver { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("shards_acknowledged")]
        public bool ShardsAcknowledged { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class SegmentsResponse : ResponseBase
    {
    }

    public class IndicesShardStoresResponse : ResponseBase
    {
    }

    public class ShrinkIndexResponse : AcknowledgedResponseBase
    {
        [JsonPropertyName("shards_acknowledged")]
        public bool ShardsAcknowledged { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class SplitIndexResponse : AcknowledgedResponseBase
    {
        [JsonPropertyName("shards_acknowledged")]
        public bool ShardsAcknowledged { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class IndicesStatsResponse : ResponseBase
    {
    }

    public class UnfreezeIndexResponse : AcknowledgedResponseBase
    {
        [JsonPropertyName("shards_acknowledged")]
        public bool ShardsAcknowledged { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class BulkAliasResponse : AcknowledgedResponseBase
    {
    }

    public class ValidateQueryResponse : ResponseBase
    {
        [JsonPropertyName("valid")]
        public bool Valid { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }
}
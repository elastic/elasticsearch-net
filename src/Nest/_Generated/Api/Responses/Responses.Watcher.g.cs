// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using OneOf;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Nest.Watcher
{
	public partial class AckWatchResponse : ResponseBase
	{
		[JsonPropertyName("status")]
		public Nest.Watcher.WatchStatus Status
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ActivateWatchResponse : ResponseBase
	{
		[JsonPropertyName("status")]
		public Nest.Watcher.ActivationStatus Status
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class DeactivateWatchResponse : ResponseBase
	{
		[JsonPropertyName("status")]
		public Nest.Watcher.ActivationStatus Status
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class DeleteWatchResponse : ResponseBase
	{
		[JsonPropertyName("found")]
		public bool Found
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_id")]
		public Nest.Id Id
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_version")]
		public Nest.VersionNumber Version
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ExecuteWatchResponse : ResponseBase
	{
		[JsonPropertyName("_id")]
		public Nest.Id Id
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("watch_record")]
		public Nest.Watcher.ExecuteWatch.WatchRecord WatchRecord
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GetWatchResponse : ResponseBase
	{
		[JsonPropertyName("found")]
		public bool Found
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_id")]
		public Nest.Id Id
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_primary_term")]
		public int? PrimaryTerm
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_seq_no")]
		public Nest.SequenceNumber? SeqNo
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("status")]
		public Nest.Watcher.WatchStatus? Status
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_version")]
		public Nest.VersionNumber? Version
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("watch")]
		public Nest.Watcher.Watch? Watch
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class PutWatchResponse : ResponseBase
	{
		[JsonPropertyName("created")]
		public bool Created
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_id")]
		public Nest.Id Id
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_primary_term")]
		public long PrimaryTerm
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_seq_no")]
		public Nest.SequenceNumber SeqNo
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_version")]
		public Nest.VersionNumber Version
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class QueryWatchesResponse : ResponseBase
	{
		[JsonPropertyName("count")]
		public int Count
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("watches")]
		public IReadOnlyCollection<Nest.Watcher.QueryWatch> Watches
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class StartResponse : AcknowledgedResponseBase
	{
	}

	public partial class StatsResponse : ResponseBase
	{
		[JsonPropertyName("cluster_name")]
		public Nest.Name ClusterName
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("manually_stopped")]
		public bool ManuallyStopped
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_nodes")]
		public Nest.NodeStatistics node_stats
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("stats")]
		public IReadOnlyCollection<Nest.Watcher.Stats.WatcherNodeStats> Stats
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class StopResponse : AcknowledgedResponseBase
	{
	}
}
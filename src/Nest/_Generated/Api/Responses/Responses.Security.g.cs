// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// ------------------------------------------------

using OneOf;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Nest.Ssl
{
	public partial class AuthenticateResponse : ResponseBase
	{
		[JsonPropertyName("authentication_realm")]
		public Nest.Security.RealmInfo AuthenticationRealm
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("authentication_type")]
		public string AuthenticationType
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("email")]
		public string? Email
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("enabled")]
		public bool Enabled
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("full_name")]
		public Nest.Name? FullName
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("lookup_realm")]
		public Nest.Security.RealmInfo LookupRealm
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("metadata")]
		public Nest.Metadata Metadata
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("roles")]
		public IReadOnlyCollection<string> Roles
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("token")]
		public Nest.Security.Authenticate.Token? Token
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("username")]
		public Nest.Username Username
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ChangePasswordResponse : ResponseBase
	{
	}

	public partial class ClearApiKeyCacheResponse : ResponseBase
	{
		[JsonPropertyName("cluster_name")]
		public Nest.Name ClusterName
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_nodes")]
		public Nest.NodeStatistics node_stats
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("nodes")]
		public Dictionary<string, Nest.Security.ClusterNode> Nodes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ClearCachedPrivilegesResponse : ResponseBase
	{
		[JsonPropertyName("cluster_name")]
		public Nest.Name ClusterName
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_nodes")]
		public Nest.NodeStatistics node_stats
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("nodes")]
		public Dictionary<string, Nest.Security.ClusterNode> Nodes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ClearCachedRealmsResponse : ResponseBase
	{
		[JsonPropertyName("cluster_name")]
		public Nest.Name ClusterName
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_nodes")]
		public Nest.NodeStatistics node_stats
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("nodes")]
		public Dictionary<string, Nest.Security.ClusterNode> Nodes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ClearCachedRolesResponse : ResponseBase
	{
		[JsonPropertyName("cluster_name")]
		public Nest.Name ClusterName
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_nodes")]
		public Nest.NodeStatistics node_stats
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("nodes")]
		public Dictionary<string, Nest.Security.ClusterNode> Nodes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ClearCachedServiceTokensResponse : ResponseBase
	{
		[JsonPropertyName("cluster_name")]
		public Nest.Name ClusterName
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_nodes")]
		public Nest.NodeStatistics node_stats
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("nodes")]
		public Dictionary<string, Nest.Security.ClusterNode> Nodes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class CreateApiKeyResponse : ResponseBase
	{
		[JsonPropertyName("api_key")]
		public string ApiKey
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("expiration")]
		public long? Expiration
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("id")]
		public Nest.Id Id
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("name")]
		public Nest.Name Name
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class CreateServiceTokenResponse : ResponseBase
	{
		[JsonPropertyName("created")]
		public bool Created
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("token")]
		public Nest.Security.CreateServiceToken.Token Token
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class DeletePrivilegesResponse : DictionaryResponseBase<string, Dictionary<string, Nest.Security.DeletePrivileges.FoundStatus>>
	{
	}

	public partial class DeleteRoleResponse : ResponseBase
	{
		[JsonPropertyName("found")]
		public bool Found
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class DeleteRoleMappingResponse : ResponseBase
	{
		[JsonPropertyName("found")]
		public bool Found
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class DeleteServiceTokenResponse : ResponseBase
	{
		[JsonPropertyName("found")]
		public bool Found
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class DeleteUserResponse : ResponseBase
	{
		[JsonPropertyName("found")]
		public bool Found
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class DisableUserResponse : ResponseBase
	{
	}

	public partial class EnableUserResponse : ResponseBase
	{
	}

	public partial class GetApiKeyResponse : ResponseBase
	{
		[JsonPropertyName("api_keys")]
		public IReadOnlyCollection<Nest.Security.GetApiKey.ApiKey> ApiKeys
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GetBuiltinPrivilegesResponse : ResponseBase
	{
		[JsonPropertyName("cluster")]
		public IReadOnlyCollection<string> Cluster
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("index")]
		public Nest.Indices Index
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GetPrivilegesResponse : DictionaryResponseBase<string, Dictionary<string, Nest.Security.PutPrivileges.Actions>>
	{
	}

	public partial class GetRoleResponse : DictionaryResponseBase<string, Nest.Security.GetRole.Role>
	{
	}

	public partial class GetRoleMappingResponse : DictionaryResponseBase<string, Nest.Security.RoleMapping>
	{
	}

	public partial class GetServiceAccountsResponse : DictionaryResponseBase<string, Nest.Security.GetServiceAccounts.RoleDescriptorWrapper>
	{
	}

	public partial class GetServiceCredentialsResponse : ResponseBase
	{
		[JsonPropertyName("count")]
		public int Count
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("file_tokens")]
		public Dictionary<string, Nest.EmptyObject> FileTokens
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("node_name")]
		public Nest.NodeName NodeName
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("service_account")]
		public string ServiceAccount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("tokens")]
		public Dictionary<string, Nest.EmptyObject> Tokens
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GetTokenResponse : ResponseBase
	{
		[JsonPropertyName("access_token")]
		public string AccessToken
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("authentication")]
		public Nest.Security.GetToken.AuthenticatedUser Authentication
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("expires_in")]
		public long ExpiresIn
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("kerberos_authentication_response_token")]
		public string? KerberosAuthenticationResponseToken
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("refresh_token")]
		public string RefreshToken
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("scope")]
		public string? Scope
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("type")]
		public string Type
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GetUserResponse : DictionaryResponseBase<string, Nest.Security.User>
	{
	}

	public partial class GetUserPrivilegesResponse : ResponseBase
	{
		[JsonPropertyName("applications")]
		public IReadOnlyCollection<Nest.Security.ApplicationPrivileges> Applications
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("cluster")]
		public IReadOnlyCollection<string> Cluster
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("global")]
		public IReadOnlyCollection<Nest.Security.GlobalPrivileges> Global
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("indices")]
		public IReadOnlyCollection<Nest.Security.IndicesPrivileges> Indices
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("run_as")]
		public IReadOnlyCollection<string> RunAs
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GrantApiKeyResponse : ResponseBase
	{
		[JsonPropertyName("api_key")]
		public string ApiKey
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("expiration")]
		public Nest.EpochMillis? Expiration
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("id")]
		public Nest.Id Id
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("name")]
		public Nest.Name Name
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class HasPrivilegesResponse : ResponseBase
	{
		[JsonPropertyName("application")]
		public Nest.Security.HasPrivileges.ApplicationsPrivileges Application
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("cluster")]
		public Dictionary<string, bool> Cluster
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("has_all_requested")]
		public bool HasAllRequested
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("index")]
		public Dictionary<Nest.IndexName, Nest.Security.HasPrivileges.Privileges> Index
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("username")]
		public Nest.Username Username
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class InvalidateApiKeyResponse : ResponseBase
	{
		[JsonPropertyName("error_count")]
		public int ErrorCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("error_details")]
		public IReadOnlyCollection<Nest.ErrorCause>? ErrorDetails
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("invalidated_api_keys")]
		public IReadOnlyCollection<string> InvalidatedApiKeys
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("previously_invalidated_api_keys")]
		public IReadOnlyCollection<string> PreviouslyInvalidatedApiKeys
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class InvalidateTokenResponse : ResponseBase
	{
		[JsonPropertyName("error_count")]
		public long ErrorCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("error_details")]
		public IReadOnlyCollection<Nest.ErrorCause>? ErrorDetails
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("invalidated_tokens")]
		public long InvalidatedTokens
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("previously_invalidated_tokens")]
		public long PreviouslyInvalidatedTokens
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class PutPrivilegesResponse : DictionaryResponseBase<string, Dictionary<string, Nest.Security.CreatedStatus>>
	{
	}

	public partial class PutRoleResponse : ResponseBase
	{
		[JsonPropertyName("role")]
		public Nest.Security.CreatedStatus Role
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class PutRoleMappingResponse : ResponseBase
	{
		[JsonPropertyName("created")]
		public bool? Created
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("role_mapping")]
		public Nest.Security.CreatedStatus RoleMapping
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class PutUserResponse : ResponseBase
	{
		[JsonPropertyName("created")]
		public bool Created
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class CertificatesResponse : ResponseBase
	{
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using System;
using System.Text.Json.Serialization;

namespace Nest
{
    public abstract class AcknowledgedResponseBase : ResponseBase
    {
        [JsonPropertyName("acknowledged")]
        public bool Acknowledged { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public abstract class ArrayResponseBase : ResponseBase
    {
    }

    public abstract class AsyncSearchDocumentResponseBase : AsyncSearchResponseBase
    {
    }

    public abstract class AsyncSearchResponseBase : ResponseBase
    {
        [JsonPropertyName("is_partial")]
        public bool IsPartial { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("is_running")]
        public bool IsRunning { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public abstract class CatResponseBase : ResponseBase
    {
    }

    public abstract class DictionaryResponseBase : ResponseBase
    {
    }

    public abstract class EmptyResponseBase : ResponseBase
    {
    }

    public abstract class EqlSearchResponseBase : ResponseBase
    {
        [JsonPropertyName("is_partial")]
        public bool IsPartial { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("is_running")]
        public bool IsRunning { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("took")]
        public int Took { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("timed_out")]
        public bool TimedOut { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public abstract class IndicesResponseBase : AcknowledgedResponseBase
    {
    }

    public abstract class NodesResponseBase : ResponseBase
    {
    }

    public abstract class ShardsOperationResponseBase : ResponseBase
    {
    }

    public abstract class WriteResponseBase : ResponseBase
    {
        [JsonPropertyName("_primary_term")]
        public long PrimaryTerm { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("_seq_no")]
        public long SeqNo { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("forced_refresh")]
        public bool ForcedRefresh { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }
}
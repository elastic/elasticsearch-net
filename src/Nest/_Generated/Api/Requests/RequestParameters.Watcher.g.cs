// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using System;
using System.Threading;
using System.Threading.Tasks;
using Elastic.Transport;

#nullable restore
namespace Nest
{
    public class AcknowledgeWatchRequestParameters : RequestParameters<AcknowledgeWatchRequestParameters>
    {
    }

    public class ActivateWatchRequestParameters : RequestParameters<ActivateWatchRequestParameters>
    {
    }

    public class DeactivateWatchRequestParameters : RequestParameters<DeactivateWatchRequestParameters>
    {
    }

    public class DeleteWatchRequestParameters : RequestParameters<DeleteWatchRequestParameters>
    {
    }

    public class ExecuteWatchRequestParameters : RequestParameters<ExecuteWatchRequestParameters>
    {
        public bool? Debug { get => Q<bool?>("debug"); set => Q("debug", value); }
    }

    public class GetWatchRequestParameters : RequestParameters<GetWatchRequestParameters>
    {
    }

    public class PutWatchRequestParameters : RequestParameters<PutWatchRequestParameters>
    {
        public bool? Active { get => Q<bool?>("active"); set => Q("active", value); }

        public long? IfPrimaryTerm { get => Q<long?>("if_primary_term"); set => Q("if_primary_term", value); }

        public long? IfSequenceNumber { get => Q<long?>("if_sequence_number"); set => Q("if_sequence_number", value); }

        public long? Version { get => Q<long?>("version"); set => Q("version", value); }
    }

    public class StartWatcherRequestParameters : RequestParameters<StartWatcherRequestParameters>
    {
    }

    public class WatcherStatsRequestParameters : RequestParameters<WatcherStatsRequestParameters>
    {
        public bool? EmitStacktraces { get => Q<bool?>("emit_stacktraces"); set => Q("emit_stacktraces", value); }
    }

    public class StopWatcherRequestParameters : RequestParameters<StopWatcherRequestParameters>
    {
    }
}
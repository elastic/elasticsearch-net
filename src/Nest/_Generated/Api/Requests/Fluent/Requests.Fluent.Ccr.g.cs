// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;

#nullable restore
namespace Nest.Ccr
{
	public partial class DeleteAutoFollowPatternDescriptor : RequestDescriptorBase<DeleteAutoFollowPatternDescriptor, DeleteAutoFollowPatternRequestParameters, IDeleteAutoFollowPatternRequest>, IDeleteAutoFollowPatternRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationDeleteAutoFollowPattern;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		///<summary>/_ccr/auto_follow/{name}</summary>
        public DeleteAutoFollowPatternDescriptor(Nest.Name name) : base(r => r.Required("name", name))
		{
		}
	}

	public partial class FollowDescriptor : RequestDescriptorBase<FollowDescriptor, FollowRequestParameters, IFollowRequest>, IFollowRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationFollow;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => false;
		///<summary>/{index}/_ccr/follow</summary>
        public FollowDescriptor(Nest.IndexName index) : base(r => r.Required("index", index))
		{
		}
	}

	public partial class FollowInfoDescriptor : RequestDescriptorBase<FollowInfoDescriptor, FollowInfoRequestParameters, IFollowInfoRequest>, IFollowInfoRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationFollowInfo;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/{index}/_ccr/info</summary>
        public FollowInfoDescriptor(Nest.Indices index) : base(r => r.Required("index", index))
		{
		}
	}

	public partial class FollowStatsDescriptor : RequestDescriptorBase<FollowStatsDescriptor, FollowStatsRequestParameters, IFollowStatsRequest>, IFollowStatsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationFollowStats;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/{index}/_ccr/stats</summary>
        public FollowStatsDescriptor(Nest.Indices index) : base(r => r.Required("index", index))
		{
		}
	}

	public partial class ForgetFollowerDescriptor : RequestDescriptorBase<ForgetFollowerDescriptor, ForgetFollowerRequestParameters, IForgetFollowerRequest>, IForgetFollowerRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationForgetFollower;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/{index}/_ccr/forget_follower</summary>
        public ForgetFollowerDescriptor(Nest.IndexName index) : base(r => r.Required("index", index))
		{
		}
	}

	public partial class GetAutoFollowPatternDescriptor : RequestDescriptorBase<GetAutoFollowPatternDescriptor, GetAutoFollowPatternRequestParameters, IGetAutoFollowPatternRequest>, IGetAutoFollowPatternRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationGetAutoFollowPattern;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/_ccr/auto_follow</summary>
        public GetAutoFollowPatternDescriptor() : base()
		{
		}

		///<summary>/_ccr/auto_follow/{name}</summary>
        public GetAutoFollowPatternDescriptor(Nest.Name? name) : base(r => r.Optional("name", name))
		{
		}
	}

	public partial class PauseAutoFollowPatternDescriptor : RequestDescriptorBase<PauseAutoFollowPatternDescriptor, PauseAutoFollowPatternRequestParameters, IPauseAutoFollowPatternRequest>, IPauseAutoFollowPatternRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationPauseAutoFollowPattern;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ccr/auto_follow/{name}/pause</summary>
        public PauseAutoFollowPatternDescriptor(Nest.Name name) : base(r => r.Required("name", name))
		{
		}
	}

	public partial class PauseFollowDescriptor : RequestDescriptorBase<PauseFollowDescriptor, PauseFollowRequestParameters, IPauseFollowRequest>, IPauseFollowRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationPauseFollow;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/{index}/_ccr/pause_follow</summary>
        public PauseFollowDescriptor(Nest.IndexName index) : base(r => r.Required("index", index))
		{
		}
	}

	public partial class PutAutoFollowPatternDescriptor : RequestDescriptorBase<PutAutoFollowPatternDescriptor, PutAutoFollowPatternRequestParameters, IPutAutoFollowPatternRequest>, IPutAutoFollowPatternRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationPutAutoFollowPattern;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => false;
		///<summary>/_ccr/auto_follow/{name}</summary>
        public PutAutoFollowPatternDescriptor(Nest.Name name) : base(r => r.Required("name", name))
		{
		}
	}

	public partial class ResumeAutoFollowPatternDescriptor : RequestDescriptorBase<ResumeAutoFollowPatternDescriptor, ResumeAutoFollowPatternRequestParameters, IResumeAutoFollowPatternRequest>, IResumeAutoFollowPatternRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationResumeAutoFollowPattern;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ccr/auto_follow/{name}/resume</summary>
        public ResumeAutoFollowPatternDescriptor(Nest.Name name) : base(r => r.Required("name", name))
		{
		}
	}

	public partial class ResumeFollowDescriptor : RequestDescriptorBase<ResumeFollowDescriptor, ResumeFollowRequestParameters, IResumeFollowRequest>, IResumeFollowRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationResumeFollow;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/{index}/_ccr/resume_follow</summary>
        public ResumeFollowDescriptor(Nest.IndexName index) : base(r => r.Required("index", index))
		{
		}
	}

	public partial class StatsDescriptor : RequestDescriptorBase<StatsDescriptor, StatsRequestParameters, IStatsRequest>, IStatsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationStats;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/_ccr/stats</summary>
        public StatsDescriptor() : base()
		{
		}
	}

	public partial class UnfollowDescriptor : RequestDescriptorBase<UnfollowDescriptor, UnfollowRequestParameters, IUnfollowRequest>, IUnfollowRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationUnfollow;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/{index}/_ccr/unfollow</summary>
        public UnfollowDescriptor(Nest.IndexName index) : base(r => r.Required("index", index))
		{
		}
	}
}
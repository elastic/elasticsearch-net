// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;

#nullable restore
namespace Nest.TransformManagement
{
	public partial class DeleteTransformDescriptor : RequestDescriptorBase<DeleteTransformDescriptor, DeleteTransformRequestParameters, IDeleteTransformRequest>, IDeleteTransformRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformManagementDeleteTransform;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		///<summary>/_transform/{transform_id}</summary>
        public DeleteTransformDescriptor(Nest.Name transform_id) : base(r => r.Required("transform_id", transform_id))
		{
		}
	}

	public partial class GetTransformDescriptor : RequestDescriptorBase<GetTransformDescriptor, GetTransformRequestParameters, IGetTransformRequest>, IGetTransformRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformManagementGetTransform;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/_transform/{transform_id}</summary>
        public GetTransformDescriptor(Nest.Name? transform_id) : base(r => r.Optional("transform_id", transform_id))
		{
		}

		///<summary>/_transform</summary>
        public GetTransformDescriptor() : base()
		{
		}
	}

	public partial class GetTransformStatsDescriptor : RequestDescriptorBase<GetTransformStatsDescriptor, GetTransformStatsRequestParameters, IGetTransformStatsRequest>, IGetTransformStatsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformManagementGetTransformStats;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/_transform/{transform_id}/_stats</summary>
        public GetTransformStatsDescriptor(Nest.Name transform_id) : base(r => r.Required("transform_id", transform_id))
		{
		}
	}

	public partial class PreviewTransformDescriptor : RequestDescriptorBase<PreviewTransformDescriptor, PreviewTransformRequestParameters, IPreviewTransformRequest>, IPreviewTransformRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformManagementPreviewTransform;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_transform/_preview</summary>
        public PreviewTransformDescriptor() : base()
		{
		}
	}

	public partial class PutTransformDescriptor : RequestDescriptorBase<PutTransformDescriptor, PutTransformRequestParameters, IPutTransformRequest>, IPutTransformRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformManagementPutTransform;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => false;
		///<summary>/_transform/{transform_id}</summary>
        public PutTransformDescriptor(Nest.Id transform_id) : base(r => r.Required("transform_id", transform_id))
		{
		}
	}

	public partial class StartTransformDescriptor : RequestDescriptorBase<StartTransformDescriptor, StartTransformRequestParameters, IStartTransformRequest>, IStartTransformRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformManagementStartTransform;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_transform/{transform_id}/_start</summary>
        public StartTransformDescriptor(Nest.Name transform_id) : base(r => r.Required("transform_id", transform_id))
		{
		}
	}

	public partial class StopTransformDescriptor : RequestDescriptorBase<StopTransformDescriptor, StopTransformRequestParameters, IStopTransformRequest>, IStopTransformRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformManagementStopTransform;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_transform/{transform_id}/_stop</summary>
        public StopTransformDescriptor(Nest.Name transform_id) : base(r => r.Required("transform_id", transform_id))
		{
		}
	}

	public partial class UpdateTransformDescriptor : RequestDescriptorBase<UpdateTransformDescriptor, UpdateTransformRequestParameters, IUpdateTransformRequest>, IUpdateTransformRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformManagementUpdateTransform;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_transform/{transform_id}/_update</summary>
        public UpdateTransformDescriptor(Nest.Id transform_id) : base(r => r.Required("transform_id", transform_id))
		{
		}
	}
}
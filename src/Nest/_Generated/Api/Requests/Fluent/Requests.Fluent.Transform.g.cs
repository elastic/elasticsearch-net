// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// ------------------------------------------------

using Elastic.Transport;

#nullable restore
namespace Nest
{
	public class DeleteTransformDescriptor : RequestDescriptorBase<DeleteTransformDescriptor, DeleteTransformRequestParameters, IDeleteTransformRequest>, IDeleteTransformRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformDeleteTransform;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
	}

	public class GetTransformDescriptor : RequestDescriptorBase<GetTransformDescriptor, GetTransformRequestParameters, IGetTransformRequest>, IGetTransformRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformGetTransform;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
	}

	public class GetTransformStatsDescriptor : RequestDescriptorBase<GetTransformStatsDescriptor, GetTransformStatsRequestParameters, IGetTransformStatsRequest>, IGetTransformStatsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformGetTransformStats;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
	}

	public class PreviewTransformDescriptor : RequestDescriptorBase<PreviewTransformDescriptor, PreviewTransformRequestParameters, IPreviewTransformRequest>, IPreviewTransformRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformPreviewTransform;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
	}

	public class PutTransformDescriptor : RequestDescriptorBase<PutTransformDescriptor, PutTransformRequestParameters, IPutTransformRequest>, IPutTransformRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformPutTransform;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => false;
	}

	public class StartTransformDescriptor : RequestDescriptorBase<StartTransformDescriptor, StartTransformRequestParameters, IStartTransformRequest>, IStartTransformRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformStartTransform;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
	}

	public class StopTransformDescriptor : RequestDescriptorBase<StopTransformDescriptor, StopTransformRequestParameters, IStopTransformRequest>, IStopTransformRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformStopTransform;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
	}

	public class UpdateTransformDescriptor : RequestDescriptorBase<UpdateTransformDescriptor, UpdateTransformRequestParameters, IUpdateTransformRequest>, IUpdateTransformRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TransformUpdateTransform;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Nest.Rollup
{
	[ConvertAs(typeof(DeleteJobRequest))]
	public partial interface IDeleteJobRequest : IRequest<DeleteJobRequestParameters>
	{
	}

	public partial class DeleteJobRequest : PlainRequestBase<DeleteJobRequestParameters>, IDeleteJobRequest
	{
		protected IDeleteJobRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.RollupDeleteJob;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_rollup/job/{id}</summary>
        public DeleteJobRequest(Nest.Id id) : base(r => r.Required("id", id))
		{
		}
	}

	[ConvertAs(typeof(GetJobsRequest))]
	public partial interface IGetJobsRequest : IRequest<GetJobsRequestParameters>
	{
	}

	public partial class GetJobsRequest : PlainRequestBase<GetJobsRequestParameters>, IGetJobsRequest
	{
		protected IGetJobsRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.RollupGetJobs;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;

		///<summary>/_rollup/job/{id}</summary>
        public GetJobsRequest(Nest.Id? id) : base(r => r.Optional("id", id))
		{
		}

		///<summary>/_rollup/job/</summary>
        public GetJobsRequest() : base()
		{
		}
	}

	[ConvertAs(typeof(GetRollupCapsRequest))]
	public partial interface IGetRollupCapsRequest : IRequest<GetRollupCapsRequestParameters>
	{
	}

	public partial class GetRollupCapsRequest : PlainRequestBase<GetRollupCapsRequestParameters>, IGetRollupCapsRequest
	{
		protected IGetRollupCapsRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.RollupGetRollupCaps;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;

		///<summary>/_rollup/data/{id}</summary>
        public GetRollupCapsRequest(Nest.Id? id) : base(r => r.Optional("id", id))
		{
		}

		///<summary>/_rollup/data/</summary>
        public GetRollupCapsRequest() : base()
		{
		}
	}

	[ConvertAs(typeof(GetRollupIndexCapsRequest))]
	public partial interface IGetRollupIndexCapsRequest : IRequest<GetRollupIndexCapsRequestParameters>
	{
	}

	public partial class GetRollupIndexCapsRequest : PlainRequestBase<GetRollupIndexCapsRequestParameters>, IGetRollupIndexCapsRequest
	{
		protected IGetRollupIndexCapsRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.RollupGetRollupIndexCaps;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/{index}/_rollup/data</summary>
        public GetRollupIndexCapsRequest(Nest.Id index) : base(r => r.Required("index", index))
		{
		}
	}

	[ConvertAs(typeof(PutJobRequest))]
	public partial interface IPutJobRequest : IRequest<PutJobRequestParameters>
	{
		string? Cron { get; set; }

		Nest.Rollup.Groupings? Groups { get; set; }

		string? IndexPattern { get; set; }

		IEnumerable<Nest.Rollup.FieldMetric>? Metrics { get; set; }

		long? PageSize { get; set; }

		Nest.IndexName? RollupIndex { get; set; }
	}

	public partial class PutJobRequest : PlainRequestBase<PutJobRequestParameters>, IPutJobRequest
	{
		protected IPutJobRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.RollupPutJob;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_rollup/job/{id}</summary>
        public PutJobRequest(Nest.Id id) : base(r => r.Required("id", id))
		{
		}

		[JsonPropertyName("cron")]
		public string? Cron { get; set; }

		[JsonPropertyName("groups")]
		public Nest.Rollup.Groupings? Groups { get; set; }

		[JsonPropertyName("index_pattern")]
		public string? IndexPattern { get; set; }

		[JsonPropertyName("metrics")]
		public IEnumerable<Nest.Rollup.FieldMetric>? Metrics { get; set; }

		[JsonPropertyName("page_size")]
		public long? PageSize { get; set; }

		[JsonPropertyName("rollup_index")]
		public Nest.IndexName? RollupIndex { get; set; }
	}

	[ConvertAs(typeof(RollupRequest))]
	public partial interface IRollupRequest : IRequest<RollupRequestParameters>
	{
	}

	public partial class RollupRequest : PlainRequestBase<RollupRequestParameters>, IRollupRequest
	{
		protected IRollupRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.RollupRollup;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/{index}/_rollup/{rollup_index}</summary>
        public RollupRequest(Nest.IndexName index, Nest.IndexName rollup_index) : base(r => r.Required("index", index).Required("rollup_index", rollup_index))
		{
		}
	}

	[ConvertAs(typeof(RollupSearchRequest))]
	public partial interface IRollupSearchRequest : IRequest<RollupSearchRequestParameters>
	{
		Dictionary<string, Nest.Aggregations.AggregationContainer>? Aggs { get; set; }

		Nest.QueryDsl.QueryContainer? Query { get; set; }

		int? Size { get; set; }
	}

	public partial class RollupSearchRequest : PlainRequestBase<RollupSearchRequestParameters>, IRollupSearchRequest
	{
		protected IRollupSearchRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.RollupRollupSearch;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/{index}/_rollup_search</summary>
        public RollupSearchRequest(Nest.Indices index) : base(r => r.Required("index", index))
		{
		}

		[JsonIgnore]
		public bool? RestTotalHitsAsInt { get => Q<bool?>("rest_total_hits_as_int"); set => Q("rest_total_hits_as_int", value); }

		[JsonIgnore]
		public bool? TypedKeys { get => Q<bool?>("typed_keys"); set => Q("typed_keys", value); }

		[JsonPropertyName("aggs")]
		public Dictionary<string, Nest.Aggregations.AggregationContainer>? Aggs { get; set; }

		[JsonPropertyName("query")]
		public Nest.QueryDsl.QueryContainer? Query { get; set; }

		[JsonPropertyName("size")]
		public int? Size { get; set; }
	}

	[ConvertAs(typeof(StartJobRequest))]
	public partial interface IStartJobRequest : IRequest<StartJobRequestParameters>
	{
	}

	public partial class StartJobRequest : PlainRequestBase<StartJobRequestParameters>, IStartJobRequest
	{
		protected IStartJobRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.RollupStartJob;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_rollup/job/{id}/_start</summary>
        public StartJobRequest(Nest.Id id) : base(r => r.Required("id", id))
		{
		}
	}

	[ConvertAs(typeof(StopJobRequest))]
	public partial interface IStopJobRequest : IRequest<StopJobRequestParameters>
	{
	}

	public partial class StopJobRequest : PlainRequestBase<StopJobRequestParameters>, IStopJobRequest
	{
		protected IStopJobRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.RollupStopJob;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_rollup/job/{id}/_stop</summary>
        public StopJobRequest(Nest.Id id) : base(r => r.Required("id", id))
		{
		}

		[JsonIgnore]
		public Nest.Time? Timeout { get => Q<Nest.Time?>("timeout"); set => Q("timeout", value); }

		[JsonIgnore]
		public bool? WaitForCompletion { get => Q<bool?>("wait_for_completion"); set => Q("wait_for_completion", value); }
	}
}
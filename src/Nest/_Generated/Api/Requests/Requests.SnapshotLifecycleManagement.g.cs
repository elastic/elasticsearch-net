// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using System;
using System.Text.Json.Serialization;
using Elastic.Transport;

#nullable restore
namespace Nest
{
    public interface IDeleteSnapshotLifecycleRequest : IRequest<DeleteSnapshotLifecycleRequestParameters>
    {
    }

    public class DeleteSnapshotLifecycleRequest : PlainRequestBase<DeleteSnapshotLifecycleRequestParameters>, IDeleteSnapshotLifecycleRequest
    {
        protected IDeleteSnapshotLifecycleRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementDeleteLifecycle;
        protected override HttpMethod HttpMethod => HttpMethod.DELETE;
        protected override bool SupportsBody => false;
        ///<summary>/_slm/policy/{policy_id}</summary>
        public DeleteSnapshotLifecycleRequest(Name policyId): base(r => r.Required("policy_id", policyId))
        {
        }
    }

    public interface IExecuteSnapshotLifecycleRequest : IRequest<ExecuteSnapshotLifecycleRequestParameters>
    {
    }

    public class ExecuteSnapshotLifecycleRequest : PlainRequestBase<ExecuteSnapshotLifecycleRequestParameters>, IExecuteSnapshotLifecycleRequest
    {
        protected IExecuteSnapshotLifecycleRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementExecuteLifecycle;
        protected override HttpMethod HttpMethod => HttpMethod.PUT;
        protected override bool SupportsBody => false;
        ///<summary>/_slm/policy/{policy_id}/_execute</summary>
        public ExecuteSnapshotLifecycleRequest(Name policyId): base(r => r.Required("policy_id", policyId))
        {
        }
    }

    public interface IExecuteRetentionRequest : IRequest<ExecuteRetentionRequestParameters>
    {
    }

    public class ExecuteRetentionRequest : PlainRequestBase<ExecuteRetentionRequestParameters>, IExecuteRetentionRequest
    {
        protected IExecuteRetentionRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementExecuteRetention;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
        ///<summary>/_slm/_execute_retention</summary>
        public ExecuteRetentionRequest(): base()
        {
        }
    }

    public interface IGetSnapshotLifecycleRequest : IRequest<GetSnapshotLifecycleRequestParameters>
    {
    }

    public class GetSnapshotLifecycleRequest : PlainRequestBase<GetSnapshotLifecycleRequestParameters>, IGetSnapshotLifecycleRequest
    {
        protected IGetSnapshotLifecycleRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementGetLifecycle;
        protected override HttpMethod HttpMethod => HttpMethod.GET;
        protected override bool SupportsBody => false;
        ///<summary>/_slm/policy/{policy_id}</summary>
        public GetSnapshotLifecycleRequest(Names policyId): base(r => r.Optional("policy_id", policyId))
        {
        }

        ///<summary>/_slm/policy</summary>
        public GetSnapshotLifecycleRequest(): base()
        {
        }
    }

    public interface IGetSnapshotLifecycleStatsRequest : IRequest<GetSnapshotLifecycleStatsRequestParameters>
    {
    }

    public class GetSnapshotLifecycleStatsRequest : PlainRequestBase<GetSnapshotLifecycleStatsRequestParameters>, IGetSnapshotLifecycleStatsRequest
    {
        protected IGetSnapshotLifecycleStatsRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementGetStats;
        protected override HttpMethod HttpMethod => HttpMethod.GET;
        protected override bool SupportsBody => false;
        ///<summary>/_slm/stats</summary>
        public GetSnapshotLifecycleStatsRequest(): base()
        {
        }
    }

    public interface IGetSnapshotLifecycleManagementStatusRequest : IRequest<GetSnapshotLifecycleManagementStatusRequestParameters>
    {
    }

    public class GetSnapshotLifecycleManagementStatusRequest : PlainRequestBase<GetSnapshotLifecycleManagementStatusRequestParameters>, IGetSnapshotLifecycleManagementStatusRequest
    {
        protected IGetSnapshotLifecycleManagementStatusRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementGetStatus;
        protected override HttpMethod HttpMethod => HttpMethod.GET;
        protected override bool SupportsBody => false;
        ///<summary>/_slm/status</summary>
        public GetSnapshotLifecycleManagementStatusRequest(): base()
        {
        }
    }

    public interface IPutSnapshotLifecycleRequest : IRequest<PutSnapshotLifecycleRequestParameters>
    {
    }

    public class PutSnapshotLifecycleRequest : PlainRequestBase<PutSnapshotLifecycleRequestParameters>, IPutSnapshotLifecycleRequest
    {
        protected IPutSnapshotLifecycleRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementPutLifecycle;
        protected override HttpMethod HttpMethod => HttpMethod.PUT;
        protected override bool SupportsBody => false;
        ///<summary>/_slm/policy/{policy_id}</summary>
        public PutSnapshotLifecycleRequest(Name policyId): base(r => r.Required("policy_id", policyId))
        {
        }

        [JsonPropertyName("name")]
        public string Name { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("repository")]
        public string Repository { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public interface IStartSnapshotLifecycleManagementRequest : IRequest<StartSnapshotLifecycleManagementRequestParameters>
    {
    }

    public class StartSnapshotLifecycleManagementRequest : PlainRequestBase<StartSnapshotLifecycleManagementRequestParameters>, IStartSnapshotLifecycleManagementRequest
    {
        protected IStartSnapshotLifecycleManagementRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementStart;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
        ///<summary>/_slm/start</summary>
        public StartSnapshotLifecycleManagementRequest(): base()
        {
        }
    }

    public interface IStopSnapshotLifecycleManagementRequest : IRequest<StopSnapshotLifecycleManagementRequestParameters>
    {
    }

    public class StopSnapshotLifecycleManagementRequest : PlainRequestBase<StopSnapshotLifecycleManagementRequestParameters>, IStopSnapshotLifecycleManagementRequest
    {
        protected IStopSnapshotLifecycleManagementRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementStop;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
        ///<summary>/_slm/stop</summary>
        public StopSnapshotLifecycleManagementRequest(): base()
        {
        }
    }
}
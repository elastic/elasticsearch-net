// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// ------------------------------------------------

using System.Text.Json.Serialization;
using Elastic.Transport;

#nullable restore
namespace Nest
{
	[JsonInterfaceConverter(typeof(InterfaceConverter<IDeleteSnapshotLifecycleRequest, DeleteSnapshotLifecycleRequest>))]
	public interface IDeleteSnapshotLifecycleRequest : IRequest<DeleteSnapshotLifecycleRequestParameters>
	{
	}

	public class DeleteSnapshotLifecycleRequest : PlainRequestBase<DeleteSnapshotLifecycleRequestParameters>, IDeleteSnapshotLifecycleRequest
	{
		protected IDeleteSnapshotLifecycleRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementDeleteLifecycle;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;
		///<summary>/_slm/policy/{policy_id}</summary>
        public DeleteSnapshotLifecycleRequest(Name policyId) : base(r => r.Required("policy_id", policyId))
		{
		}
	}

	[JsonInterfaceConverter(typeof(InterfaceConverter<IExecuteSnapshotLifecycleRequest, ExecuteSnapshotLifecycleRequest>))]
	public interface IExecuteSnapshotLifecycleRequest : IRequest<ExecuteSnapshotLifecycleRequestParameters>
	{
	}

	public class ExecuteSnapshotLifecycleRequest : PlainRequestBase<ExecuteSnapshotLifecycleRequestParameters>, IExecuteSnapshotLifecycleRequest
	{
		protected IExecuteSnapshotLifecycleRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementExecuteLifecycle;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;
		///<summary>/_slm/policy/{policy_id}/_execute</summary>
        public ExecuteSnapshotLifecycleRequest(Name policyId) : base(r => r.Required("policy_id", policyId))
		{
		}
	}

	[JsonInterfaceConverter(typeof(InterfaceConverter<IExecuteRetentionRequest, ExecuteRetentionRequest>))]
	public interface IExecuteRetentionRequest : IRequest<ExecuteRetentionRequestParameters>
	{
	}

	public class ExecuteRetentionRequest : PlainRequestBase<ExecuteRetentionRequestParameters>, IExecuteRetentionRequest
	{
		protected IExecuteRetentionRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementExecuteRetention;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;
		///<summary>/_slm/_execute_retention</summary>
        public ExecuteRetentionRequest() : base()
		{
		}
	}

	[JsonInterfaceConverter(typeof(InterfaceConverter<IGetSnapshotLifecycleRequest, GetSnapshotLifecycleRequest>))]
	public interface IGetSnapshotLifecycleRequest : IRequest<GetSnapshotLifecycleRequestParameters>
	{
	}

	public class GetSnapshotLifecycleRequest : PlainRequestBase<GetSnapshotLifecycleRequestParameters>, IGetSnapshotLifecycleRequest
	{
		protected IGetSnapshotLifecycleRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementGetLifecycle;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;
		///<summary>/_slm/policy/{policy_id}</summary>
        public GetSnapshotLifecycleRequest(Names policyId) : base(r => r.Optional("policy_id", policyId))
		{
		}

		///<summary>/_slm/policy</summary>
        public GetSnapshotLifecycleRequest() : base()
		{
		}
	}

	[JsonInterfaceConverter(typeof(InterfaceConverter<IGetSnapshotLifecycleStatsRequest, GetSnapshotLifecycleStatsRequest>))]
	public interface IGetSnapshotLifecycleStatsRequest : IRequest<GetSnapshotLifecycleStatsRequestParameters>
	{
	}

	public class GetSnapshotLifecycleStatsRequest : PlainRequestBase<GetSnapshotLifecycleStatsRequestParameters>, IGetSnapshotLifecycleStatsRequest
	{
		protected IGetSnapshotLifecycleStatsRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementGetStats;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;
		///<summary>/_slm/stats</summary>
        public GetSnapshotLifecycleStatsRequest() : base()
		{
		}
	}

	[JsonInterfaceConverter(typeof(InterfaceConverter<IGetSnapshotLifecycleManagementStatusRequest, GetSnapshotLifecycleManagementStatusRequest>))]
	public interface IGetSnapshotLifecycleManagementStatusRequest : IRequest<GetSnapshotLifecycleManagementStatusRequestParameters>
	{
	}

	public class GetSnapshotLifecycleManagementStatusRequest : PlainRequestBase<GetSnapshotLifecycleManagementStatusRequestParameters>, IGetSnapshotLifecycleManagementStatusRequest
	{
		protected IGetSnapshotLifecycleManagementStatusRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementGetStatus;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;
		///<summary>/_slm/status</summary>
        public GetSnapshotLifecycleManagementStatusRequest() : base()
		{
		}
	}

	[JsonInterfaceConverter(typeof(InterfaceConverter<IPutSnapshotLifecycleRequest, PutSnapshotLifecycleRequest>))]
	public interface IPutSnapshotLifecycleRequest : IRequest<PutSnapshotLifecycleRequestParameters>
	{
	}

	public class PutSnapshotLifecycleRequest : PlainRequestBase<PutSnapshotLifecycleRequestParameters>, IPutSnapshotLifecycleRequest
	{
		protected IPutSnapshotLifecycleRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementPutLifecycle;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => Name is null && Repository is null;
		///<summary>/_slm/policy/{policy_id}</summary>
        public PutSnapshotLifecycleRequest(Name policyId) : base(r => r.Required("policy_id", policyId))
		{
		}

		[JsonPropertyName("name")]
		public string? Name
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("repository")]
		public string? Repository
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}
	}

	[JsonInterfaceConverter(typeof(InterfaceConverter<IStartSnapshotLifecycleManagementRequest, StartSnapshotLifecycleManagementRequest>))]
	public interface IStartSnapshotLifecycleManagementRequest : IRequest<StartSnapshotLifecycleManagementRequestParameters>
	{
	}

	public class StartSnapshotLifecycleManagementRequest : PlainRequestBase<StartSnapshotLifecycleManagementRequestParameters>, IStartSnapshotLifecycleManagementRequest
	{
		protected IStartSnapshotLifecycleManagementRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementStart;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;
		///<summary>/_slm/start</summary>
        public StartSnapshotLifecycleManagementRequest() : base()
		{
		}
	}

	[JsonInterfaceConverter(typeof(InterfaceConverter<IStopSnapshotLifecycleManagementRequest, StopSnapshotLifecycleManagementRequest>))]
	public interface IStopSnapshotLifecycleManagementRequest : IRequest<StopSnapshotLifecycleManagementRequestParameters>
	{
	}

	public class StopSnapshotLifecycleManagementRequest : PlainRequestBase<StopSnapshotLifecycleManagementRequestParameters>, IStopSnapshotLifecycleManagementRequest
	{
		protected IStopSnapshotLifecycleManagementRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotLifecycleManagementStop;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;
		///<summary>/_slm/stop</summary>
        public StopSnapshotLifecycleManagementRequest() : base()
		{
		}
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// ------------------------------------------------

using System.Text.Json.Serialization;
using Elastic.Transport;

#nullable restore
namespace Nest
{
	[JsonInterfaceConverter(typeof(InterfaceConverter<IClearSqlCursorRequest, ClearSqlCursorRequest>))]
	public interface IClearSqlCursorRequest : IRequest<ClearSqlCursorRequestParameters>
	{
	}

	public class ClearSqlCursorRequest : PlainRequestBase<ClearSqlCursorRequestParameters>, IClearSqlCursorRequest
	{
		protected IClearSqlCursorRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SqlClearCursor;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => Cursor is null;
		///<summary>/_sql/close</summary>
        public ClearSqlCursorRequest() : base()
		{
		}

		[JsonPropertyName("cursor")]
		public string? Cursor
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}
	}

	[JsonInterfaceConverter(typeof(InterfaceConverter<IQuerySqlRequest, QuerySqlRequest>))]
	public interface IQuerySqlRequest : IRequest<QuerySqlRequestParameters>
	{
	}

	public class QuerySqlRequest : PlainRequestBase<QuerySqlRequestParameters>, IQuerySqlRequest
	{
		protected IQuerySqlRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SqlQuery;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => Columnar is null && Cursor is null && FetchSize is null && Query is null && TimeZone is null;
		///<summary>/_sql</summary>
        public QuerySqlRequest() : base()
		{
		}

		[JsonIgnore]
		public string? Format { get => Q<string?>("format"); set => Q("format", value); }

		[JsonPropertyName("columnar")]
		public bool? Columnar
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("cursor")]
		public string? Cursor
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("fetch_size")]
		public int? FetchSize
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("query")]
		public string? Query
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("time_zone")]
		public string? TimeZone
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}
	}

	[JsonInterfaceConverter(typeof(InterfaceConverter<ITranslateSqlRequest, TranslateSqlRequest>))]
	public interface ITranslateSqlRequest : IRequest<TranslateSqlRequestParameters>
	{
	}

	public class TranslateSqlRequest : PlainRequestBase<TranslateSqlRequestParameters>, ITranslateSqlRequest
	{
		protected ITranslateSqlRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SqlTranslate;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => FetchSize is null && Query is null && TimeZone is null;
		///<summary>/_sql/translate</summary>
        public TranslateSqlRequest() : base()
		{
		}

		[JsonPropertyName("fetch_size")]
		public int? FetchSize
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("query")]
		public string? Query
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("time_zone")]
		public string? TimeZone
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}
	}
}
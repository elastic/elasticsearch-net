// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;

#nullable restore
namespace Nest.Cat
{
	public class AliasesRequestParameters : RequestParameters<AliasesRequestParameters>
	{
		[JsonIgnore]
		public Nest.ExpandWildcards? ExpandWildcards { get => Q<Nest.ExpandWildcards?>("expand_wildcards"); set => Q("expand_wildcards", value); }
	}

	public class AllocationRequestParameters : RequestParameters<AllocationRequestParameters>
	{
		[JsonIgnore]
		public Nest.Bytes? Bytes { get => Q<Nest.Bytes?>("bytes"); set => Q("bytes", value); }
	}

	public class CountRequestParameters : RequestParameters<CountRequestParameters>
	{
	}

	public class FielddataRequestParameters : RequestParameters<FielddataRequestParameters>
	{
		[JsonIgnore]
		public Nest.Bytes? Bytes { get => Q<Nest.Bytes?>("bytes"); set => Q("bytes", value); }
	}

	public class HealthRequestParameters : RequestParameters<HealthRequestParameters>
	{
		[JsonIgnore]
		public bool? IncludeTimestamp { get => Q<bool?>("include_timestamp"); set => Q("include_timestamp", value); }

		[JsonIgnore]
		public bool? Ts { get => Q<bool?>("ts"); set => Q("ts", value); }
	}

	public class HelpRequestParameters : RequestParameters<HelpRequestParameters>
	{
	}

	public class IndicesRequestParameters : RequestParameters<IndicesRequestParameters>
	{
		[JsonIgnore]
		public Nest.Bytes? Bytes { get => Q<Nest.Bytes?>("bytes"); set => Q("bytes", value); }

		[JsonIgnore]
		public Nest.ExpandWildcards? ExpandWildcards { get => Q<Nest.ExpandWildcards?>("expand_wildcards"); set => Q("expand_wildcards", value); }

		[JsonIgnore]
		public Nest.Health? Health { get => Q<Nest.Health?>("health"); set => Q("health", value); }

		[JsonIgnore]
		public bool? IncludeUnloadedSegments { get => Q<bool?>("include_unloaded_segments"); set => Q("include_unloaded_segments", value); }

		[JsonIgnore]
		public bool? Pri { get => Q<bool?>("pri"); set => Q("pri", value); }
	}

	public class MasterRequestParameters : RequestParameters<MasterRequestParameters>
	{
	}

	public class MlDataFrameAnalyticsRequestParameters : RequestParameters<MlDataFrameAnalyticsRequestParameters>
	{
		[JsonIgnore]
		public bool? AllowNoMatch { get => Q<bool?>("allow_no_match"); set => Q("allow_no_match", value); }

		[JsonIgnore]
		public Nest.Bytes? Bytes { get => Q<Nest.Bytes?>("bytes"); set => Q("bytes", value); }
	}

	public class MlDatafeedsRequestParameters : RequestParameters<MlDatafeedsRequestParameters>
	{
		[JsonIgnore]
		public bool? AllowNoDatafeeds { get => Q<bool?>("allow_no_datafeeds"); set => Q("allow_no_datafeeds", value); }
	}

	public class MlJobsRequestParameters : RequestParameters<MlJobsRequestParameters>
	{
		[JsonIgnore]
		public bool? AllowNoJobs { get => Q<bool?>("allow_no_jobs"); set => Q("allow_no_jobs", value); }

		[JsonIgnore]
		public Nest.Bytes? Bytes { get => Q<Nest.Bytes?>("bytes"); set => Q("bytes", value); }
	}

	public class MlTrainedModelsRequestParameters : RequestParameters<MlTrainedModelsRequestParameters>
	{
		[JsonIgnore]
		public bool? AllowNoMatch { get => Q<bool?>("allow_no_match"); set => Q("allow_no_match", value); }

		[JsonIgnore]
		public Nest.Bytes? Bytes { get => Q<Nest.Bytes?>("bytes"); set => Q("bytes", value); }

		[JsonIgnore]
		public int? From { get => Q<int?>("from"); set => Q("from", value); }

		[JsonIgnore]
		public int? Size { get => Q<int?>("size"); set => Q("size", value); }
	}

	public class NodeattrsRequestParameters : RequestParameters<NodeattrsRequestParameters>
	{
	}

	public class NodesRequestParameters : RequestParameters<NodesRequestParameters>
	{
		[JsonIgnore]
		public Nest.Bytes? Bytes { get => Q<Nest.Bytes?>("bytes"); set => Q("bytes", value); }

		[JsonIgnore]
		public Union<bool, string>? FullId { get => Q<Union<bool, string>?>("full_id"); set => Q("full_id", value); }
	}

	public class PendingTasksRequestParameters : RequestParameters<PendingTasksRequestParameters>
	{
	}

	public class PluginsRequestParameters : RequestParameters<PluginsRequestParameters>
	{
	}

	public class RecoveryRequestParameters : RequestParameters<RecoveryRequestParameters>
	{
		[JsonIgnore]
		public bool? ActiveOnly { get => Q<bool?>("active_only"); set => Q("active_only", value); }

		[JsonIgnore]
		public Nest.Bytes? Bytes { get => Q<Nest.Bytes?>("bytes"); set => Q("bytes", value); }

		[JsonIgnore]
		public bool? Detailed { get => Q<bool?>("detailed"); set => Q("detailed", value); }
	}

	public class RepositoriesRequestParameters : RequestParameters<RepositoriesRequestParameters>
	{
	}

	public class SegmentsRequestParameters : RequestParameters<SegmentsRequestParameters>
	{
		[JsonIgnore]
		public Nest.Bytes? Bytes { get => Q<Nest.Bytes?>("bytes"); set => Q("bytes", value); }
	}

	public class ShardsRequestParameters : RequestParameters<ShardsRequestParameters>
	{
		[JsonIgnore]
		public Nest.Bytes? Bytes { get => Q<Nest.Bytes?>("bytes"); set => Q("bytes", value); }
	}

	public class SnapshotsRequestParameters : RequestParameters<SnapshotsRequestParameters>
	{
		[JsonIgnore]
		public bool? IgnoreUnavailable { get => Q<bool?>("ignore_unavailable"); set => Q("ignore_unavailable", value); }
	}

	public class TasksRequestParameters : RequestParameters<TasksRequestParameters>
	{
		[JsonIgnore]
		public IEnumerable<string>? Actions { get => Q<IEnumerable<string>?>("actions"); set => Q("actions", value); }

		[JsonIgnore]
		public bool? Detailed { get => Q<bool?>("detailed"); set => Q("detailed", value); }

		[JsonIgnore]
		public IEnumerable<string>? NodeId { get => Q<IEnumerable<string>?>("node_id"); set => Q("node_id", value); }

		[JsonIgnore]
		public long? ParentTask { get => Q<long?>("parent_task"); set => Q("parent_task", value); }
	}

	public class TemplatesRequestParameters : RequestParameters<TemplatesRequestParameters>
	{
	}

	public class ThreadPoolRequestParameters : RequestParameters<ThreadPoolRequestParameters>
	{
		[JsonIgnore]
		public Union<Nest.Size, bool>? Size { get => Q<Union<Nest.Size, bool>?>("size"); set => Q("size", value); }
	}

	public class TransformsRequestParameters : RequestParameters<TransformsRequestParameters>
	{
		[JsonIgnore]
		public bool? AllowNoMatch { get => Q<bool?>("allow_no_match"); set => Q("allow_no_match", value); }

		[JsonIgnore]
		public int? From { get => Q<int?>("from"); set => Q("from", value); }

		[JsonIgnore]
		public int? Size { get => Q<int?>("size"); set => Q("size", value); }
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using System;
using System.Threading;
using System.Threading.Tasks;
using Elastic.Transport;

#nullable restore
namespace Nest
{
    public class SearchableSnapshotsClearCacheRequestParameters : RequestParameters<SearchableSnapshotsClearCacheRequestParameters>
    {
        public int StubB { get => Q<int>("stub_b"); set => Q("stub_b", value); }
    }

    public class SearchableSnapshotsMountRequestParameters : RequestParameters<SearchableSnapshotsMountRequestParameters>
    {
        public Time? MasterTimeout { get => Q<Time?>("master_timeout"); set => Q("master_timeout", value); }

        public bool? WaitForCompletion { get => Q<bool?>("wait_for_completion"); set => Q("wait_for_completion", value); }

        public string? Storage { get => Q<string?>("storage"); set => Q("storage", value); }
    }

    public class SearchableSnapshotsStatsRequestParameters : RequestParameters<SearchableSnapshotsStatsRequestParameters>
    {
        public int StubB { get => Q<int>("stub_b"); set => Q("stub_b", value); }
    }
}
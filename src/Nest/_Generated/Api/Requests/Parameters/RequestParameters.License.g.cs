// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;

#nullable restore
namespace Nest.License
{
	public class DeleteRequestParameters : RequestParameters<DeleteRequestParameters>
	{
	}

	public class GetRequestParameters : RequestParameters<GetRequestParameters>
	{
		[JsonIgnore]
		public bool? AcceptEnterprise { get => Q<bool?>("accept_enterprise"); set => Q("accept_enterprise", value); }

		[JsonIgnore]
		public bool? Local { get => Q<bool?>("local"); set => Q("local", value); }
	}

	public class GetBasicStatusRequestParameters : RequestParameters<GetBasicStatusRequestParameters>
	{
	}

	public class GetTrialStatusRequestParameters : RequestParameters<GetTrialStatusRequestParameters>
	{
	}

	public class PostRequestParameters : RequestParameters<PostRequestParameters>
	{
		[JsonIgnore]
		public bool? Acknowledge { get => Q<bool?>("acknowledge"); set => Q("acknowledge", value); }
	}

	public class PostStartBasicRequestParameters : RequestParameters<PostStartBasicRequestParameters>
	{
		[JsonIgnore]
		public bool? Acknowledge { get => Q<bool?>("acknowledge"); set => Q("acknowledge", value); }
	}

	public class PostStartTrialRequestParameters : RequestParameters<PostStartTrialRequestParameters>
	{
		[JsonIgnore]
		public bool? Acknowledge { get => Q<bool?>("acknowledge"); set => Q("acknowledge", value); }

		[JsonIgnore]
		public string? TypeQueryString { get => Q<string?>("type_query_string"); set => Q("type_query_string", value); }
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Nest.Shutdown
{
	[ConvertAs(typeof(DeleteNodeRequest))]
	public partial interface IDeleteNodeRequest : IRequest<DeleteNodeRequestParameters>
	{
	}

	public partial class DeleteNodeRequest : PlainRequestBase<DeleteNodeRequestParameters>, IDeleteNodeRequest
	{
		protected IDeleteNodeRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.ShutdownDeleteNode;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;
		[JsonPropertyName("stub")]
		public string Stub
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(GetNodeRequest))]
	public partial interface IGetNodeRequest : IRequest<GetNodeRequestParameters>
	{
	}

	public partial class GetNodeRequest : PlainRequestBase<GetNodeRequestParameters>, IGetNodeRequest
	{
		protected IGetNodeRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.ShutdownGetNode;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_nodes/shutdown</summary>
        public GetNodeRequest() : base()
		{
		}

		[JsonPropertyName("stub")]
		public string Stub
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(PutNodeRequest))]
	public partial interface IPutNodeRequest : IRequest<PutNodeRequestParameters>
	{
	}

	public partial class PutNodeRequest : PlainRequestBase<PutNodeRequestParameters>, IPutNodeRequest
	{
		protected IPutNodeRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.ShutdownPutNode;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;
		[JsonPropertyName("stub")]
		public string Stub
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}
}
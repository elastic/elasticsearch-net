// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// ------------------------------------------------

using System;
using System.Text.Json.Serialization;
using Elastic.Transport;
using System.Collections.Generic;

#nullable restore
namespace Nest
{
	[JsonInterfaceConverter(typeof(InterfaceConverter<ICreateFollowIndexRequest, CreateFollowIndexRequest>))]
	public interface ICreateFollowIndexRequest : IRequest<CreateFollowIndexRequestParameters>
	{
	}

	public class CreateFollowIndexRequest : PlainRequestBase<CreateFollowIndexRequestParameters>, ICreateFollowIndexRequest
	{
		protected ICreateFollowIndexRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationFollow;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => LeaderIndex is null && MaxOutstandingReadRequests is null && MaxOutstandingWriteRequests is null && MaxReadRequestOperationCount is null && MaxReadRequestSize is null && MaxRetryDelay is null && MaxWriteBufferCount is null && MaxWriteBufferSize is null && MaxWriteRequestOperationCount is null && MaxWriteRequestSize is null && ReadPollTimeout is null && RemoteCluster is null;
		///<summary>/{index}/_ccr/follow</summary>
        public CreateFollowIndexRequest(IndexName index) : base(r => r.Required("index", index))
		{
		}

		[JsonIgnore]
		public WaitForActiveShards? WaitForActiveShards { get => Q<WaitForActiveShards?>("wait_for_active_shards"); set => Q("wait_for_active_shards", value); }

		[JsonPropertyName("leader_index")]
		public IndexName? LeaderIndex
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_outstanding_read_requests")]
		public long? MaxOutstandingReadRequests
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_outstanding_write_requests")]
		public long? MaxOutstandingWriteRequests
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_read_request_operation_count")]
		public long? MaxReadRequestOperationCount
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_read_request_size")]
		public string? MaxReadRequestSize
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_retry_delay")]
		public Time? MaxRetryDelay
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_buffer_count")]
		public long? MaxWriteBufferCount
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_buffer_size")]
		public string? MaxWriteBufferSize
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_request_operation_count")]
		public long? MaxWriteRequestOperationCount
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_request_size")]
		public string? MaxWriteRequestSize
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("read_poll_timeout")]
		public Time? ReadPollTimeout
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("remote_cluster")]
		public string? RemoteCluster
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}
	}

	[JsonInterfaceConverter(typeof(InterfaceConverter<IFollowInfoRequest, FollowInfoRequest>))]
	public interface IFollowInfoRequest : IRequest<FollowInfoRequestParameters>
	{
	}

	public class FollowInfoRequest : PlainRequestBase<FollowInfoRequestParameters>, IFollowInfoRequest
	{
		protected IFollowInfoRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationFollowInfo;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;
		///<summary>/{index}/_ccr/info</summary>
        public FollowInfoRequest(Indices index) : base(r => r.Required("index", index))
		{
		}
	}

	[JsonInterfaceConverter(typeof(InterfaceConverter<IFollowIndexStatsRequest, FollowIndexStatsRequest>))]
	public interface IFollowIndexStatsRequest : IRequest<FollowIndexStatsRequestParameters>
	{
	}

	public class FollowIndexStatsRequest : PlainRequestBase<FollowIndexStatsRequestParameters>, IFollowIndexStatsRequest
	{
		protected IFollowIndexStatsRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationFollowStats;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;
		///<summary>/{index}/_ccr/stats</summary>
        public FollowIndexStatsRequest(Indices index) : base(r => r.Required("index", index))
		{
		}
	}
}
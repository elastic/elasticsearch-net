// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Nest.Ccr
{
	[ConvertAs(typeof(DeleteAutoFollowPatternRequest))]
	public partial interface IDeleteAutoFollowPatternRequest : IRequest<DeleteAutoFollowPatternRequestParameters>
	{
	}

	public partial class DeleteAutoFollowPatternRequest : PlainRequestBase<DeleteAutoFollowPatternRequestParameters>, IDeleteAutoFollowPatternRequest
	{
		protected IDeleteAutoFollowPatternRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationDeleteAutoFollowPattern;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_ccr/auto_follow/{name}</summary>
        public DeleteAutoFollowPatternRequest(Nest.Name name) : base(r => r.Required("name", name))
		{
		}
	}

	[ConvertAs(typeof(FollowRequest))]
	public partial interface IFollowRequest : IRequest<FollowRequestParameters>
	{
	}

	public partial class FollowRequest : PlainRequestBase<FollowRequestParameters>, IFollowRequest
	{
		protected IFollowRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationFollow;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/{index}/_ccr/follow</summary>
        public FollowRequest(Nest.IndexName index) : base(r => r.Required("index", index))
		{
		}

		[JsonIgnore]
		public Nest.WaitForActiveShards? WaitForActiveShards { get => Q<Nest.WaitForActiveShards?>("wait_for_active_shards"); set => Q("wait_for_active_shards", value); }

		[JsonPropertyName("leader_index")]
		public Nest.IndexName? LeaderIndex
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_outstanding_read_requests")]
		public long? MaxOutstandingReadRequests
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_outstanding_write_requests")]
		public long? MaxOutstandingWriteRequests
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_read_request_operation_count")]
		public long? MaxReadRequestOperationCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_read_request_size")]
		public string? MaxReadRequestSize
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_retry_delay")]
		public Nest.Time? MaxRetryDelay
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_buffer_count")]
		public long? MaxWriteBufferCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_buffer_size")]
		public string? MaxWriteBufferSize
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_request_operation_count")]
		public long? MaxWriteRequestOperationCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_request_size")]
		public string? MaxWriteRequestSize
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("read_poll_timeout")]
		public Nest.Time? ReadPollTimeout
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("remote_cluster")]
		public string? RemoteCluster
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(FollowInfoRequest))]
	public partial interface IFollowInfoRequest : IRequest<FollowInfoRequestParameters>
	{
	}

	public partial class FollowInfoRequest : PlainRequestBase<FollowInfoRequestParameters>, IFollowInfoRequest
	{
		protected IFollowInfoRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationFollowInfo;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/{index}/_ccr/info</summary>
        public FollowInfoRequest(Nest.Indices index) : base(r => r.Required("index", index))
		{
		}
	}

	[ConvertAs(typeof(FollowStatsRequest))]
	public partial interface IFollowStatsRequest : IRequest<FollowStatsRequestParameters>
	{
	}

	public partial class FollowStatsRequest : PlainRequestBase<FollowStatsRequestParameters>, IFollowStatsRequest
	{
		protected IFollowStatsRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationFollowStats;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/{index}/_ccr/stats</summary>
        public FollowStatsRequest(Nest.Indices index) : base(r => r.Required("index", index))
		{
		}
	}

	[ConvertAs(typeof(ForgetFollowerRequest))]
	public partial interface IForgetFollowerRequest : IRequest<ForgetFollowerRequestParameters>
	{
	}

	public partial class ForgetFollowerRequest : PlainRequestBase<ForgetFollowerRequestParameters>, IForgetFollowerRequest
	{
		protected IForgetFollowerRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationForgetFollower;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/{index}/_ccr/forget_follower</summary>
        public ForgetFollowerRequest(Nest.IndexName index) : base(r => r.Required("index", index))
		{
		}

		[JsonPropertyName("follower_cluster")]
		public string? FollowerCluster
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("follower_index")]
		public Nest.IndexName? FollowerIndex
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("follower_index_uuid")]
		public Nest.Uuid? FollowerIndexUuid
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("leader_remote_cluster")]
		public string? LeaderRemoteCluster
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(GetAutoFollowPatternRequest))]
	public partial interface IGetAutoFollowPatternRequest : IRequest<GetAutoFollowPatternRequestParameters>
	{
	}

	public partial class GetAutoFollowPatternRequest : PlainRequestBase<GetAutoFollowPatternRequestParameters>, IGetAutoFollowPatternRequest
	{
		protected IGetAutoFollowPatternRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationGetAutoFollowPattern;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;

		///<summary>/_ccr/auto_follow</summary>
        public GetAutoFollowPatternRequest() : base()
		{
		}

		///<summary>/_ccr/auto_follow/{name}</summary>
        public GetAutoFollowPatternRequest(Nest.Name? name) : base(r => r.Optional("name", name))
		{
		}
	}

	[ConvertAs(typeof(PauseAutoFollowPatternRequest))]
	public partial interface IPauseAutoFollowPatternRequest : IRequest<PauseAutoFollowPatternRequestParameters>
	{
	}

	public partial class PauseAutoFollowPatternRequest : PlainRequestBase<PauseAutoFollowPatternRequestParameters>, IPauseAutoFollowPatternRequest
	{
		protected IPauseAutoFollowPatternRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationPauseAutoFollowPattern;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_ccr/auto_follow/{name}/pause</summary>
        public PauseAutoFollowPatternRequest(Nest.Name name) : base(r => r.Required("name", name))
		{
		}
	}

	[ConvertAs(typeof(PauseFollowRequest))]
	public partial interface IPauseFollowRequest : IRequest<PauseFollowRequestParameters>
	{
	}

	public partial class PauseFollowRequest : PlainRequestBase<PauseFollowRequestParameters>, IPauseFollowRequest
	{
		protected IPauseFollowRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationPauseFollow;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/{index}/_ccr/pause_follow</summary>
        public PauseFollowRequest(Nest.IndexName index) : base(r => r.Required("index", index))
		{
		}
	}

	[ConvertAs(typeof(PutAutoFollowPatternRequest))]
	public partial interface IPutAutoFollowPatternRequest : IRequest<PutAutoFollowPatternRequestParameters>
	{
	}

	public partial class PutAutoFollowPatternRequest : PlainRequestBase<PutAutoFollowPatternRequestParameters>, IPutAutoFollowPatternRequest
	{
		protected IPutAutoFollowPatternRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationPutAutoFollowPattern;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_ccr/auto_follow/{name}</summary>
        public PutAutoFollowPatternRequest(Nest.Name name) : base(r => r.Required("name", name))
		{
		}

		[JsonPropertyName("remote_cluster")]
		public string RemoteCluster
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("follow_index_pattern")]
		public Nest.IndexPattern? FollowIndexPattern
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("leader_index_patterns")]
		public Nest.IndexPatterns? LeaderIndexPatterns
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_outstanding_read_requests")]
		public int? MaxOutstandingReadRequests
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("settings")]
		public Dictionary<string, object>? Settings
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_outstanding_write_requests")]
		public int? MaxOutstandingWriteRequests
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("read_poll_timeout")]
		public Nest.Time? ReadPollTimeout
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_read_request_operation_count")]
		public int? MaxReadRequestOperationCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_read_request_size")]
		public Nest.ByteSize? MaxReadRequestSize
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_retry_delay")]
		public Nest.Time? MaxRetryDelay
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_buffer_count")]
		public int? MaxWriteBufferCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_buffer_size")]
		public Nest.ByteSize? MaxWriteBufferSize
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_request_operation_count")]
		public int? MaxWriteRequestOperationCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_request_size")]
		public Nest.ByteSize? MaxWriteRequestSize
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(ResumeAutoFollowPatternRequest))]
	public partial interface IResumeAutoFollowPatternRequest : IRequest<ResumeAutoFollowPatternRequestParameters>
	{
	}

	public partial class ResumeAutoFollowPatternRequest : PlainRequestBase<ResumeAutoFollowPatternRequestParameters>, IResumeAutoFollowPatternRequest
	{
		protected IResumeAutoFollowPatternRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationResumeAutoFollowPattern;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_ccr/auto_follow/{name}/resume</summary>
        public ResumeAutoFollowPatternRequest(Nest.Name name) : base(r => r.Required("name", name))
		{
		}
	}

	[ConvertAs(typeof(ResumeFollowRequest))]
	public partial interface IResumeFollowRequest : IRequest<ResumeFollowRequestParameters>
	{
	}

	public partial class ResumeFollowRequest : PlainRequestBase<ResumeFollowRequestParameters>, IResumeFollowRequest
	{
		protected IResumeFollowRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationResumeFollow;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/{index}/_ccr/resume_follow</summary>
        public ResumeFollowRequest(Nest.IndexName index) : base(r => r.Required("index", index))
		{
		}

		[JsonPropertyName("max_outstanding_read_requests")]
		public long? MaxOutstandingReadRequests
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_outstanding_write_requests")]
		public long? MaxOutstandingWriteRequests
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_read_request_operation_count")]
		public long? MaxReadRequestOperationCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_read_request_size")]
		public string? MaxReadRequestSize
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_retry_delay")]
		public Nest.Time? MaxRetryDelay
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_buffer_count")]
		public long? MaxWriteBufferCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_buffer_size")]
		public string? MaxWriteBufferSize
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_request_operation_count")]
		public long? MaxWriteRequestOperationCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_write_request_size")]
		public string? MaxWriteRequestSize
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("read_poll_timeout")]
		public Nest.Time? ReadPollTimeout
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(StatsRequest))]
	public partial interface IStatsRequest : IRequest<StatsRequestParameters>
	{
	}

	public partial class StatsRequest : PlainRequestBase<StatsRequestParameters>, IStatsRequest
	{
		protected IStatsRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationStats;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;

		///<summary>/_ccr/stats</summary>
        public StatsRequest() : base()
		{
		}
	}

	[ConvertAs(typeof(UnfollowRequest))]
	public partial interface IUnfollowRequest : IRequest<UnfollowRequestParameters>
	{
	}

	public partial class UnfollowRequest : PlainRequestBase<UnfollowRequestParameters>, IUnfollowRequest
	{
		protected IUnfollowRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationUnfollow;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/{index}/_ccr/unfollow</summary>
        public UnfollowRequest(Nest.IndexName index) : base(r => r.Required("index", index))
		{
		}
	}
}
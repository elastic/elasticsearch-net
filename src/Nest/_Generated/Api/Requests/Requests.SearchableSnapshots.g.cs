// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// ------------------------------------------------

using System;
using System.Text.Json.Serialization;
using Elastic.Transport;

#nullable restore
namespace Nest
{
	[JsonInterfaceConverter(typeof(InterfaceConverter<ISearchableSnapshotsClearCacheRequest, SearchableSnapshotsClearCacheRequest>))]
	public interface ISearchableSnapshotsClearCacheRequest : IRequest<SearchableSnapshotsClearCacheRequestParameters>
	{
	}

	public class SearchableSnapshotsClearCacheRequest : PlainRequestBase<SearchableSnapshotsClearCacheRequestParameters>, ISearchableSnapshotsClearCacheRequest
	{
		protected ISearchableSnapshotsClearCacheRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SearchableSnapshotsClearCache;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;
		///<summary>/_searchable_snapshots/cache/clear</summary>
        public SearchableSnapshotsClearCacheRequest() : base()
		{
		}

		///<summary>/{index}/_searchable_snapshots/cache/clear</summary>
        public SearchableSnapshotsClearCacheRequest(Index index) : base(r => r)
		{
		}

		[JsonIgnore]
		public int StubB { get => Q<int>("stub_b"); set => Q("stub_b", value); }

		[JsonPropertyName("stub_c")]
		public int StubC
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}
	}

	[JsonInterfaceConverter(typeof(InterfaceConverter<ISearchableSnapshotsMountRequest, SearchableSnapshotsMountRequest>))]
	public interface ISearchableSnapshotsMountRequest : IRequest<SearchableSnapshotsMountRequestParameters>
	{
	}

	public class SearchableSnapshotsMountRequest : PlainRequestBase<SearchableSnapshotsMountRequestParameters>, ISearchableSnapshotsMountRequest
	{
		protected ISearchableSnapshotsMountRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SearchableSnapshotsMount;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;
		///<summary>/_snapshot/{repository}/{snapshot}/_mount</summary>
        public SearchableSnapshotsMountRequest(Name repository, Name snapshot) : base(r => r.Required("repository", repository).Required("snapshot", snapshot))
		{
		}

		[JsonIgnore]
		public Time? MasterTimeout { get => Q<Time?>("master_timeout"); set => Q("master_timeout", value); }

		[JsonIgnore]
		public bool? WaitForCompletion { get => Q<bool?>("wait_for_completion"); set => Q("wait_for_completion", value); }

		[JsonIgnore]
		public string? Storage { get => Q<string?>("storage"); set => Q("storage", value); }
	}

	[JsonInterfaceConverter(typeof(InterfaceConverter<ISearchableSnapshotsStatsRequest, SearchableSnapshotsStatsRequest>))]
	public interface ISearchableSnapshotsStatsRequest : IRequest<SearchableSnapshotsStatsRequestParameters>
	{
	}

	public class SearchableSnapshotsStatsRequest : PlainRequestBase<SearchableSnapshotsStatsRequestParameters>, ISearchableSnapshotsStatsRequest
	{
		protected ISearchableSnapshotsStatsRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SearchableSnapshotsStats;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;
		///<summary>/_searchable_snapshots/stats</summary>
        public SearchableSnapshotsStatsRequest() : base()
		{
		}

		///<summary>/{index}/_searchable_snapshots/stats</summary>
        public SearchableSnapshotsStatsRequest(Index index) : base(r => r)
		{
		}

		[JsonIgnore]
		public int StubB { get => Q<int>("stub_b"); set => Q("stub_b", value); }

		[JsonPropertyName("stub_c")]
		public int StubC
		{
			get;
#if NET5_0
            init;
#else
			internal set;
#endif
		}
	}
}
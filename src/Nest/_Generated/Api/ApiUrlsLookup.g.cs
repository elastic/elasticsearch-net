// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using System;

namespace Nest
{
    internal static class ApiUrlsLookups
    {
        internal static ApiUrls CrossClusterReplicationFollow = new ApiUrls(new[]{"/{index}/_ccr/follow"});
        internal static ApiUrls NoNamespaceClosePointInTime = new ApiUrls(new[]{"/_pit"});
        internal static ApiUrls ClusterAllocationExplain = new ApiUrls(new[]{"/_cluster/allocation/explain"});
        internal static ApiUrls ClusterHealth = new ApiUrls(new[]{"/_cluster/health", "/_cluster/health/{index}"});
        internal static ApiUrls IndicesDelete = new ApiUrls(new[]{"/{index}"});
        internal static ApiUrls IndicesExistsTemplate = new ApiUrls(new[]{"/_template/{name}"});
        internal static ApiUrls NoNamespaceOpenPointInTime = new ApiUrls(new[]{"/_pit", "/{index}/_pit"});
        internal static ApiUrls NoNamespacePing = new ApiUrls(new[]{"/"});
        internal static ApiUrls SecurityPutUser = new ApiUrls(new[]{"/_security/user/{username}"});
    }
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using System;

namespace Nest
{
    internal static class ApiUrlsLookups
    {
        internal static ApiUrls NoNamespaceClearScroll = new ApiUrls(new[]{"/_search/scroll"});
        internal static ApiUrls NoNamespaceClosePointInTime = new ApiUrls(new[]{"/_pit"});
        internal static ApiUrls ClusterAllocationExplain = new ApiUrls(new[]{"/_cluster/allocation/explain"});
        internal static ApiUrls ClusterDeleteComponentTemplate = new ApiUrls(new[]{"/_component_template/{name}"});
        internal static ApiUrls ClusterDeleteVotingConfigExclusions = new ApiUrls(new[]{"/_cluster/voting_config_exclusions"});
        internal static ApiUrls ClusterGetComponentTemplate = new ApiUrls(new[]{"/_component_template", "/_component_template/{name}"});
        internal static ApiUrls ClusterGetSettings = new ApiUrls(new[]{"/_cluster/settings"});
        internal static ApiUrls ClusterHealth = new ApiUrls(new[]{"/_cluster/health", "/_cluster/health/{index}"});
        internal static ApiUrls ClusterPendingTasks = new ApiUrls(new[]{"/_cluster/pending_tasks"});
        internal static ApiUrls ClusterPostVotingConfigExclusions = new ApiUrls(new[]{"/_cluster/voting_config_exclusions"});
        internal static ApiUrls ClusterPutComponentTemplate = new ApiUrls(new[]{"/_component_template/{name}"});
        internal static ApiUrls ClusterPutSettings = new ApiUrls(new[]{"/_cluster/settings"});
        internal static ApiUrls ClusterRemoteInfo = new ApiUrls(new[]{"/_remote/info"});
        internal static ApiUrls ClusterReroute = new ApiUrls(new[]{"/_cluster/reroute"});
        internal static ApiUrls ClusterState = new ApiUrls(new[]{"/_cluster/state", "/_cluster/state/{metric}", "/_cluster/state/{metric}/{index}"});
        internal static ApiUrls ClusterStats = new ApiUrls(new[]{"/_cluster/stats", "/_cluster/stats/nodes/{node_id}"});
        internal static ApiUrls NoNamespaceCount = new ApiUrls(new[]{"/_count", "/{index}/_count"});
        internal static ApiUrls NoNamespaceCreate = new ApiUrls(new[]{"/{index}/_create/{id}"});
        internal static ApiUrls NoNamespaceDelete = new ApiUrls(new[]{"/{index}/_doc/{id}"});
        internal static ApiUrls NoNamespaceDeleteByQuery = new ApiUrls(new[]{"/{index}/_delete_by_query"});
        internal static ApiUrls NoNamespaceExists = new ApiUrls(new[]{"/{index}/_doc/{id}"});
        internal static ApiUrls NoNamespaceExistsSource = new ApiUrls(new[]{"/{index}/_source/{id}"});
        internal static ApiUrls NoNamespaceExplain = new ApiUrls(new[]{"/{index}/_explain/{id}"});
        internal static ApiUrls NoNamespaceFieldCaps = new ApiUrls(new[]{"/_field_caps", "/{index}/_field_caps"});
        internal static ApiUrls NoNamespaceGet = new ApiUrls(new[]{"/{index}/_doc/{id}"});
        internal static ApiUrls NoNamespaceGetScript = new ApiUrls(new[]{"/_scripts/{id}"});
        internal static ApiUrls NoNamespaceGetScriptContext = new ApiUrls(new[]{"/_script_context"});
        internal static ApiUrls NoNamespaceGetScriptLanguages = new ApiUrls(new[]{"/_script_language"});
        internal static ApiUrls NoNamespaceGetSource = new ApiUrls(new[]{"/{index}/_source/{id}"});
        internal static ApiUrls IndexLifecycleManagementDeleteLifecycle = new ApiUrls(new[]{"/_ilm/policy/{policy}"});
        internal static ApiUrls IndexLifecycleManagementExplainLifecycle = new ApiUrls(new[]{"/{index}/_ilm/explain"});
        internal static ApiUrls IndexLifecycleManagementGetLifecycle = new ApiUrls(new[]{"/_ilm/policy/{policy}", "/_ilm/policy"});
        internal static ApiUrls IndexLifecycleManagementGetStatus = new ApiUrls(new[]{"/_ilm/status"});
        internal static ApiUrls IndexLifecycleManagementMoveToStep = new ApiUrls(new[]{"/_ilm/move/{index}"});
        internal static ApiUrls IndexLifecycleManagementPutLifecycle = new ApiUrls(new[]{"/_ilm/policy/{policy}"});
        internal static ApiUrls IndexLifecycleManagementRemovePolicy = new ApiUrls(new[]{"/{index}/_ilm/remove"});
        internal static ApiUrls IndexLifecycleManagementRetry = new ApiUrls(new[]{"/{index}/_ilm/retry"});
        internal static ApiUrls IndexLifecycleManagementStart = new ApiUrls(new[]{"/_ilm/start"});
        internal static ApiUrls IndexLifecycleManagementStop = new ApiUrls(new[]{"/_ilm/stop"});
        internal static ApiUrls NoNamespaceIndex = new ApiUrls(new[]{"/{index}/_doc/{id}", "/{index}/_doc"});
        internal static ApiUrls IndicesAddBlock = new ApiUrls(new[]{"/{index}/_block/{block}"});
        internal static ApiUrls IndicesAnalyze = new ApiUrls(new[]{"/_analyze", "/{index}/_analyze"});
        internal static ApiUrls IndicesClearCache = new ApiUrls(new[]{"/_cache/clear", "/{index}/_cache/clear"});
        internal static ApiUrls IndicesClone = new ApiUrls(new[]{"/{index}/_clone/{target}"});
        internal static ApiUrls IndicesClose = new ApiUrls(new[]{"/{index}/_close"});
        internal static ApiUrls IndicesCreate = new ApiUrls(new[]{"/{index}"});
        internal static ApiUrls IndicesCreateDataStream = new ApiUrls(new[]{"/_data_stream/{name}"});
        internal static ApiUrls IndicesDataStreamsStats = new ApiUrls(new[]{"/_data_stream/_stats", "/_data_stream/{name}/_stats"});
        internal static ApiUrls IndicesDelete = new ApiUrls(new[]{"/{index}"});
        internal static ApiUrls IndicesDeleteAlias = new ApiUrls(new[]{"/{index}/_alias/{name}"});
        internal static ApiUrls IndicesDeleteDataStream = new ApiUrls(new[]{"/_data_stream/{name}"});
        internal static ApiUrls IndicesDeleteIndexTemplate = new ApiUrls(new[]{"/_index_template/{name}"});
        internal static ApiUrls IndicesDeleteTemplate = new ApiUrls(new[]{"/_template/{name}"});
        internal static ApiUrls IndicesExists = new ApiUrls(new[]{"/{index}"});
        internal static ApiUrls IndicesExistsAlias = new ApiUrls(new[]{"/_alias/{name}", "/{index}/_alias/{name}"});
        internal static ApiUrls IndicesExistsIndexTemplate = new ApiUrls(new[]{"/_index_template/{name}"});
        internal static ApiUrls IndicesExistsTemplate = new ApiUrls(new[]{"/_template/{name}"});
        internal static ApiUrls IndicesExistsType = new ApiUrls(new[]{"/{index}/_mapping/{type}"});
        internal static ApiUrls IndicesFlush = new ApiUrls(new[]{"/_flush", "/{index}/_flush"});
        internal static ApiUrls IndicesForcemerge = new ApiUrls(new[]{"/_forcemerge", "/{index}/_forcemerge"});
        internal static ApiUrls IndicesGet = new ApiUrls(new[]{"/{index}"});
        internal static ApiUrls IndicesGetAlias = new ApiUrls(new[]{"/_alias", "/_alias/{name}", "/{index}/_alias/{name}", "/{index}/_alias"});
        internal static ApiUrls IndicesGetDataStream = new ApiUrls(new[]{"/_data_stream", "/_data_stream/{name}"});
        internal static ApiUrls IndicesGetFieldMapping = new ApiUrls(new[]{"/_mapping/field/{fields}", "/{index}/_mapping/field/{fields}"});
        internal static ApiUrls IndicesGetIndexTemplate = new ApiUrls(new[]{"/_index_template", "/_index_template/{name}"});
        internal static ApiUrls IndicesGetMapping = new ApiUrls(new[]{"/_mapping", "/{index}/_mapping"});
        internal static ApiUrls IndicesGetSettings = new ApiUrls(new[]{"/_settings", "/{index}/_settings", "/{index}/_settings/{name}", "/_settings/{name}"});
        internal static ApiUrls IndicesGetTemplate = new ApiUrls(new[]{"/_template", "/_template/{name}"});
        internal static ApiUrls IndicesMigrateToDataStream = new ApiUrls(new[]{"/_data_stream/_migrate/{name}"});
        internal static ApiUrls IndicesOpen = new ApiUrls(new[]{"/{index}/_open"});
        internal static ApiUrls IndicesPromoteDataStream = new ApiUrls(new[]{"/_data_stream/_promote/{name}"});
        internal static ApiUrls IndicesPutAlias = new ApiUrls(new[]{"/{index}/_alias/{name}"});
        internal static ApiUrls IndicesPutIndexTemplate = new ApiUrls(new[]{"/_index_template/{name}"});
        internal static ApiUrls IndicesPutMapping = new ApiUrls(new[]{"/{index}/_mapping"});
        internal static ApiUrls IndicesPutSettings = new ApiUrls(new[]{"/_settings", "/{index}/_settings"});
        internal static ApiUrls IndicesPutTemplate = new ApiUrls(new[]{"/_template/{name}"});
        internal static ApiUrls IndicesRecovery = new ApiUrls(new[]{"/_recovery", "/{index}/_recovery"});
        internal static ApiUrls IndicesRefresh = new ApiUrls(new[]{"/_refresh", "/{index}/_refresh"});
        internal static ApiUrls IndicesReloadSearchAnalyzers = new ApiUrls(new[]{"/{index}/_reload_search_analyzers"});
        internal static ApiUrls IndicesResolveIndex = new ApiUrls(new[]{"/_resolve/index/{name}"});
        internal static ApiUrls IndicesRollover = new ApiUrls(new[]{"/{alias}/_rollover", "/{alias}/_rollover/{new_index}"});
        internal static ApiUrls IndicesSegments = new ApiUrls(new[]{"/_segments", "/{index}/_segments"});
        internal static ApiUrls IndicesShardStores = new ApiUrls(new[]{"/_shard_stores", "/{index}/_shard_stores"});
        internal static ApiUrls IndicesShrink = new ApiUrls(new[]{"/{index}/_shrink/{target}"});
        internal static ApiUrls IndicesSimulateIndexTemplate = new ApiUrls(new[]{"/_index_template/_simulate_index/{name}"});
        internal static ApiUrls IndicesSimulateTemplate = new ApiUrls(new[]{"/_index_template/_simulate", "/_index_template/_simulate/{name}"});
        internal static ApiUrls IndicesSplit = new ApiUrls(new[]{"/{index}/_split/{target}"});
        internal static ApiUrls IndicesStats = new ApiUrls(new[]{"/_stats", "/_stats/{metric}", "/{index}/_stats", "/{index}/_stats/{metric}"});
        internal static ApiUrls IndicesUpdateAliases = new ApiUrls(new[]{"/_aliases"});
        internal static ApiUrls IndicesValidateQuery = new ApiUrls(new[]{"/_validate/query", "/{index}/_validate/query"});
        internal static ApiUrls NoNamespaceInfo = new ApiUrls(new[]{"/"});
        internal static ApiUrls NoNamespaceOpenPointInTime = new ApiUrls(new[]{"/_pit", "/{index}/_pit"});
        internal static ApiUrls NoNamespacePing = new ApiUrls(new[]{"/"});
        internal static ApiUrls NoNamespacePutScript = new ApiUrls(new[]{"/_scripts/{id}", "/_scripts/{id}/{context}"});
        internal static ApiUrls NoNamespaceReindex = new ApiUrls(new[]{"/_reindex"});
        internal static ApiUrls NoNamespaceScroll = new ApiUrls(new[]{"/_search/scroll"});
        internal static ApiUrls NoNamespaceSearch = new ApiUrls(new[]{"/_search", "/{index}/_search"});
        internal static ApiUrls NoNamespaceSearchShards = new ApiUrls(new[]{"/_search_shards", "/{index}/_search_shards"});
    }
}
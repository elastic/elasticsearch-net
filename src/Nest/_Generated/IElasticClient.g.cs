// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using System.Threading;
using System.Threading.Tasks;

namespace Nest
{
    public partial interface IElasticClient
    {
        CrossClusterReplicationNamespace CrossClusterReplication { get; }

        ClusterNamespace Cluster { get; }

        IndicesNamespace Indices { get; }

        SecurityNamespace Security { get; }

        ClosePointInTimeResponse ClosePointInTime(IClosePointInTimeRequest request);
        Task<ClosePointInTimeResponse> ClosePointInTimeAsync(IClosePointInTimeRequest request, CancellationToken cancellationToken = default);
        OpenPointInTimeResponse OpenPointInTime(IOpenPointInTimeRequest request);
        Task<OpenPointInTimeResponse> OpenPointInTimeAsync(IOpenPointInTimeRequest request, CancellationToken cancellationToken = default);
        PingResponse Ping(IPingRequest request);
        Task<PingResponse> PingAsync(IPingRequest request, CancellationToken cancellationToken = default);
    }
}
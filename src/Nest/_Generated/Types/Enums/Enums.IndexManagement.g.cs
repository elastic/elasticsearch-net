// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System.Runtime.Serialization;

#nullable restore
namespace Nest.IndexManagement
{
	public readonly partial struct DataStreamHealthStatus
	{
		public DataStreamHealthStatus(string value) => Value = value;
		public string Value { get; }

		public static DataStreamHealthStatus Yellow { get; } = new DataStreamHealthStatus("yellow");
		public static DataStreamHealthStatus Red { get; } = new DataStreamHealthStatus("red");
		public static DataStreamHealthStatus Green { get; } = new DataStreamHealthStatus("green");
	}

	public readonly partial struct IndexCheckOnStartup
	{
		public IndexCheckOnStartup(string value) => Value = value;
		public string Value { get; }

		public static IndexCheckOnStartup True { get; } = new IndexCheckOnStartup("true");
		public static IndexCheckOnStartup False { get; } = new IndexCheckOnStartup("false");
		public static IndexCheckOnStartup Checksum { get; } = new IndexCheckOnStartup("checksum");
	}

	public readonly partial struct IndexRoutingAllocationOptions
	{
		public IndexRoutingAllocationOptions(string value) => Value = value;
		public string Value { get; }

		public static IndexRoutingAllocationOptions Primaries { get; } = new IndexRoutingAllocationOptions("primaries");
		public static IndexRoutingAllocationOptions None { get; } = new IndexRoutingAllocationOptions("none");
		public static IndexRoutingAllocationOptions NewPrimaries { get; } = new IndexRoutingAllocationOptions("new_primaries");
		public static IndexRoutingAllocationOptions All { get; } = new IndexRoutingAllocationOptions("all");
	}

	public readonly partial struct IndexRoutingRebalanceOptions
	{
		public IndexRoutingRebalanceOptions(string value) => Value = value;
		public string Value { get; }

		public static IndexRoutingRebalanceOptions Replicas { get; } = new IndexRoutingRebalanceOptions("replicas");
		public static IndexRoutingRebalanceOptions Primaries { get; } = new IndexRoutingRebalanceOptions("primaries");
		public static IndexRoutingRebalanceOptions None { get; } = new IndexRoutingRebalanceOptions("none");
		public static IndexRoutingRebalanceOptions All { get; } = new IndexRoutingRebalanceOptions("all");
	}

	public readonly partial struct NumericFielddataFormat
	{
		public NumericFielddataFormat(string value) => Value = value;
		public string Value { get; }

		public static NumericFielddataFormat Disabled { get; } = new NumericFielddataFormat("disabled");
		public static NumericFielddataFormat Array { get; } = new NumericFielddataFormat("array");
	}

	public readonly partial struct StringFielddataFormat
	{
		public StringFielddataFormat(string value) => Value = value;
		public string Value { get; }

		public static StringFielddataFormat PagedBytes { get; } = new StringFielddataFormat("paged_bytes");
		public static StringFielddataFormat Disabled { get; } = new StringFielddataFormat("disabled");
	}
}
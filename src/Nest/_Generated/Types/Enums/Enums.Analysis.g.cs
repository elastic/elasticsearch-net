// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System.Runtime.Serialization;

#nullable restore
namespace Nest.Analysis
{
	public readonly partial struct DelimitedPayloadEncoding
	{
		public DelimitedPayloadEncoding(string value) => Value = value;
		public string Value { get; }

		public static DelimitedPayloadEncoding Integer { get; } = new DelimitedPayloadEncoding("int");
		public static DelimitedPayloadEncoding Identity { get; } = new DelimitedPayloadEncoding("identity");
		public static DelimitedPayloadEncoding Float { get; } = new DelimitedPayloadEncoding("float");
	}

	public readonly partial struct EdgeNGramSide
	{
		public EdgeNGramSide(string value) => Value = value;
		public string Value { get; }

		public static EdgeNGramSide Front { get; } = new EdgeNGramSide("front");
		public static EdgeNGramSide Back { get; } = new EdgeNGramSide("back");
	}

	public readonly partial struct KeepTypesMode
	{
		public KeepTypesMode(string value) => Value = value;
		public string Value { get; }

		public static KeepTypesMode Include { get; } = new KeepTypesMode("include");
		public static KeepTypesMode Exclude { get; } = new KeepTypesMode("exclude");
	}

	public readonly partial struct NoriDecompoundMode
	{
		public NoriDecompoundMode(string value) => Value = value;
		public string Value { get; }

		public static NoriDecompoundMode None { get; } = new NoriDecompoundMode("none");
		public static NoriDecompoundMode Mixed { get; } = new NoriDecompoundMode("mixed");
		public static NoriDecompoundMode Discard { get; } = new NoriDecompoundMode("discard");
	}

	public readonly partial struct SnowballLanguage
	{
		public SnowballLanguage(string value) => Value = value;
		public string Value { get; }

		public static SnowballLanguage Turkish { get; } = new SnowballLanguage("Turkish");
		public static SnowballLanguage Swedish { get; } = new SnowballLanguage("Swedish");
		public static SnowballLanguage Spanish { get; } = new SnowballLanguage("Spanish");
		public static SnowballLanguage Russian { get; } = new SnowballLanguage("Russian");
		public static SnowballLanguage Romanian { get; } = new SnowballLanguage("Romanian");
		public static SnowballLanguage Portuguese { get; } = new SnowballLanguage("Portuguese");
		public static SnowballLanguage Porter { get; } = new SnowballLanguage("Porter");
		public static SnowballLanguage Norwegian { get; } = new SnowballLanguage("Norwegian");
		public static SnowballLanguage Lovins { get; } = new SnowballLanguage("Lovins");
		public static SnowballLanguage Kp { get; } = new SnowballLanguage("Kp");
		public static SnowballLanguage Italian { get; } = new SnowballLanguage("Italian");
		public static SnowballLanguage Hungarian { get; } = new SnowballLanguage("Hungarian");
		public static SnowballLanguage German2 { get; } = new SnowballLanguage("German2");
		public static SnowballLanguage German { get; } = new SnowballLanguage("German");
		public static SnowballLanguage French { get; } = new SnowballLanguage("French");
		public static SnowballLanguage Finnish { get; } = new SnowballLanguage("Finnish");
		public static SnowballLanguage English { get; } = new SnowballLanguage("English");
		public static SnowballLanguage Dutch { get; } = new SnowballLanguage("Dutch");
		public static SnowballLanguage Danish { get; } = new SnowballLanguage("Danish");
		public static SnowballLanguage Catalan { get; } = new SnowballLanguage("Catalan");
		public static SnowballLanguage Basque { get; } = new SnowballLanguage("Basque");
		public static SnowballLanguage Armenian { get; } = new SnowballLanguage("Armenian");
	}

	public readonly partial struct SynonymFormat
	{
		public SynonymFormat(string value) => Value = value;
		public string Value { get; }

		public static SynonymFormat Wordnet { get; } = new SynonymFormat("wordnet");
		public static SynonymFormat Solr { get; } = new SynonymFormat("solr");
	}

	public readonly partial struct TokenChar
	{
		public TokenChar(string value) => Value = value;
		public string Value { get; }

		public static TokenChar Whitespace { get; } = new TokenChar("whitespace");
		public static TokenChar Symbol { get; } = new TokenChar("symbol");
		public static TokenChar Punctuation { get; } = new TokenChar("punctuation");
		public static TokenChar Letter { get; } = new TokenChar("letter");
		public static TokenChar Digit { get; } = new TokenChar("digit");
		public static TokenChar Custom { get; } = new TokenChar("custom");
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System.Runtime.Serialization;

#nullable restore
namespace Nest.Ingest
{
	public readonly partial struct ConvertType
	{
		public ConvertType(string value) => Value = value;
		public string Value { get; }

		public static ConvertType String { get; } = new ConvertType("string");
		public static ConvertType Long { get; } = new ConvertType("long");
		public static ConvertType Integer { get; } = new ConvertType("integer");
		public static ConvertType Float { get; } = new ConvertType("float");
		public static ConvertType Double { get; } = new ConvertType("double");
		public static ConvertType Boolean { get; } = new ConvertType("boolean");
		public static ConvertType Auto { get; } = new ConvertType("auto");
	}

	public readonly partial struct DateRounding
	{
		public DateRounding(string value) => Value = value;
		public string Value { get; }

		public static DateRounding Year { get; } = new DateRounding("y");
		public static DateRounding Week { get; } = new DateRounding("w");
		public static DateRounding Second { get; } = new DateRounding("s");
		public static DateRounding Minute { get; } = new DateRounding("m");
		public static DateRounding Hour { get; } = new DateRounding("h");
		public static DateRounding Day { get; } = new DateRounding("d");
	}

	public readonly partial struct ShapeType
	{
		public ShapeType(string value) => Value = value;
		public string Value { get; }

		public static ShapeType Shape { get; } = new ShapeType("shape");
		public static ShapeType GeoShape { get; } = new ShapeType("geo_shape");
	}

	public readonly partial struct UserAgentProperty
	{
		public UserAgentProperty(string value) => Value = value;
		public string Value { get; }

		public static UserAgentProperty Patch { get; } = new UserAgentProperty("PATCH");
		public static UserAgentProperty OsName { get; } = new UserAgentProperty("OS_NAME");
		public static UserAgentProperty OsMinor { get; } = new UserAgentProperty("OS_MINOR");
		public static UserAgentProperty OsMajor { get; } = new UserAgentProperty("OS_MAJOR");
		public static UserAgentProperty Os { get; } = new UserAgentProperty("OS");
		public static UserAgentProperty Name { get; } = new UserAgentProperty("NAME");
		public static UserAgentProperty Minor { get; } = new UserAgentProperty("MINOR");
		public static UserAgentProperty Major { get; } = new UserAgentProperty("MAJOR");
		public static UserAgentProperty Device { get; } = new UserAgentProperty("DEVICE");
		public static UserAgentProperty Build { get; } = new UserAgentProperty("BUILD");
	}
}
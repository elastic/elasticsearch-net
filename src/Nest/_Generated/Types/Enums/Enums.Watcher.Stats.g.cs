// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System.Runtime.Serialization;

#nullable restore
namespace Nest.Watcher.Stats
{
	public readonly partial struct WatcherMetric
	{
		public WatcherMetric(string value) => Value = value;
		public string Value { get; }

		public static WatcherMetric QueuedWatches { get; } = new WatcherMetric("queued_watches");
		public static WatcherMetric PendingWatches { get; } = new WatcherMetric("pending_watches");
		public static WatcherMetric CurrentWatches { get; } = new WatcherMetric("current_watches");
		public static WatcherMetric All { get; } = new WatcherMetric("_all");
	}

	public readonly partial struct WatcherState
	{
		public WatcherState(string value) => Value = value;
		public string Value { get; }

		public static WatcherState Stopping { get; } = new WatcherState("stopping");
		public static WatcherState Stopped { get; } = new WatcherState("stopped");
		public static WatcherState Starting { get; } = new WatcherState("starting");
		public static WatcherState Started { get; } = new WatcherState("started");
	}
}
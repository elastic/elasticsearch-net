// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// ------------------------------------------------

using System.Runtime.Serialization;

#nullable restore
namespace Nest.Global.Search
{
	public readonly partial struct BoundaryScanner
	{
		public BoundaryScanner(string value) => Value = value;
		public string Value { get; }

		public static BoundaryScanner Word { get; } = new BoundaryScanner("word");
		public static BoundaryScanner Sentence { get; } = new BoundaryScanner("sentence");
		public static BoundaryScanner Chars { get; } = new BoundaryScanner("chars");
	}

	public readonly partial struct HighlighterEncoder
	{
		public HighlighterEncoder(string value) => Value = value;
		public string Value { get; }

		public static HighlighterEncoder Html { get; } = new HighlighterEncoder("html");
		public static HighlighterEncoder Default { get; } = new HighlighterEncoder("default");
	}

	public readonly partial struct HighlighterFragmenter
	{
		public HighlighterFragmenter(string value) => Value = value;
		public string Value { get; }

		public static HighlighterFragmenter Span { get; } = new HighlighterFragmenter("span");
		public static HighlighterFragmenter Simple { get; } = new HighlighterFragmenter("simple");
	}

	public readonly partial struct HighlighterOrder
	{
		public HighlighterOrder(string value) => Value = value;
		public string Value { get; }

		public static HighlighterOrder Score { get; } = new HighlighterOrder("score");
	}

	public readonly partial struct HighlighterTagsSchema
	{
		public HighlighterTagsSchema(string value) => Value = value;
		public string Value { get; }

		public static HighlighterTagsSchema Styled { get; } = new HighlighterTagsSchema("styled");
	}

	public readonly partial struct HighlighterType
	{
		public HighlighterType(string value) => Value = value;
		public string Value { get; }

		public static HighlighterType Unified { get; } = new HighlighterType("unified");
		public static HighlighterType Plain { get; } = new HighlighterType("plain");
		public static HighlighterType Fvh { get; } = new HighlighterType("fvh");
	}

	public readonly partial struct ScoreMode
	{
		public ScoreMode(string value) => Value = value;
		public string Value { get; }

		public static ScoreMode Total { get; } = new ScoreMode("total");
		public static ScoreMode Multiply { get; } = new ScoreMode("multiply");
		public static ScoreMode Min { get; } = new ScoreMode("min");
		public static ScoreMode Max { get; } = new ScoreMode("max");
		public static ScoreMode Avg { get; } = new ScoreMode("avg");
	}

	public readonly partial struct SortMode
	{
		public SortMode(string value) => Value = value;
		public string Value { get; }

		public static SortMode Sum { get; } = new SortMode("sum");
		public static SortMode Min { get; } = new SortMode("min");
		public static SortMode Median { get; } = new SortMode("median");
		public static SortMode Max { get; } = new SortMode("max");
		public static SortMode Avg { get; } = new SortMode("avg");
	}

	public readonly partial struct SortOrder
	{
		public SortOrder(string value) => Value = value;
		public string Value { get; }

		public static SortOrder Desc { get; } = new SortOrder("desc");
		public static SortOrder Asc { get; } = new SortOrder("asc");
		public static SortOrder Document { get; } = new SortOrder("_doc");
	}

	public readonly partial struct StringDistance
	{
		public StringDistance(string value) => Value = value;
		public string Value { get; }

		public static StringDistance Ngram { get; } = new StringDistance("ngram");
		public static StringDistance Levenshtein { get; } = new StringDistance("levenshtein");
		public static StringDistance JaroWinkler { get; } = new StringDistance("jaro_winkler");
		public static StringDistance Internal { get; } = new StringDistance("internal");
		public static StringDistance DamerauLevenshtein { get; } = new StringDistance("damerau_levenshtein");
	}

	public readonly partial struct SuggestSort
	{
		public SuggestSort(string value) => Value = value;
		public string Value { get; }

		public static SuggestSort Score { get; } = new SuggestSort("score");
		public static SuggestSort Frequency { get; } = new SuggestSort("frequency");
	}

	public readonly partial struct TotalHitsRelation
	{
		public TotalHitsRelation(string value) => Value = value;
		public string Value { get; }

		public static TotalHitsRelation Gte { get; } = new TotalHitsRelation("gte");
		public static TotalHitsRelation Eq { get; } = new TotalHitsRelation("eq");
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport.Products.Elasticsearch.Failures;
using OneOf;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Nest.Cluster.RemoteInfo
{
	public partial class ClusterRemoteProxyInfo
	{
		[JsonPropertyName("connected")]
		public bool Connected
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("initial_connect_timeout")]
		public Nest.Time InitialConnectTimeout
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_proxy_socket_connections")]
		public int MaxProxySocketConnections
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("mode")]
		public string Mode => "proxy";
		[JsonPropertyName("num_proxy_sockets_connected")]
		public int NumProxySocketsConnected
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("proxy_address")]
		public string ProxyAddress
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("server_name")]
		public string ServerName
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("skip_unavailable")]
		public bool SkipUnavailable
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ClusterRemoteSniffInfo
	{
		[JsonPropertyName("connected")]
		public bool Connected
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("initial_connect_timeout")]
		public Nest.Time InitialConnectTimeout
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_connections_per_cluster")]
		public int MaxConnectionsPerCluster
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("mode")]
		public string Mode => "sniff";
		[JsonPropertyName("num_nodes_connected")]
		public long NumNodesConnected
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("seeds")]
		public IReadOnlyCollection<string> Seeds
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("skip_unavailable")]
		public bool SkipUnavailable
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// ------------------------------------------------

using Elastic.Transport.Products.Elasticsearch.Failures;
using OneOf;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Nest.Watcher
{
	public partial class AcknowledgeState
	{
		[JsonPropertyName("state")]
		public Nest.Watcher.AcknowledgementOptions State
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("timestamp")]
		public Nest.DateString Timestamp
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class Action
	{
		[JsonPropertyName("action_type")]
		public Nest.Watcher.ActionType? ActionType { get; set; }

		[JsonPropertyName("condition")]
		public Nest.Watcher.ConditionContainer? Condition { get; set; }

		[JsonPropertyName("foreach")]
		public string? Foreach { get; set; }

		[JsonPropertyName("index")]
		public Nest.Watcher.Index? Index { get; set; }

		[JsonPropertyName("logging")]
		public Nest.Watcher.Logging? Logging { get; set; }

		[JsonPropertyName("max_iterations")]
		public int? MaxIterations { get; set; }

		[JsonPropertyName("name")]
		public Nest.Name? Name { get; set; }

		[JsonPropertyName("throttle_period")]
		public Nest.Time? ThrottlePeriod { get; set; }

		[JsonPropertyName("throttle_period_in_millis")]
		public Nest.EpochMillis? ThrottlePeriodInMillis { get; set; }

		[JsonPropertyName("transform")]
		public Nest.TransformContainer? Transform { get; set; }
	}

	public partial class ActionStatus
	{
		[JsonPropertyName("ack")]
		public Nest.Watcher.AcknowledgeState Ack
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("last_execution")]
		public Nest.Watcher.ExecutionState? LastExecution
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("last_successful_execution")]
		public Nest.Watcher.ExecutionState? LastSuccessfulExecution
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("last_throttle")]
		public Nest.Watcher.ThrottleState? LastThrottle
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ActivationState
	{
		[JsonPropertyName("active")]
		public bool Active { get; set; }

		[JsonPropertyName("timestamp")]
		public Nest.Timestamp Timestamp { get; set; }
	}

	public partial class ActivationStatus
	{
		[JsonPropertyName("actions")]
		public Nest.Watcher.Actions Actions
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("state")]
		public Nest.Watcher.ActivationState State
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("version")]
		public Nest.VersionNumber Version
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class AlwaysCondition
	{
	}

	public partial class ArrayCompareCondition
	{
		[JsonPropertyName("array_path")]
		public string ArrayPath { get; set; }

		[JsonPropertyName("comparison")]
		public string Comparison { get; set; }

		[JsonPropertyName("path")]
		public string Path { get; set; }

		[JsonPropertyName("quantifier")]
		public Nest.Watcher.Quantifier Quantifier { get; set; }

		[JsonPropertyName("value")]
		public object Value { get; set; }
	}

	public partial class ChainInput
	{
		[JsonPropertyName("inputs")]
		public IEnumerable<Nest.Watcher.InputContainer> Inputs { get; set; }
	}

	public partial class CompareCondition
	{
		[JsonPropertyName("comparison")]
		public string? Comparison { get; set; }

		[JsonPropertyName("ctx.payload.match")]
		public Nest.Watcher.CompareContextPayloadCondition? CtxPayloadMatch { get; set; }

		[JsonPropertyName("ctx.payload.value")]
		public Nest.Watcher.CompareContextPayloadCondition? CtxPayloadValue { get; set; }

		[JsonPropertyName("path")]
		public string? Path { get; set; }

		[JsonPropertyName("value")]
		public object? Value { get; set; }
	}

	public partial class CompareContextPayloadCondition
	{
		[JsonPropertyName("eq")]
		public object? Eq { get; set; }

		[JsonPropertyName("gt")]
		public object? Gt { get; set; }

		[JsonPropertyName("gte")]
		public object? Gte { get; set; }

		[JsonPropertyName("lt")]
		public object? Lt { get; set; }

		[JsonPropertyName("lte")]
		public object? Lte { get; set; }
	}

	public partial class ConditionContainer
	{
		[JsonPropertyName("always")]
		public Nest.Watcher.AlwaysCondition? Always { get; set; }

		[JsonPropertyName("array_compare")]
		public Nest.Watcher.ArrayCompareCondition? ArrayCompare { get; set; }

		[JsonPropertyName("compare")]
		public Nest.Watcher.CompareCondition? Compare { get; set; }

		[JsonPropertyName("never")]
		public Nest.Watcher.NeverCondition? Never { get; set; }

		[JsonPropertyName("script")]
		public Nest.Watcher.ScriptCondition? Script { get; set; }
	}

	public partial class CronExpression
	{
	}

	public partial class DailySchedule
	{
		[JsonPropertyName("at")]
		public Union<IEnumerable<string>, Nest.Watcher.TimeOfDay> At { get; set; }
	}

	public partial class EmailResult
	{
		[JsonPropertyName("account")]
		public string? Account
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("message")]
		public Nest.Watcher.EmailResult Message
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("reason")]
		public string? Reason
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ExecutionResult
	{
		[JsonPropertyName("actions")]
		public IReadOnlyCollection<Nest.Watcher.ExecutionResultAction> Actions
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("condition")]
		public Nest.Watcher.ExecutionResultCondition Condition
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("execution_duration")]
		public int ExecutionDuration
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("execution_time")]
		public Nest.DateString ExecutionTime
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("input")]
		public Nest.Watcher.ExecutionResultInput Input
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ExecutionResultAction
	{
		[JsonPropertyName("email")]
		public Nest.Watcher.EmailResult? Email
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("id")]
		public Nest.Id Id
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("index")]
		public Nest.Watcher.IndexResult? Index
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("logging")]
		public Nest.Watcher.LoggingResult? Logging
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("pagerduty")]
		public Nest.Watcher.PagerDutyResult? Pagerduty
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("reason")]
		public string? Reason
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("slack")]
		public Nest.Watcher.SlackResult? Slack
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("status")]
		public Nest.Watcher.ActionStatusOptions Status
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("type")]
		public Nest.Watcher.ActionType Type
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("webhook")]
		public Nest.Watcher.WebhookResult? Webhook
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ExecutionResultCondition
	{
		[JsonPropertyName("met")]
		public bool Met
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("status")]
		public Nest.Watcher.ActionStatusOptions Status
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("type")]
		public Nest.Watcher.ConditionType Type
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ExecutionResultInput
	{
		[JsonPropertyName("payload")]
		public Dictionary<string, object> Payload
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("status")]
		public Nest.Watcher.ActionStatusOptions Status
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("type")]
		public Nest.Watcher.InputType Type
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ExecutionState
	{
		[JsonPropertyName("successful")]
		public bool Successful
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("timestamp")]
		public Nest.DateString Timestamp
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ExecutionThreadPool
	{
		[JsonPropertyName("max_size")]
		public long MaxSize
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("queue_size")]
		public long QueueSize
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class HourlySchedule
	{
		[JsonPropertyName("minute")]
		public IEnumerable<int> Minute { get; set; }
	}

	public partial class HttpInput
	{
		[JsonPropertyName("extract")]
		public IEnumerable<string>? Extract { get; set; }

		[JsonPropertyName("http")]
		public Nest.Watcher.HttpInput? Http { get; set; }

		[JsonPropertyName("request")]
		public Nest.Watcher.HttpInputRequestDefinition? Request { get; set; }

		[JsonPropertyName("response_content_type")]
		public Nest.Watcher.ResponseContentType? ResponseContentType { get; set; }
	}

	public partial class HttpInputAuthentication
	{
		[JsonPropertyName("basic")]
		public Nest.Watcher.HttpInputBasicAuthentication Basic { get; set; }
	}

	public partial class HttpInputBasicAuthentication
	{
		[JsonPropertyName("password")]
		public Nest.Password Password { get; set; }

		[JsonPropertyName("username")]
		public Nest.Username Username { get; set; }
	}

	public partial class HttpInputProxy
	{
		[JsonPropertyName("host")]
		public Nest.Host Host { get; set; }

		[JsonPropertyName("port")]
		public uint Port { get; set; }
	}

	public partial class HttpInputRequestDefinition
	{
		[JsonPropertyName("auth")]
		public Nest.Watcher.HttpInputAuthentication? Auth { get; set; }

		[JsonPropertyName("body")]
		public string? Body { get; set; }

		[JsonPropertyName("connection_timeout")]
		public Nest.Time? ConnectionTimeout { get; set; }

		[JsonPropertyName("headers")]
		public Dictionary<string, string>? Headers { get; set; }

		[JsonPropertyName("host")]
		public Nest.Host? Host { get; set; }

		[JsonPropertyName("method")]
		public Nest.Watcher.HttpInputMethod? Method { get; set; }

		[JsonPropertyName("params")]
		public Dictionary<string, string>? Params { get; set; }

		[JsonPropertyName("path")]
		public string? Path { get; set; }

		[JsonPropertyName("port")]
		public uint? Port { get; set; }

		[JsonPropertyName("proxy")]
		public Nest.Watcher.HttpInputProxy? Proxy { get; set; }

		[JsonPropertyName("read_timeout")]
		public Nest.Time? ReadTimeout { get; set; }

		[JsonPropertyName("scheme")]
		public Nest.Watcher.ConnectionScheme? Scheme { get; set; }

		[JsonPropertyName("url")]
		public string? Url { get; set; }
	}

	public partial class HttpInputRequestResult : Watcher.HttpInputRequestDefinition
	{
	}

	public partial class HttpInputResponseResult
	{
		[JsonPropertyName("body")]
		public string Body
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("headers")]
		public Nest.HttpHeaders Headers
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("status")]
		public int Status
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class Index
	{
		[JsonPropertyName("doc_id")]
		public Nest.Id? DocId { get; set; }
	}

	public partial class IndexResult
	{
		[JsonPropertyName("response")]
		public Nest.Watcher.IndexResultSummary Response
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndexResultSummary
	{
		[JsonPropertyName("created")]
		public bool Created
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("id")]
		public Nest.Id Id
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("index")]
		public Nest.IndexName Index
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("result")]
		public Nest.Result Result
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("type")]
		public Nest.DocType? Type
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("version")]
		public Nest.VersionNumber Version
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesOptions
	{
		[JsonPropertyName("allow_no_indices")]
		public bool AllowNoIndices { get; set; }

		[JsonPropertyName("expand_wildcards")]
		public Nest.ExpandWildcards ExpandWildcards { get; set; }

		[JsonPropertyName("ignore_throttled")]
		public bool? IgnoreThrottled { get; set; }

		[JsonPropertyName("ignore_unavailable")]
		public bool IgnoreUnavailable { get; set; }
	}

	public partial class InputContainer
	{
		[JsonPropertyName("chain")]
		public Nest.Watcher.ChainInput? Chain { get; set; }

		[JsonPropertyName("http")]
		public Nest.Watcher.HttpInput? Http { get; set; }

		[JsonPropertyName("search")]
		public Nest.Watcher.SearchInput? Search { get; set; }

		[JsonPropertyName("simple")]
		public Dictionary<string, object>? Simple { get; set; }
	}

	public partial class Logging
	{
		[JsonPropertyName("level")]
		public string Level { get; set; }

		[JsonPropertyName("text")]
		public string Text { get; set; }
	}

	public partial class LoggingResult
	{
		[JsonPropertyName("logged_text")]
		public string LoggedText
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class NeverCondition
	{
	}

	public partial class PagerDutyActionEventResult
	{
		[JsonPropertyName("event")]
		public Nest.Watcher.PagerDutyEvent Event
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("reason")]
		public string Reason
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("request")]
		public Nest.Watcher.HttpInputRequestResult Request
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("response")]
		public Nest.Watcher.HttpInputResponseResult Response
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class PagerDutyContext
	{
		[JsonPropertyName("href")]
		public string Href
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("src")]
		public string Src
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("type")]
		public Nest.Watcher.PagerDutyContextType Type
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class PagerDutyEvent
	{
		[JsonPropertyName("account")]
		public string Account
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("attach_payload")]
		public bool AttachPayload
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("client")]
		public string Client
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("client_url")]
		public string ClientUrl
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("context")]
		public IReadOnlyCollection<Nest.Watcher.PagerDutyContext> Context
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("description")]
		public string Description
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("event_type")]
		public Nest.Watcher.PagerDutyEventType EventType
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("incident_key")]
		public string IncidentKey
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class PagerDutyResult
	{
		[JsonPropertyName("sent_event")]
		public Nest.Watcher.PagerDutyActionEventResult SentEvent
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ScheduleContainer
	{
		[JsonPropertyName("cron")]
		public Nest.Watcher.CronExpression? Cron { get; set; }

		[JsonPropertyName("daily")]
		public Nest.Watcher.DailySchedule? Daily { get; set; }

		[JsonPropertyName("hourly")]
		public Nest.Watcher.HourlySchedule? Hourly { get; set; }

		[JsonPropertyName("interval")]
		public Nest.Time? Interval { get; set; }

		[JsonPropertyName("monthly")]
		public IEnumerable<Nest.Watcher.TimeOfMonth>? Monthly { get; set; }

		[JsonPropertyName("weekly")]
		public IEnumerable<Nest.Watcher.TimeOfWeek>? Weekly { get; set; }

		[JsonPropertyName("yearly")]
		public IEnumerable<Nest.Watcher.TimeOfYear>? Yearly { get; set; }
	}

	public partial class ScheduleTriggerEvent
	{
		[JsonPropertyName("scheduled_time")]
		public Union<Nest.DateString, string> ScheduledTime { get; set; }

		[JsonPropertyName("triggered_time")]
		public Union<Nest.DateString, string>? TriggeredTime { get; set; }
	}

	public partial class ScriptCondition
	{
		[JsonPropertyName("lang")]
		public string Lang { get; set; }

		[JsonPropertyName("params")]
		public Dictionary<string, object>? Params { get; set; }

		[JsonPropertyName("source")]
		public string Source { get; set; }
	}

	public partial class SearchInput
	{
		[JsonPropertyName("extract")]
		public IEnumerable<string>? Extract { get; set; }

		[JsonPropertyName("request")]
		public Nest.Watcher.SearchInputRequestDefinition Request { get; set; }

		[JsonPropertyName("timeout")]
		public Nest.Time? Timeout { get; set; }
	}

	public partial class SearchInputRequestBody
	{
		[JsonPropertyName("query")]
		public Nest.QueryDsl.QueryContainer Query { get; set; }
	}

	public partial class SearchInputRequestDefinition
	{
		[JsonPropertyName("body")]
		public Nest.Watcher.SearchInputRequestBody? Body { get; set; }

		[JsonPropertyName("indices")]
		public IEnumerable<Nest.IndexName>? Indices { get; set; }

		[JsonPropertyName("indices_options")]
		public Nest.Watcher.IndicesOptions? IndicesOptions { get; set; }

		[JsonPropertyName("rest_total_hits_as_int")]
		public bool? RestTotalHitsAsInt { get; set; }

		[JsonPropertyName("search_type")]
		public Nest.SearchType? SearchType { get; set; }

		[JsonPropertyName("template")]
		public Nest.SearchTemplateRequest? Template { get; set; }
	}

	public partial class SimulatedActions
	{
		[JsonPropertyName("actions")]
		public IEnumerable<string> Actions { get; set; }

		[JsonPropertyName("all")]
		public Nest.Watcher.SimulatedActions All { get; set; }

		[JsonPropertyName("use_all")]
		public bool UseAll { get; set; }
	}

	public partial class SlackAttachment
	{
		[JsonPropertyName("author_icon")]
		public string? AuthorIcon
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("author_link")]
		public string? AuthorLink
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("author_name")]
		public string AuthorName
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("color")]
		public string? Color
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("fallback")]
		public string? Fallback
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("fields")]
		public IReadOnlyCollection<Nest.Watcher.SlackAttachmentField>? Fields
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("footer")]
		public string? Footer
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("footer_icon")]
		public string? FooterIcon
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("image_url")]
		public string? ImageUrl
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("pretext")]
		public string? Pretext
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("text")]
		public string? Text
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("thumb_url")]
		public string? ThumbUrl
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("title")]
		public string Title
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("title_link")]
		public string? TitleLink
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("ts")]
		public Nest.DateString? Ts
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class SlackAttachmentField
	{
		[JsonPropertyName("short")]
		public bool Short
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("title")]
		public string Title
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("value")]
		public string Value
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class SlackDynamicAttachment
	{
		[JsonPropertyName("attachment_template")]
		public Nest.Watcher.SlackAttachment AttachmentTemplate
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("list_path")]
		public string ListPath
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class SlackMessage
	{
		[JsonPropertyName("attachments")]
		public IReadOnlyCollection<Nest.Watcher.SlackAttachment> Attachments
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("dynamic_attachments")]
		public Nest.Watcher.SlackDynamicAttachment? DynamicAttachments
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("from")]
		public string From
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("icon")]
		public string? Icon
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("text")]
		public string Text
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("to")]
		public IReadOnlyCollection<string> To
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class SlackResult
	{
		[JsonPropertyName("account")]
		public string? Account
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("message")]
		public Nest.Watcher.SlackMessage Message
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ThrottleState
	{
		[JsonPropertyName("reason")]
		public string Reason
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("timestamp")]
		public Nest.DateString Timestamp
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class TimeOfDay
	{
		[JsonPropertyName("hour")]
		public IEnumerable<int> Hour { get; set; }

		[JsonPropertyName("minute")]
		public IEnumerable<int> Minute { get; set; }
	}

	public partial class TimeOfMonth
	{
		[JsonPropertyName("at")]
		public IEnumerable<string> At { get; set; }

		[JsonPropertyName("on")]
		public IEnumerable<int> On { get; set; }
	}

	public partial class TimeOfWeek
	{
		[JsonPropertyName("at")]
		public IEnumerable<string> At { get; set; }

		[JsonPropertyName("on")]
		public IEnumerable<Nest.Watcher.Day> On { get; set; }
	}

	public partial class TimeOfYear
	{
		[JsonPropertyName("at")]
		public IEnumerable<string> At { get; set; }

		[JsonPropertyName("int")]
		public IEnumerable<Nest.Watcher.Month> Int { get; set; }

		[JsonPropertyName("on")]
		public IEnumerable<int> On { get; set; }
	}

	public partial class TriggerContainer
	{
		[JsonPropertyName("schedule")]
		public Nest.Watcher.ScheduleContainer Schedule { get; set; }
	}

	public partial class TriggerEventContainer
	{
		[JsonPropertyName("schedule")]
		public Nest.Watcher.ScheduleTriggerEvent Schedule
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class TriggerEventResult
	{
		[JsonPropertyName("manual")]
		public Nest.Watcher.TriggerEventContainer Manual
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("triggered_time")]
		public Nest.DateString TriggeredTime
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("type")]
		public string Type
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class Watch
	{
		[JsonPropertyName("actions")]
		public Dictionary<Nest.IndexName, Nest.Watcher.Action> Actions { get; set; }

		[JsonPropertyName("condition")]
		public Nest.Watcher.ConditionContainer Condition { get; set; }

		[JsonPropertyName("input")]
		public Nest.Watcher.InputContainer Input { get; set; }

		[JsonPropertyName("metadata")]
		public Nest.Metadata? Metadata { get; set; }

		[JsonPropertyName("status")]
		public Nest.Watcher.WatchStatus? Status { get; set; }

		[JsonPropertyName("throttle_period")]
		public string? ThrottlePeriod { get; set; }

		[JsonPropertyName("throttle_period_in_millis")]
		public long? ThrottlePeriodInMillis { get; set; }

		[JsonPropertyName("transform")]
		public Nest.TransformContainer? Transform { get; set; }

		[JsonPropertyName("trigger")]
		public Nest.Watcher.TriggerContainer Trigger { get; set; }
	}

	public partial class WatchStatus
	{
		[JsonPropertyName("actions")]
		public Nest.Watcher.Actions Actions { get; set; }

		[JsonPropertyName("execution_state")]
		public string? ExecutionState { get; set; }

		[JsonPropertyName("last_checked")]
		public Nest.DateString? LastChecked { get; set; }

		[JsonPropertyName("last_met_condition")]
		public Nest.DateString? LastMetCondition { get; set; }

		[JsonPropertyName("state")]
		public Nest.Watcher.ActivationState State { get; set; }

		[JsonPropertyName("version")]
		public Nest.VersionNumber Version { get; set; }
	}

	public partial class WebhookResult
	{
		[JsonPropertyName("request")]
		public Nest.Watcher.HttpInputRequestResult Request
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("response")]
		public Nest.Watcher.HttpInputResponseResult? Response
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}
}
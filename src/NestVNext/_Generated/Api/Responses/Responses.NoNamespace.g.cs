// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using System;
using System.Text.Json.Serialization;

namespace Nest
{
    public class BulkResponse : ResponseBase
    {
        [JsonPropertyName("errors")]
        public bool Errors { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("took")]
        public long Took { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("ingest_took")]
        public long IngestTook { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class ClearScrollResponse : ResponseBase
    {
    }

    public class CountResponse : ResponseBase
    {
        [JsonPropertyName("count")]
        public long Count { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class CreateResponse : WriteResponseBase
    {
    }

    public class DeleteResponse : WriteResponseBase
    {
    }

    public class DeleteByQueryResponse : ResponseBase
    {
        [JsonPropertyName("batches")]
        public long Batches { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("deleted")]
        public long Deleted { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("noops")]
        public long Noops { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("slice_id")]
        public int SliceId { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("throttled_millis")]
        public long ThrottledMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("throttled_until_millis")]
        public long ThrottledUntilMillis { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("timed_out")]
        public bool TimedOut { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("took")]
        public long Took { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total")]
        public long Total { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("version_conflicts")]
        public long VersionConflicts { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class DeleteByQueryRethrottleResponse : ListTasksResponse
    {
    }

    public class DeleteScriptResponse : AcknowledgedResponseBase
    {
    }

    public class DocumentExistsResponse : ResponseBase
    {
    }

    public class SourceExistsResponse : ResponseBase
    {
    }

    public class ExplainResponse : ResponseBase
    {
        [JsonPropertyName("matched")]
        public bool Matched { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class FieldCapabilitiesResponse : ResponseBase
    {
    }

    public class GetResponse : ResponseBase
    {
        [JsonPropertyName("_index")]
        public string Index { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("found")]
        public bool Found { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("_id")]
        public string Id { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("_primary_term")]
        public long PrimaryTerm { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("_routing")]
        public string Routing { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("_seq_no")]
        public long SeqNo { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("_type")]
        public string Type { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("_version")]
        public long Version { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class GetScriptResponse : ResponseBase
    {
        [JsonPropertyName("found")]
        public bool Found { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class SourceResponse : ResponseBase
    {
    }

    public class IndexResponse : WriteResponseBase
    {
    }

    public class RootNodeInfoResponse : ResponseBase
    {
        [JsonPropertyName("cluster_name")]
        public string ClusterName { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("cluster_uuid")]
        public string ClusterUuid { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("name")]
        public string Name { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("tagline")]
        public string Tagline { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class MultiSearchResponse : ResponseBase
    {
    }

    public class MultiTermVectorsResponse : ResponseBase
    {
    }

    public class PingResponse : ResponseBase
    {
    }

    public class PutScriptResponse : AcknowledgedResponseBase
    {
    }

    public class ReindexResponse : ResponseBase
    {
        [JsonPropertyName("batches")]
        public long Batches { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("created")]
        public long Created { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("noops")]
        public long Noops { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("slice_id")]
        public int SliceId { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("timed_out")]
        public bool TimedOut { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total")]
        public long Total { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("updated")]
        public long Updated { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("version_conflicts")]
        public long VersionConflicts { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class ReindexRethrottleResponse : ResponseBase
    {
    }

    public class RenderSearchTemplateResponse : ResponseBase
    {
    }

    public class ExecutePainlessScriptResponse : ResponseBase
    {
    }

    public class ScrollResponse : SearchResponse
    {
    }

    public class SearchResponse : ResponseBase
    {
        [JsonPropertyName("took")]
        public long Took { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("timed_out")]
        public bool TimedOut { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("max_score")]
        public double MaxScore { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("num_reduce_phases")]
        public long NumReducePhases { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("pit_id")]
        public string PitId { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("terminated_early")]
        public bool TerminatedEarly { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class SearchShardsResponse : ResponseBase
    {
    }

    public class TermVectorsResponse : ResponseBase
    {
        [JsonPropertyName("found")]
        public bool Found { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("took")]
        public long Took { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("_version")]
        public long Version { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }

    public class UpdateResponse : WriteResponseBase
    {
    }

    public class UpdateByQueryResponse : ResponseBase
    {
        [JsonPropertyName("batches")]
        public long Batches { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("noops")]
        public long Noops { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("deleted")]
        public long Deleted { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("timed_out")]
        public bool TimedOut { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("took")]
        public long Took { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("total")]
        public long Total { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("updated")]
        public long Updated { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }

        [JsonPropertyName("version_conflicts")]
        public long VersionConflicts { get; 
#if NET5_0
            init;
#else
            internal set; 
#endif
        }
    }
}
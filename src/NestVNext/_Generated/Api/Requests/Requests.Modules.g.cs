// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using System;

namespace Nest
{
    public interface ICleanupRepositoryRequest : IRequest<CleanupRepositoryRequestParameters>
    {
    }

    public class CleanupRepositoryRequest : PlainRequestBase<CleanupRepositoryRequestParameters>, ICleanupRepositoryRequest
    {
        protected ICleanupRepositoryRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotCleanupRepository;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }

    public interface ICreateRepositoryRequest : IRequest<CreateRepositoryRequestParameters>
    {
    }

    public class CreateRepositoryRequest : PlainRequestBase<CreateRepositoryRequestParameters>, ICreateRepositoryRequest
    {
        protected ICreateRepositoryRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotCreateRepository;
        protected override HttpMethod HttpMethod => HttpMethod.PUT;
        protected override bool SupportsBody => false;
    }

    public interface IDeleteRepositoryRequest : IRequest<DeleteRepositoryRequestParameters>
    {
    }

    public class DeleteRepositoryRequest : PlainRequestBase<DeleteRepositoryRequestParameters>, IDeleteRepositoryRequest
    {
        protected IDeleteRepositoryRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotDeleteRepository;
        protected override HttpMethod HttpMethod => HttpMethod.DELETE;
        protected override bool SupportsBody => false;
    }

    public interface IDeleteScriptRequest : IRequest<DeleteScriptRequestParameters>
    {
    }

    public class DeleteScriptRequest : PlainRequestBase<DeleteScriptRequestParameters>, IDeleteScriptRequest
    {
        protected IDeleteScriptRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceDeleteScript;
        protected override HttpMethod HttpMethod => HttpMethod.DELETE;
        protected override bool SupportsBody => false;
    }

    public interface IDeleteSnapshotRequest : IRequest<DeleteSnapshotRequestParameters>
    {
    }

    public class DeleteSnapshotRequest : PlainRequestBase<DeleteSnapshotRequestParameters>, IDeleteSnapshotRequest
    {
        protected IDeleteSnapshotRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotDelete;
        protected override HttpMethod HttpMethod => HttpMethod.DELETE;
        protected override bool SupportsBody => false;
    }

    public interface IExecutePainlessScriptRequest : IRequest<ExecutePainlessScriptRequestParameters>
    {
    }

    public class ExecutePainlessScriptRequest : PlainRequestBase<ExecutePainlessScriptRequestParameters>, IExecutePainlessScriptRequest
    {
        protected IExecutePainlessScriptRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceScriptsPainlessExecute;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }

    public interface IGetRepositoryRequest : IRequest<GetRepositoryRequestParameters>
    {
    }

    public class GetRepositoryRequest : PlainRequestBase<GetRepositoryRequestParameters>, IGetRepositoryRequest
    {
        protected IGetRepositoryRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotGetRepository;
        protected override HttpMethod HttpMethod => HttpMethod.GET;
        protected override bool SupportsBody => false;
    }

    public interface IGetScriptRequest : IRequest<GetScriptRequestParameters>
    {
    }

    public class GetScriptRequest : PlainRequestBase<GetScriptRequestParameters>, IGetScriptRequest
    {
        protected IGetScriptRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceGetScript;
        protected override HttpMethod HttpMethod => HttpMethod.GET;
        protected override bool SupportsBody => false;
    }

    public interface IGetSnapshotRequest : IRequest<GetSnapshotRequestParameters>
    {
    }

    public class GetSnapshotRequest : PlainRequestBase<GetSnapshotRequestParameters>, IGetSnapshotRequest
    {
        protected IGetSnapshotRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotGet;
        protected override HttpMethod HttpMethod => HttpMethod.GET;
        protected override bool SupportsBody => false;
    }

    public interface IPutScriptRequest : IRequest<PutScriptRequestParameters>
    {
    }

    public class PutScriptRequest : PlainRequestBase<PutScriptRequestParameters>, IPutScriptRequest
    {
        protected IPutScriptRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespacePutScript;
        protected override HttpMethod HttpMethod => HttpMethod.PUT;
        protected override bool SupportsBody => false;
    }

    public interface IRestoreRequest : IRequest<RestoreRequestParameters>
    {
    }

    public class RestoreRequest : PlainRequestBase<RestoreRequestParameters>, IRestoreRequest
    {
        protected IRestoreRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotRestore;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }

    public interface ISnapshotRequest : IRequest<SnapshotRequestParameters>
    {
    }

    public class SnapshotRequest : PlainRequestBase<SnapshotRequestParameters>, ISnapshotRequest
    {
        protected ISnapshotRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotCreate;
        protected override HttpMethod HttpMethod => HttpMethod.PUT;
        protected override bool SupportsBody => false;
    }

    public interface ISnapshotStatusRequest : IRequest<SnapshotStatusRequestParameters>
    {
    }

    public class SnapshotStatusRequest : PlainRequestBase<SnapshotStatusRequestParameters>, ISnapshotStatusRequest
    {
        protected ISnapshotStatusRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotStatus;
        protected override HttpMethod HttpMethod => HttpMethod.GET;
        protected override bool SupportsBody => false;
    }

    public interface IVerifyRepositoryRequest : IRequest<VerifyRepositoryRequestParameters>
    {
    }

    public class VerifyRepositoryRequest : PlainRequestBase<VerifyRepositoryRequestParameters>, IVerifyRepositoryRequest
    {
        protected IVerifyRepositoryRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.SnapshotVerifyRepository;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }
}
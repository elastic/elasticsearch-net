// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using System;
using System.Threading;
using System.Threading.Tasks;
using Elastic.Transport;

#nullable enable
namespace Nest
{
    public class FindStructureRequestParameters : RequestParameters<FindStructureRequestParameters>
    {
        public string? Charset { get => Q<string?>("charset"); set => Q("charset", value); }

        public string? ColumnNames { get => Q<string?>("column_names"); set => Q("column_names", value); }

        public string? Delimiter { get => Q<string?>("delimiter"); set => Q("delimiter", value); }

        public bool? Explain { get => Q<bool?>("explain"); set => Q("explain", value); }

        public string? Format { get => Q<string?>("format"); set => Q("format", value); }

        public string? GrokPattern { get => Q<string?>("grok_pattern"); set => Q("grok_pattern", value); }

        public bool? HasHeaderRow { get => Q<bool?>("has_header_row"); set => Q("has_header_row", value); }

        public uint? LinesToSample { get => Q<uint?>("lines_to_sample"); set => Q("lines_to_sample", value); }

        public string? Quote { get => Q<string?>("quote"); set => Q("quote", value); }

        public bool? ShouldTrimFields { get => Q<bool?>("should_trim_fields"); set => Q("should_trim_fields", value); }

        public Time? Timeout { get => Q<Time?>("timeout"); set => Q("timeout", value); }

        public Field? TimestampField { get => Q<Field?>("timestamp_field"); set => Q("timestamp_field", value); }

        public string? TimestampFormat { get => Q<string?>("timestamp_format"); set => Q("timestamp_format", value); }
    }
}
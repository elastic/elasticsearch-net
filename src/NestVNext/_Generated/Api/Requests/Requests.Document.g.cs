// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using System;

namespace Nest
{
    public interface IBulkRequest : IRequest<BulkRequestParameters>
    {
    }

    public class BulkRequest : PlainRequestBase<BulkRequestParameters>, IBulkRequest
    {
        protected IBulkRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceBulk;
        protected override HttpMethod HttpMethod => HttpMethod.PUT;
        protected override bool SupportsBody => false;
    }

    public interface ICreateRequest : IRequest<CreateRequestParameters>
    {
    }

    public class CreateRequest : PlainRequestBase<CreateRequestParameters>, ICreateRequest
    {
        protected ICreateRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceCreate;
        protected override HttpMethod HttpMethod => HttpMethod.PUT;
        protected override bool SupportsBody => false;
    }

    public interface IDeleteByQueryRequest : IRequest<DeleteByQueryRequestParameters>
    {
    }

    public class DeleteByQueryRequest : PlainRequestBase<DeleteByQueryRequestParameters>, IDeleteByQueryRequest
    {
        protected IDeleteByQueryRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceDeleteByQuery;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }

    public interface IDeleteByQueryRethrottleRequest : IRequest<DeleteByQueryRethrottleRequestParameters>
    {
    }

    public class DeleteByQueryRethrottleRequest : PlainRequestBase<DeleteByQueryRethrottleRequestParameters>, IDeleteByQueryRethrottleRequest
    {
        protected IDeleteByQueryRethrottleRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceDeleteByQueryRethrottle;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }

    public interface IDeleteRequest : IRequest<DeleteRequestParameters>
    {
    }

    public class DeleteRequest : PlainRequestBase<DeleteRequestParameters>, IDeleteRequest
    {
        protected IDeleteRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceDelete;
        protected override HttpMethod HttpMethod => HttpMethod.DELETE;
        protected override bool SupportsBody => false;
    }

    public interface IDocumentExistsRequest : IRequest<DocumentExistsRequestParameters>
    {
    }

    public class DocumentExistsRequest : PlainRequestBase<DocumentExistsRequestParameters>, IDocumentExistsRequest
    {
        protected IDocumentExistsRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceExists;
        protected override HttpMethod HttpMethod => HttpMethod.HEAD;
        protected override bool SupportsBody => false;
    }

    public interface IGetRequest : IRequest<GetRequestParameters>
    {
    }

    public class GetRequest : PlainRequestBase<GetRequestParameters>, IGetRequest
    {
        protected IGetRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceGet;
        protected override HttpMethod HttpMethod => HttpMethod.GET;
        protected override bool SupportsBody => false;
    }

    public interface IIndexRequest : IRequest<IndexRequestParameters>
    {
    }

    public class IndexRequest : PlainRequestBase<IndexRequestParameters>, IIndexRequest
    {
        protected IIndexRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceIndex;
        protected override HttpMethod HttpMethod => HttpMethod.PUT;
        protected override bool SupportsBody => false;
    }

    public interface IMultiGetRequest : IRequest<MultiGetRequestParameters>
    {
    }

    public class MultiGetRequest : PlainRequestBase<MultiGetRequestParameters>, IMultiGetRequest
    {
        protected IMultiGetRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceMget;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }

    public interface IMultiTermVectorsRequest : IRequest<MultiTermVectorsRequestParameters>
    {
    }

    public class MultiTermVectorsRequest : PlainRequestBase<MultiTermVectorsRequestParameters>, IMultiTermVectorsRequest
    {
        protected IMultiTermVectorsRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceMtermvectors;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }

    public interface IReindexRequest : IRequest<ReindexRequestParameters>
    {
    }

    public class ReindexRequest : PlainRequestBase<ReindexRequestParameters>, IReindexRequest
    {
        protected IReindexRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceReindex;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }

    public interface IReindexRethrottleRequest : IRequest<ReindexRethrottleRequestParameters>
    {
    }

    public class ReindexRethrottleRequest : PlainRequestBase<ReindexRethrottleRequestParameters>, IReindexRethrottleRequest
    {
        protected IReindexRethrottleRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceReindexRethrottle;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }

    public interface ISourceExistsRequest : IRequest<SourceExistsRequestParameters>
    {
    }

    public class SourceExistsRequest : PlainRequestBase<SourceExistsRequestParameters>, ISourceExistsRequest
    {
        protected ISourceExistsRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceExistsSource;
        protected override HttpMethod HttpMethod => HttpMethod.HEAD;
        protected override bool SupportsBody => false;
    }

    public interface ISourceRequest : IRequest<SourceRequestParameters>
    {
    }

    public class SourceRequest : PlainRequestBase<SourceRequestParameters>, ISourceRequest
    {
        protected ISourceRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceGetSource;
        protected override HttpMethod HttpMethod => HttpMethod.GET;
        protected override bool SupportsBody => false;
    }

    public interface ITermVectorsRequest : IRequest<TermVectorsRequestParameters>
    {
    }

    public class TermVectorsRequest : PlainRequestBase<TermVectorsRequestParameters>, ITermVectorsRequest
    {
        protected ITermVectorsRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceTermvectors;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }

    public interface IUpdateByQueryRequest : IRequest<UpdateByQueryRequestParameters>
    {
    }

    public class UpdateByQueryRequest : PlainRequestBase<UpdateByQueryRequestParameters>, IUpdateByQueryRequest
    {
        protected IUpdateByQueryRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceUpdateByQuery;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }

    public interface IUpdateByQueryRethrottleRequest : IRequest<UpdateByQueryRethrottleRequestParameters>
    {
    }

    public class UpdateByQueryRethrottleRequest : PlainRequestBase<UpdateByQueryRethrottleRequestParameters>, IUpdateByQueryRethrottleRequest
    {
        protected IUpdateByQueryRethrottleRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceUpdateByQueryRethrottle;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }

    public interface IUpdateRequest : IRequest<UpdateRequestParameters>
    {
    }

    public class UpdateRequest : PlainRequestBase<UpdateRequestParameters>, IUpdateRequest
    {
        protected IUpdateRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.NoNamespaceUpdate;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }
}
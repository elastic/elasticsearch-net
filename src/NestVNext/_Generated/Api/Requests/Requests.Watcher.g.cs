// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗ 
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝ 
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗   
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝   
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗ 
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝ 
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
// Run the following in the root of the repository:
//
// TODO - RUN INSTRUCTIONS
//
// ------------------------------------------------
using System;

namespace Nest
{
    public interface IAcknowledgeWatchRequest : IRequest<AcknowledgeWatchRequestParameters>
    {
    }

    public class AcknowledgeWatchRequest : PlainRequestBase<AcknowledgeWatchRequestParameters>, IAcknowledgeWatchRequest
    {
        protected IAcknowledgeWatchRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.WatcherAckWatch;
        protected override HttpMethod HttpMethod => HttpMethod.PUT;
        protected override bool SupportsBody => false;
    }

    public interface IActivateWatchRequest : IRequest<ActivateWatchRequestParameters>
    {
    }

    public class ActivateWatchRequest : PlainRequestBase<ActivateWatchRequestParameters>, IActivateWatchRequest
    {
        protected IActivateWatchRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.WatcherActivateWatch;
        protected override HttpMethod HttpMethod => HttpMethod.PUT;
        protected override bool SupportsBody => false;
    }

    public interface IDeactivateWatchRequest : IRequest<DeactivateWatchRequestParameters>
    {
    }

    public class DeactivateWatchRequest : PlainRequestBase<DeactivateWatchRequestParameters>, IDeactivateWatchRequest
    {
        protected IDeactivateWatchRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.WatcherDeactivateWatch;
        protected override HttpMethod HttpMethod => HttpMethod.PUT;
        protected override bool SupportsBody => false;
    }

    public interface IDeleteWatchRequest : IRequest<DeleteWatchRequestParameters>
    {
    }

    public class DeleteWatchRequest : PlainRequestBase<DeleteWatchRequestParameters>, IDeleteWatchRequest
    {
        protected IDeleteWatchRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.WatcherDeleteWatch;
        protected override HttpMethod HttpMethod => HttpMethod.DELETE;
        protected override bool SupportsBody => false;
    }

    public interface IExecuteWatchRequest : IRequest<ExecuteWatchRequestParameters>
    {
    }

    public class ExecuteWatchRequest : PlainRequestBase<ExecuteWatchRequestParameters>, IExecuteWatchRequest
    {
        protected IExecuteWatchRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.WatcherExecuteWatch;
        protected override HttpMethod HttpMethod => HttpMethod.PUT;
        protected override bool SupportsBody => false;
    }

    public interface IGetWatchRequest : IRequest<GetWatchRequestParameters>
    {
    }

    public class GetWatchRequest : PlainRequestBase<GetWatchRequestParameters>, IGetWatchRequest
    {
        protected IGetWatchRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.WatcherGetWatch;
        protected override HttpMethod HttpMethod => HttpMethod.GET;
        protected override bool SupportsBody => false;
    }

    public interface IPutWatchRequest : IRequest<PutWatchRequestParameters>
    {
    }

    public class PutWatchRequest : PlainRequestBase<PutWatchRequestParameters>, IPutWatchRequest
    {
        protected IPutWatchRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.WatcherPutWatch;
        protected override HttpMethod HttpMethod => HttpMethod.PUT;
        protected override bool SupportsBody => false;
    }

    public interface IStartWatcherRequest : IRequest<StartWatcherRequestParameters>
    {
    }

    public class StartWatcherRequest : PlainRequestBase<StartWatcherRequestParameters>, IStartWatcherRequest
    {
        protected IStartWatcherRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.WatcherStart;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }

    public interface IStopWatcherRequest : IRequest<StopWatcherRequestParameters>
    {
    }

    public class StopWatcherRequest : PlainRequestBase<StopWatcherRequestParameters>, IStopWatcherRequest
    {
        protected IStopWatcherRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.WatcherStop;
        protected override HttpMethod HttpMethod => HttpMethod.POST;
        protected override bool SupportsBody => false;
    }

    public interface IWatcherStatsRequest : IRequest<WatcherStatsRequestParameters>
    {
    }

    public class WatcherStatsRequest : PlainRequestBase<WatcherStatsRequestParameters>, IWatcherStatsRequest
    {
        protected IWatcherStatsRequest Self => this;
        internal override ApiUrls ApiUrls => ApiUrlsLookups.WatcherStats;
        protected override HttpMethod HttpMethod => HttpMethod.GET;
        protected override bool SupportsBody => false;
    }
}
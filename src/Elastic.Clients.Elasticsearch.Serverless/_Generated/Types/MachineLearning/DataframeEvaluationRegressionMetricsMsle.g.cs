// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Serverless.Fluent;
using Elastic.Clients.Elasticsearch.Serverless.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Serverless.MachineLearning;

public sealed partial class DataframeEvaluationRegressionMetricsMsle
{
	/// <summary>
	/// <para>
	/// Defines the transition point at which you switch from minimizing quadratic error to minimizing quadratic log error. Defaults to 1.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("offset")]
	public double? Offset { get; set; }
}

public sealed partial class DataframeEvaluationRegressionMetricsMsleDescriptor : SerializableDescriptor<DataframeEvaluationRegressionMetricsMsleDescriptor>
{
	internal DataframeEvaluationRegressionMetricsMsleDescriptor(Action<DataframeEvaluationRegressionMetricsMsleDescriptor> configure) => configure.Invoke(this);

	public DataframeEvaluationRegressionMetricsMsleDescriptor() : base()
	{
	}

	private double? OffsetValue { get; set; }

	/// <summary>
	/// <para>
	/// Defines the transition point at which you switch from minimizing quadratic error to minimizing quadratic log error. Defaults to 1.
	/// </para>
	/// </summary>
	public DataframeEvaluationRegressionMetricsMsleDescriptor Offset(double? offset)
	{
		OffsetValue = offset;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		if (OffsetValue.HasValue)
		{
			writer.WritePropertyName("offset");
			writer.WriteNumberValue(OffsetValue.Value);
		}

		writer.WriteEndObject();
	}
}
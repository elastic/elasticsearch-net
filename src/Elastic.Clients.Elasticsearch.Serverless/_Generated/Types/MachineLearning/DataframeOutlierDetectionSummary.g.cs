// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Serverless.Fluent;
using Elastic.Clients.Elasticsearch.Serverless.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Serverless.MachineLearning;

public sealed partial class DataframeOutlierDetectionSummary
{
	/// <summary>
	/// <para>The AUC ROC (area under the curve of the receiver operating characteristic) score and optionally the curve.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("auc_roc")]
	public Elastic.Clients.Elasticsearch.Serverless.MachineLearning.DataframeEvaluationSummaryAucRoc? AucRoc { get; init; }

	/// <summary>
	/// <para>Set the different thresholds of the outlier score at where the metrics (`tp` - true positive, `fp` - false positive, `tn` - true negative, `fn` - false negative) are calculated.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("confusion_matrix")]
	public IReadOnlyDictionary<string, Elastic.Clients.Elasticsearch.Serverless.MachineLearning.ConfusionMatrixThreshold>? ConfusionMatrix { get; init; }

	/// <summary>
	/// <para>Set the different thresholds of the outlier score at where the metric is calculated.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("precision")]
	public IReadOnlyDictionary<string, double>? Precision { get; init; }

	/// <summary>
	/// <para>Set the different thresholds of the outlier score at where the metric is calculated.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("recall")]
	public IReadOnlyDictionary<string, double>? Recall { get; init; }
}
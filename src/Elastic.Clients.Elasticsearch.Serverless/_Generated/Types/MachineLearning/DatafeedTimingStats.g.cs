// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Serverless.Fluent;
using Elastic.Clients.Elasticsearch.Serverless.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Serverless.MachineLearning;

public sealed partial class DatafeedTimingStats
{
	/// <summary>
	/// <para>
	/// The average search time per bucket, in milliseconds.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("average_search_time_per_bucket_ms")]
	public double? AverageSearchTimePerBucketMs { get; init; }

	/// <summary>
	/// <para>
	/// The number of buckets processed.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("bucket_count")]
	public long BucketCount { get; init; }

	/// <summary>
	/// <para>
	/// The exponential average search time per hour, in milliseconds.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("exponential_average_search_time_per_hour_ms")]
	public double ExponentialAverageSearchTimePerHourMs { get; init; }

	/// <summary>
	/// <para>
	/// Identifier for the anomaly detection job.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("job_id")]
	public string JobId { get; init; }

	/// <summary>
	/// <para>
	/// The number of searches run by the datafeed.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("search_count")]
	public long SearchCount { get; init; }

	/// <summary>
	/// <para>
	/// The total time the datafeed spent searching, in milliseconds.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("total_search_time_ms")]
	public double TotalSearchTimeMs { get; init; }
}
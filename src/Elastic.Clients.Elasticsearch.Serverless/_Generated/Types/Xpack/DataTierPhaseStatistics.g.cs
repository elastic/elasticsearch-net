// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Serverless.Fluent;
using Elastic.Clients.Elasticsearch.Serverless.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Serverless.Xpack;

public sealed partial class DataTierPhaseStatistics
{
	[JsonInclude, JsonPropertyName("doc_count")]
	public long DocCount { get; init; }
	[JsonInclude, JsonPropertyName("index_count")]
	public long IndexCount { get; init; }
	[JsonInclude, JsonPropertyName("node_count")]
	public long NodeCount { get; init; }
	[JsonInclude, JsonPropertyName("primary_shard_count")]
	public long PrimaryShardCount { get; init; }
	[JsonInclude, JsonPropertyName("primary_shard_size_avg_bytes")]
	public long PrimaryShardSizeAvgBytes { get; init; }
	[JsonInclude, JsonPropertyName("primary_shard_size_mad_bytes")]
	public long PrimaryShardSizeMadBytes { get; init; }
	[JsonInclude, JsonPropertyName("primary_shard_size_median_bytes")]
	public long PrimaryShardSizeMedianBytes { get; init; }
	[JsonInclude, JsonPropertyName("primary_size_bytes")]
	public long PrimarySizeBytes { get; init; }
	[JsonInclude, JsonPropertyName("total_shard_count")]
	public long TotalShardCount { get; init; }
	[JsonInclude, JsonPropertyName("total_size_bytes")]
	public long TotalSizeBytes { get; init; }
}
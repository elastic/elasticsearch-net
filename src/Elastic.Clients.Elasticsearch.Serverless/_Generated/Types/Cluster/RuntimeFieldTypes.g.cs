// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Serverless.Fluent;
using Elastic.Clients.Elasticsearch.Serverless.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Serverless.Cluster;

public sealed partial class RuntimeFieldTypes
{
	/// <summary>
	/// <para>Maximum number of characters for a single runtime field script.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("chars_max")]
	public int CharsMax { get; init; }

	/// <summary>
	/// <para>Total number of characters for the scripts that define the current runtime field data type.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("chars_total")]
	public int CharsTotal { get; init; }

	/// <summary>
	/// <para>Number of runtime fields mapped to the field data type in selected nodes.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("count")]
	public int Count { get; init; }

	/// <summary>
	/// <para>Maximum number of accesses to doc_values for a single runtime field script</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("doc_max")]
	public int DocMax { get; init; }

	/// <summary>
	/// <para>Total number of accesses to doc_values for the scripts that define the current runtime field data type.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("doc_total")]
	public int DocTotal { get; init; }

	/// <summary>
	/// <para>Number of indices containing a mapping of the runtime field data type in selected nodes.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("index_count")]
	public int IndexCount { get; init; }

	/// <summary>
	/// <para>Script languages used for the runtime fields scripts.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("lang")]
	public IReadOnlyCollection<string> Lang { get; init; }

	/// <summary>
	/// <para>Maximum number of lines for a single runtime field script.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("lines_max")]
	public int LinesMax { get; init; }

	/// <summary>
	/// <para>Total number of lines for the scripts that define the current runtime field data type.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("lines_total")]
	public int LinesTotal { get; init; }

	/// <summary>
	/// <para>Field data type used in selected nodes.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("name")]
	public string Name { get; init; }

	/// <summary>
	/// <para>Number of runtime fields that don’t declare a script.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("scriptless_count")]
	public int ScriptlessCount { get; init; }

	/// <summary>
	/// <para>Number of runtime fields that shadow an indexed field.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("shadowed_count")]
	public int ShadowedCount { get; init; }

	/// <summary>
	/// <para>Maximum number of accesses to _source for a single runtime field script.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("source_max")]
	public int SourceMax { get; init; }

	/// <summary>
	/// <para>Total number of accesses to _source for the scripts that define the current runtime field data type.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("source_total")]
	public int SourceTotal { get; init; }
}
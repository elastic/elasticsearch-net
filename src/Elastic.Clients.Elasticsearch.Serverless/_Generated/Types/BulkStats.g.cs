// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Serverless.Fluent;
using Elastic.Clients.Elasticsearch.Serverless.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Serverless;

public sealed partial class BulkStats
{
	[JsonInclude, JsonPropertyName("avg_size")]
	public Elastic.Clients.Elasticsearch.Serverless.ByteSize? AvgSize { get; init; }
	[JsonInclude, JsonPropertyName("avg_size_in_bytes")]
	public long AvgSizeInBytes { get; init; }
	[JsonInclude, JsonPropertyName("avg_time")]
	public Elastic.Clients.Elasticsearch.Serverless.Duration? AvgTime { get; init; }
	[JsonInclude, JsonPropertyName("avg_time_in_millis")]
	public long AvgTimeInMillis { get; init; }
	[JsonInclude, JsonPropertyName("total_operations")]
	public long TotalOperations { get; init; }
	[JsonInclude, JsonPropertyName("total_size")]
	public Elastic.Clients.Elasticsearch.Serverless.ByteSize? TotalSize { get; init; }
	[JsonInclude, JsonPropertyName("total_size_in_bytes")]
	public long TotalSizeInBytes { get; init; }
	[JsonInclude, JsonPropertyName("total_time")]
	public Elastic.Clients.Elasticsearch.Serverless.Duration? TotalTime { get; init; }
	[JsonInclude, JsonPropertyName("total_time_in_millis")]
	public long TotalTimeInMillis { get; init; }
}
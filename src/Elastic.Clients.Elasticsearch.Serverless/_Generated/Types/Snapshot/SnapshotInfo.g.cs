// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Serverless.Fluent;
using Elastic.Clients.Elasticsearch.Serverless.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Serverless.Snapshot;

public sealed partial class SnapshotInfo
{
	[JsonInclude, JsonPropertyName("data_streams")]
	public IReadOnlyCollection<string> DataStreams { get; init; }
	[JsonInclude, JsonPropertyName("duration")]
	public Elastic.Clients.Elasticsearch.Serverless.Duration? Duration { get; init; }
	[JsonInclude, JsonPropertyName("duration_in_millis")]
	public long? DurationInMillis { get; init; }
	[JsonInclude, JsonPropertyName("end_time")]
	public DateTimeOffset? EndTime { get; init; }
	[JsonInclude, JsonPropertyName("end_time_in_millis")]
	public long? EndTimeInMillis { get; init; }
	[JsonInclude, JsonPropertyName("failures")]
	public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Serverless.Snapshot.SnapshotShardFailure>? Failures { get; init; }
	[JsonInclude, JsonPropertyName("feature_states")]
	public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Serverless.Snapshot.InfoFeatureState>? FeatureStates { get; init; }
	[JsonInclude, JsonPropertyName("include_global_state")]
	public bool? IncludeGlobalState { get; init; }
	[JsonInclude, JsonPropertyName("index_details")]
	[ReadOnlyIndexNameDictionaryConverter(typeof(Elastic.Clients.Elasticsearch.Serverless.Snapshot.IndexDetails))]
	public IReadOnlyDictionary<Elastic.Clients.Elasticsearch.Serverless.IndexName, Elastic.Clients.Elasticsearch.Serverless.Snapshot.IndexDetails>? IndexDetails { get; init; }
	[JsonInclude, JsonPropertyName("indices")]
	public IReadOnlyCollection<string>? Indices { get; init; }
	[JsonInclude, JsonPropertyName("metadata")]
	public IReadOnlyDictionary<string, object>? Metadata { get; init; }
	[JsonInclude, JsonPropertyName("reason")]
	public string? Reason { get; init; }
	[JsonInclude, JsonPropertyName("repository")]
	public string? Repository { get; init; }
	[JsonInclude, JsonPropertyName("shards")]
	public Elastic.Clients.Elasticsearch.Serverless.ShardStatistics? Shards { get; init; }
	[JsonInclude, JsonPropertyName("snapshot")]
	public string Snapshot { get; init; }
	[JsonInclude, JsonPropertyName("start_time")]
	public DateTimeOffset? StartTime { get; init; }
	[JsonInclude, JsonPropertyName("start_time_in_millis")]
	public long? StartTimeInMillis { get; init; }
	[JsonInclude, JsonPropertyName("state")]
	public string? State { get; init; }
	[JsonInclude, JsonPropertyName("uuid")]
	public string Uuid { get; init; }
	[JsonInclude, JsonPropertyName("version")]
	public string? Version { get; init; }
	[JsonInclude, JsonPropertyName("version_id")]
	public long? VersionId { get; init; }
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Serverless.Fluent;
using Elastic.Clients.Elasticsearch.Serverless.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Serverless.Security;

public sealed partial class ApplicationPrivilegesCheck
{
	/// <summary>
	/// <para>
	/// The name of the application.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("application")]
	public string Application { get; set; }

	/// <summary>
	/// <para>
	/// A list of the privileges that you want to check for the specified resources. May be either application privilege names, or the names of actions that are granted by those privileges
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("privileges")]
	public ICollection<string> Privileges { get; set; }

	/// <summary>
	/// <para>
	/// A list of resource names against which the privileges should be checked
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("resources")]
	public ICollection<string> Resources { get; set; }
}

public sealed partial class ApplicationPrivilegesCheckDescriptor : SerializableDescriptor<ApplicationPrivilegesCheckDescriptor>
{
	internal ApplicationPrivilegesCheckDescriptor(Action<ApplicationPrivilegesCheckDescriptor> configure) => configure.Invoke(this);

	public ApplicationPrivilegesCheckDescriptor() : base()
	{
	}

	private string ApplicationValue { get; set; }
	private ICollection<string> PrivilegesValue { get; set; }
	private ICollection<string> ResourcesValue { get; set; }

	/// <summary>
	/// <para>
	/// The name of the application.
	/// </para>
	/// </summary>
	public ApplicationPrivilegesCheckDescriptor Application(string application)
	{
		ApplicationValue = application;
		return Self;
	}

	/// <summary>
	/// <para>
	/// A list of the privileges that you want to check for the specified resources. May be either application privilege names, or the names of actions that are granted by those privileges
	/// </para>
	/// </summary>
	public ApplicationPrivilegesCheckDescriptor Privileges(ICollection<string> privileges)
	{
		PrivilegesValue = privileges;
		return Self;
	}

	/// <summary>
	/// <para>
	/// A list of resource names against which the privileges should be checked
	/// </para>
	/// </summary>
	public ApplicationPrivilegesCheckDescriptor Resources(ICollection<string> resources)
	{
		ResourcesValue = resources;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		writer.WritePropertyName("application");
		writer.WriteStringValue(ApplicationValue);
		writer.WritePropertyName("privileges");
		JsonSerializer.Serialize(writer, PrivilegesValue, options);
		writer.WritePropertyName("resources");
		JsonSerializer.Serialize(writer, ResourcesValue, options);
		writer.WriteEndObject();
	}
}
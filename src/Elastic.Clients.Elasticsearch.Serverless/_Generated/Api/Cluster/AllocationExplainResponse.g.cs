// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Serverless.Fluent;
using Elastic.Clients.Elasticsearch.Serverless.Serialization;
using Elastic.Transport.Products.Elasticsearch;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Serverless.Cluster;

public sealed partial class AllocationExplainResponse : ElasticsearchResponse
{
	[JsonInclude, JsonPropertyName("allocate_explanation")]
	public string? AllocateExplanation { get; init; }
	[JsonInclude, JsonPropertyName("allocation_delay")]
	public Elastic.Clients.Elasticsearch.Serverless.Duration? AllocationDelay { get; init; }
	[JsonInclude, JsonPropertyName("allocation_delay_in_millis")]
	public long? AllocationDelayInMillis { get; init; }
	[JsonInclude, JsonPropertyName("can_allocate")]
	public Elastic.Clients.Elasticsearch.Serverless.Cluster.Decision? CanAllocate { get; init; }
	[JsonInclude, JsonPropertyName("can_move_to_other_node")]
	public Elastic.Clients.Elasticsearch.Serverless.Cluster.Decision? CanMoveToOtherNode { get; init; }
	[JsonInclude, JsonPropertyName("can_rebalance_cluster")]
	public Elastic.Clients.Elasticsearch.Serverless.Cluster.Decision? CanRebalanceCluster { get; init; }
	[JsonInclude, JsonPropertyName("can_rebalance_cluster_decisions")]
	public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Serverless.Cluster.AllocationDecision>? CanRebalanceClusterDecisions { get; init; }
	[JsonInclude, JsonPropertyName("can_rebalance_to_other_node")]
	public Elastic.Clients.Elasticsearch.Serverless.Cluster.Decision? CanRebalanceToOtherNode { get; init; }
	[JsonInclude, JsonPropertyName("can_remain_decisions")]
	public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Serverless.Cluster.AllocationDecision>? CanRemainDecisions { get; init; }
	[JsonInclude, JsonPropertyName("can_remain_on_current_node")]
	public Elastic.Clients.Elasticsearch.Serverless.Cluster.Decision? CanRemainOnCurrentNode { get; init; }
	[JsonInclude, JsonPropertyName("cluster_info")]
	public Elastic.Clients.Elasticsearch.Serverless.Cluster.ClusterInfo? ClusterInfo { get; init; }
	[JsonInclude, JsonPropertyName("configured_delay")]
	public Elastic.Clients.Elasticsearch.Serverless.Duration? ConfiguredDelay { get; init; }
	[JsonInclude, JsonPropertyName("configured_delay_in_millis")]
	public long? ConfiguredDelayInMillis { get; init; }
	[JsonInclude, JsonPropertyName("current_node")]
	public Elastic.Clients.Elasticsearch.Serverless.Cluster.CurrentNode? CurrentNode { get; init; }
	[JsonInclude, JsonPropertyName("current_state")]
	public string CurrentState { get; init; }
	[JsonInclude, JsonPropertyName("index")]
	public string Index { get; init; }
	[JsonInclude, JsonPropertyName("move_explanation")]
	public string? MoveExplanation { get; init; }
	[JsonInclude, JsonPropertyName("node_allocation_decisions")]
	public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Serverless.Cluster.NodeAllocationExplanation>? NodeAllocationDecisions { get; init; }
	[JsonInclude, JsonPropertyName("note")]
	public string? Note { get; init; }
	[JsonInclude, JsonPropertyName("primary")]
	public bool Primary { get; init; }
	[JsonInclude, JsonPropertyName("rebalance_explanation")]
	public string? RebalanceExplanation { get; init; }
	[JsonInclude, JsonPropertyName("remaining_delay")]
	public Elastic.Clients.Elasticsearch.Serverless.Duration? RemainingDelay { get; init; }
	[JsonInclude, JsonPropertyName("remaining_delay_in_millis")]
	public long? RemainingDelayInMillis { get; init; }
	[JsonInclude, JsonPropertyName("shard")]
	public int Shard { get; init; }
	[JsonInclude, JsonPropertyName("unassigned_info")]
	public Elastic.Clients.Elasticsearch.Serverless.Cluster.UnassignedInformation? UnassignedInfo { get; init; }
}
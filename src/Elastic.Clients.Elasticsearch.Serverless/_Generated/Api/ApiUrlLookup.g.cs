// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

namespace Elastic.Clients.Elasticsearch.Serverless.Requests;

internal static class ApiUrlLookup
{
	internal static ApiUrls AsyncSearchDelete = new ApiUrls(new[] { "_async_search/{id}" });
	internal static ApiUrls AsyncSearchGet = new ApiUrls(new[] { "_async_search/{id}" });
	internal static ApiUrls AsyncSearchStatus = new ApiUrls(new[] { "_async_search/status/{id}" });
	internal static ApiUrls AsyncSearchSubmit = new ApiUrls(new[] { "_async_search", "{index}/_async_search" });
	internal static ApiUrls ClusterAllocationExplain = new ApiUrls(new[] { "_cluster/allocation/explain" });
	internal static ApiUrls ClusterDeleteComponentTemplate = new ApiUrls(new[] { "_component_template/{name}" });
	internal static ApiUrls ClusterExistsComponentTemplate = new ApiUrls(new[] { "_component_template/{name}" });
	internal static ApiUrls ClusterGetComponentTemplate = new ApiUrls(new[] { "_component_template", "_component_template/{name}" });
	internal static ApiUrls ClusterGetSettings = new ApiUrls(new[] { "_cluster/settings" });
	internal static ApiUrls ClusterHealth = new ApiUrls(new[] { "_cluster/health", "_cluster/health/{index}" });
	internal static ApiUrls ClusterInfo = new ApiUrls(new[] { "_info/{target}" });
	internal static ApiUrls ClusterPendingTasks = new ApiUrls(new[] { "_cluster/pending_tasks" });
	internal static ApiUrls ClusterPutComponentTemplate = new ApiUrls(new[] { "_component_template/{name}" });
	internal static ApiUrls ClusterStats = new ApiUrls(new[] { "_cluster/stats", "_cluster/stats/nodes/{node_id}" });
	internal static ApiUrls EnrichDeletePolicy = new ApiUrls(new[] { "_enrich/policy/{name}" });
	internal static ApiUrls EnrichExecutePolicy = new ApiUrls(new[] { "_enrich/policy/{name}/_execute" });
	internal static ApiUrls EnrichGetPolicy = new ApiUrls(new[] { "_enrich/policy/{name}", "_enrich/policy" });
	internal static ApiUrls EnrichPutPolicy = new ApiUrls(new[] { "_enrich/policy/{name}" });
	internal static ApiUrls EnrichStats = new ApiUrls(new[] { "_enrich/_stats" });
	internal static ApiUrls EqlDelete = new ApiUrls(new[] { "_eql/search/{id}" });
	internal static ApiUrls EqlGet = new ApiUrls(new[] { "_eql/search/{id}" });
	internal static ApiUrls EqlGetStatus = new ApiUrls(new[] { "_eql/search/status/{id}" });
	internal static ApiUrls EqlSearch = new ApiUrls(new[] { "{index}/_eql/search" });
	internal static ApiUrls GraphExplore = new ApiUrls(new[] { "{index}/_graph/explore" });
	internal static ApiUrls IndexManagementAnalyze = new ApiUrls(new[] { "_analyze", "{index}/_analyze" });
	internal static ApiUrls IndexManagementClearCache = new ApiUrls(new[] { "_cache/clear", "{index}/_cache/clear" });
	internal static ApiUrls IndexManagementClose = new ApiUrls(new[] { "{index}/_close" });
	internal static ApiUrls IndexManagementCreate = new ApiUrls(new[] { "{index}" });
	internal static ApiUrls IndexManagementCreateDataStream = new ApiUrls(new[] { "_data_stream/{name}" });
	internal static ApiUrls IndexManagementDataStreamsStats = new ApiUrls(new[] { "_data_stream/_stats", "_data_stream/{name}/_stats" });
	internal static ApiUrls IndexManagementDelete = new ApiUrls(new[] { "{index}" });
	internal static ApiUrls IndexManagementDeleteAlias = new ApiUrls(new[] { "{index}/_alias/{name}", "{index}/_aliases/{name}" });
	internal static ApiUrls IndexManagementDeleteDataLifecycle = new ApiUrls(new[] { "_data_stream/{name}/_lifecycle" });
	internal static ApiUrls IndexManagementDeleteDataStream = new ApiUrls(new[] { "_data_stream/{name}" });
	internal static ApiUrls IndexManagementDeleteIndexTemplate = new ApiUrls(new[] { "_index_template/{name}" });
	internal static ApiUrls IndexManagementExists = new ApiUrls(new[] { "{index}" });
	internal static ApiUrls IndexManagementExistsAlias = new ApiUrls(new[] { "_alias/{name}", "{index}/_alias/{name}" });
	internal static ApiUrls IndexManagementExistsIndexTemplate = new ApiUrls(new[] { "_index_template/{name}" });
	internal static ApiUrls IndexManagementExplainDataLifecycle = new ApiUrls(new[] { "{index}/_lifecycle/explain" });
	internal static ApiUrls IndexManagementFlush = new ApiUrls(new[] { "_flush", "{index}/_flush" });
	internal static ApiUrls IndexManagementForcemerge = new ApiUrls(new[] { "_forcemerge", "{index}/_forcemerge" });
	internal static ApiUrls IndexManagementGet = new ApiUrls(new[] { "{index}" });
	internal static ApiUrls IndexManagementGetAlias = new ApiUrls(new[] { "_alias", "_alias/{name}", "{index}/_alias/{name}", "{index}/_alias" });
	internal static ApiUrls IndexManagementGetDataLifecycle = new ApiUrls(new[] { "_data_stream/{name}/_lifecycle" });
	internal static ApiUrls IndexManagementGetDataStream = new ApiUrls(new[] { "_data_stream", "_data_stream/{name}" });
	internal static ApiUrls IndexManagementGetIndexTemplate = new ApiUrls(new[] { "_index_template", "_index_template/{name}" });
	internal static ApiUrls IndexManagementGetMapping = new ApiUrls(new[] { "_mapping", "{index}/_mapping" });
	internal static ApiUrls IndexManagementGetSettings = new ApiUrls(new[] { "_settings", "{index}/_settings", "{index}/_settings/{name}", "_settings/{name}" });
	internal static ApiUrls IndexManagementMigrateToDataStream = new ApiUrls(new[] { "_data_stream/_migrate/{name}" });
	internal static ApiUrls IndexManagementModifyDataStream = new ApiUrls(new[] { "_data_stream/_modify" });
	internal static ApiUrls IndexManagementOpen = new ApiUrls(new[] { "{index}/_open" });
	internal static ApiUrls IndexManagementPutAlias = new ApiUrls(new[] { "{index}/_alias/{name}", "{index}/_aliases/{name}" });
	internal static ApiUrls IndexManagementPutDataLifecycle = new ApiUrls(new[] { "_data_stream/{name}/_lifecycle" });
	internal static ApiUrls IndexManagementPutIndexTemplate = new ApiUrls(new[] { "_index_template/{name}" });
	internal static ApiUrls IndexManagementPutMapping = new ApiUrls(new[] { "{index}/_mapping" });
	internal static ApiUrls IndexManagementPutSettings = new ApiUrls(new[] { "_settings", "{index}/_settings" });
	internal static ApiUrls IndexManagementPutTemplate = new ApiUrls(new[] { "_template/{name}" });
	internal static ApiUrls IndexManagementRecovery = new ApiUrls(new[] { "_recovery", "{index}/_recovery" });
	internal static ApiUrls IndexManagementRefresh = new ApiUrls(new[] { "_refresh", "{index}/_refresh" });
	internal static ApiUrls IndexManagementResolveIndex = new ApiUrls(new[] { "_resolve/index/{name}" });
	internal static ApiUrls IndexManagementRollover = new ApiUrls(new[] { "{alias}/_rollover", "{alias}/_rollover/{new_index}" });
	internal static ApiUrls IndexManagementSegments = new ApiUrls(new[] { "_segments", "{index}/_segments" });
	internal static ApiUrls IndexManagementSimulateIndexTemplate = new ApiUrls(new[] { "_index_template/_simulate_index/{name}" });
	internal static ApiUrls IndexManagementSimulateTemplate = new ApiUrls(new[] { "_index_template/_simulate", "_index_template/_simulate/{name}" });
	internal static ApiUrls IndexManagementStats = new ApiUrls(new[] { "_stats", "_stats/{metric}", "{index}/_stats", "{index}/_stats/{metric}" });
	internal static ApiUrls IndexManagementUpdateAliases = new ApiUrls(new[] { "_aliases" });
	internal static ApiUrls IndexManagementValidateQuery = new ApiUrls(new[] { "_validate/query", "{index}/_validate/query" });
	internal static ApiUrls IngestDeletePipeline = new ApiUrls(new[] { "_ingest/pipeline/{id}" });
	internal static ApiUrls IngestGeoIpStats = new ApiUrls(new[] { "_ingest/geoip/stats" });
	internal static ApiUrls IngestGetPipeline = new ApiUrls(new[] { "_ingest/pipeline", "_ingest/pipeline/{id}" });
	internal static ApiUrls IngestProcessorGrok = new ApiUrls(new[] { "_ingest/processor/grok" });
	internal static ApiUrls IngestPutPipeline = new ApiUrls(new[] { "_ingest/pipeline/{id}" });
	internal static ApiUrls IngestSimulate = new ApiUrls(new[] { "_ingest/pipeline/_simulate", "_ingest/pipeline/{id}/_simulate" });
	internal static ApiUrls LicenseManagementGet = new ApiUrls(new[] { "_license" });
	internal static ApiUrls MachineLearningClearTrainedModelDeploymentCache = new ApiUrls(new[] { "_ml/trained_models/{model_id}/deployment/cache/_clear" });
	internal static ApiUrls MachineLearningCloseJob = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/_close" });
	internal static ApiUrls MachineLearningDeleteCalendar = new ApiUrls(new[] { "_ml/calendars/{calendar_id}" });
	internal static ApiUrls MachineLearningDeleteCalendarEvent = new ApiUrls(new[] { "_ml/calendars/{calendar_id}/events/{event_id}" });
	internal static ApiUrls MachineLearningDeleteCalendarJob = new ApiUrls(new[] { "_ml/calendars/{calendar_id}/jobs/{job_id}" });
	internal static ApiUrls MachineLearningDeleteDatafeed = new ApiUrls(new[] { "_ml/datafeeds/{datafeed_id}" });
	internal static ApiUrls MachineLearningDeleteDataFrameAnalytics = new ApiUrls(new[] { "_ml/data_frame/analytics/{id}" });
	internal static ApiUrls MachineLearningDeleteExpiredData = new ApiUrls(new[] { "_ml/_delete_expired_data/{job_id}", "_ml/_delete_expired_data" });
	internal static ApiUrls MachineLearningDeleteFilter = new ApiUrls(new[] { "_ml/filters/{filter_id}" });
	internal static ApiUrls MachineLearningDeleteForecast = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/_forecast", "_ml/anomaly_detectors/{job_id}/_forecast/{forecast_id}" });
	internal static ApiUrls MachineLearningDeleteJob = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}" });
	internal static ApiUrls MachineLearningDeleteModelSnapshot = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}" });
	internal static ApiUrls MachineLearningDeleteTrainedModel = new ApiUrls(new[] { "_ml/trained_models/{model_id}" });
	internal static ApiUrls MachineLearningDeleteTrainedModelAlias = new ApiUrls(new[] { "_ml/trained_models/{model_id}/model_aliases/{model_alias}" });
	internal static ApiUrls MachineLearningEstimateModelMemory = new ApiUrls(new[] { "_ml/anomaly_detectors/_estimate_model_memory" });
	internal static ApiUrls MachineLearningEvaluateDataFrame = new ApiUrls(new[] { "_ml/data_frame/_evaluate" });
	internal static ApiUrls MachineLearningExplainDataFrameAnalytics = new ApiUrls(new[] { "_ml/data_frame/analytics/_explain", "_ml/data_frame/analytics/{id}/_explain" });
	internal static ApiUrls MachineLearningFlushJob = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/_flush" });
	internal static ApiUrls MachineLearningForecast = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/_forecast" });
	internal static ApiUrls MachineLearningGetBuckets = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/results/buckets/{timestamp}", "_ml/anomaly_detectors/{job_id}/results/buckets" });
	internal static ApiUrls MachineLearningGetCalendarEvents = new ApiUrls(new[] { "_ml/calendars/{calendar_id}/events" });
	internal static ApiUrls MachineLearningGetCalendars = new ApiUrls(new[] { "_ml/calendars", "_ml/calendars/{calendar_id}" });
	internal static ApiUrls MachineLearningGetCategories = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/results/categories/{category_id}", "_ml/anomaly_detectors/{job_id}/results/categories" });
	internal static ApiUrls MachineLearningGetDatafeeds = new ApiUrls(new[] { "_ml/datafeeds/{datafeed_id}", "_ml/datafeeds" });
	internal static ApiUrls MachineLearningGetDatafeedStats = new ApiUrls(new[] { "_ml/datafeeds/{datafeed_id}/_stats", "_ml/datafeeds/_stats" });
	internal static ApiUrls MachineLearningGetDataFrameAnalytics = new ApiUrls(new[] { "_ml/data_frame/analytics/{id}", "_ml/data_frame/analytics" });
	internal static ApiUrls MachineLearningGetDataFrameAnalyticsStats = new ApiUrls(new[] { "_ml/data_frame/analytics/_stats", "_ml/data_frame/analytics/{id}/_stats" });
	internal static ApiUrls MachineLearningGetFilters = new ApiUrls(new[] { "_ml/filters", "_ml/filters/{filter_id}" });
	internal static ApiUrls MachineLearningGetInfluencers = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/results/influencers" });
	internal static ApiUrls MachineLearningGetJobs = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}", "_ml/anomaly_detectors" });
	internal static ApiUrls MachineLearningGetJobStats = new ApiUrls(new[] { "_ml/anomaly_detectors/_stats", "_ml/anomaly_detectors/{job_id}/_stats" });
	internal static ApiUrls MachineLearningGetMemoryStats = new ApiUrls(new[] { "_ml/memory/_stats", "_ml/memory/{node_id}/_stats" });
	internal static ApiUrls MachineLearningGetModelSnapshots = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}", "_ml/anomaly_detectors/{job_id}/model_snapshots" });
	internal static ApiUrls MachineLearningGetModelSnapshotUpgradeStats = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_upgrade/_stats" });
	internal static ApiUrls MachineLearningGetOverallBuckets = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/results/overall_buckets" });
	internal static ApiUrls MachineLearningGetRecords = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/results/records" });
	internal static ApiUrls MachineLearningGetTrainedModels = new ApiUrls(new[] { "_ml/trained_models/{model_id}", "_ml/trained_models" });
	internal static ApiUrls MachineLearningGetTrainedModelsStats = new ApiUrls(new[] { "_ml/trained_models/{model_id}/_stats", "_ml/trained_models/_stats" });
	internal static ApiUrls MachineLearningInferTrainedModel = new ApiUrls(new[] { "_ml/trained_models/{model_id}/_infer" });
	internal static ApiUrls MachineLearningInfo = new ApiUrls(new[] { "_ml/info" });
	internal static ApiUrls MachineLearningOpenJob = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/_open" });
	internal static ApiUrls MachineLearningPostCalendarEvents = new ApiUrls(new[] { "_ml/calendars/{calendar_id}/events" });
	internal static ApiUrls MachineLearningPreviewDataFrameAnalytics = new ApiUrls(new[] { "_ml/data_frame/analytics/_preview", "_ml/data_frame/analytics/{id}/_preview" });
	internal static ApiUrls MachineLearningPutCalendar = new ApiUrls(new[] { "_ml/calendars/{calendar_id}" });
	internal static ApiUrls MachineLearningPutCalendarJob = new ApiUrls(new[] { "_ml/calendars/{calendar_id}/jobs/{job_id}" });
	internal static ApiUrls MachineLearningPutDatafeed = new ApiUrls(new[] { "_ml/datafeeds/{datafeed_id}" });
	internal static ApiUrls MachineLearningPutDataFrameAnalytics = new ApiUrls(new[] { "_ml/data_frame/analytics/{id}" });
	internal static ApiUrls MachineLearningPutFilter = new ApiUrls(new[] { "_ml/filters/{filter_id}" });
	internal static ApiUrls MachineLearningPutJob = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}" });
	internal static ApiUrls MachineLearningPutTrainedModel = new ApiUrls(new[] { "_ml/trained_models/{model_id}" });
	internal static ApiUrls MachineLearningPutTrainedModelAlias = new ApiUrls(new[] { "_ml/trained_models/{model_id}/model_aliases/{model_alias}" });
	internal static ApiUrls MachineLearningPutTrainedModelDefinitionPart = new ApiUrls(new[] { "_ml/trained_models/{model_id}/definition/{part}" });
	internal static ApiUrls MachineLearningPutTrainedModelVocabulary = new ApiUrls(new[] { "_ml/trained_models/{model_id}/vocabulary" });
	internal static ApiUrls MachineLearningResetJob = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/_reset" });
	internal static ApiUrls MachineLearningRevertModelSnapshot = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_revert" });
	internal static ApiUrls MachineLearningSetUpgradeMode = new ApiUrls(new[] { "_ml/set_upgrade_mode" });
	internal static ApiUrls MachineLearningStartDatafeed = new ApiUrls(new[] { "_ml/datafeeds/{datafeed_id}/_start" });
	internal static ApiUrls MachineLearningStartDataFrameAnalytics = new ApiUrls(new[] { "_ml/data_frame/analytics/{id}/_start" });
	internal static ApiUrls MachineLearningStartTrainedModelDeployment = new ApiUrls(new[] { "_ml/trained_models/{model_id}/deployment/_start" });
	internal static ApiUrls MachineLearningStopDatafeed = new ApiUrls(new[] { "_ml/datafeeds/{datafeed_id}/_stop" });
	internal static ApiUrls MachineLearningStopDataFrameAnalytics = new ApiUrls(new[] { "_ml/data_frame/analytics/{id}/_stop" });
	internal static ApiUrls MachineLearningStopTrainedModelDeployment = new ApiUrls(new[] { "_ml/trained_models/{model_id}/deployment/_stop" });
	internal static ApiUrls MachineLearningUpdateDatafeed = new ApiUrls(new[] { "_ml/datafeeds/{datafeed_id}/_update" });
	internal static ApiUrls MachineLearningUpdateDataFrameAnalytics = new ApiUrls(new[] { "_ml/data_frame/analytics/{id}/_update" });
	internal static ApiUrls MachineLearningUpdateFilter = new ApiUrls(new[] { "_ml/filters/{filter_id}/_update" });
	internal static ApiUrls MachineLearningUpdateJob = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/_update" });
	internal static ApiUrls MachineLearningUpdateModelSnapshot = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_update" });
	internal static ApiUrls MachineLearningUpgradeJobSnapshot = new ApiUrls(new[] { "_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_upgrade" });
	internal static ApiUrls MachineLearningValidate = new ApiUrls(new[] { "_ml/anomaly_detectors/_validate" });
	internal static ApiUrls MachineLearningValidateDetector = new ApiUrls(new[] { "_ml/anomaly_detectors/_validate/detector" });
	internal static ApiUrls NodesHotThreads = new ApiUrls(new[] { "_nodes/hot_threads", "_nodes/{node_id}/hot_threads" });
	internal static ApiUrls NodesInfo = new ApiUrls(new[] { "_nodes", "_nodes/{node_id}", "_nodes/{metric}", "_nodes/{node_id}/{metric}" });
	internal static ApiUrls NodesStats = new ApiUrls(new[] { "_nodes/stats", "_nodes/{node_id}/stats", "_nodes/stats/{metric}", "_nodes/{node_id}/stats/{metric}", "_nodes/stats/{metric}/{index_metric}", "_nodes/{node_id}/stats/{metric}/{index_metric}" });
	internal static ApiUrls NodesUsage = new ApiUrls(new[] { "_nodes/usage", "_nodes/{node_id}/usage", "_nodes/usage/{metric}", "_nodes/{node_id}/usage/{metric}" });
	internal static ApiUrls NoNamespaceBulk = new ApiUrls(new[] { "_bulk", "{index}/_bulk" });
	internal static ApiUrls NoNamespaceClearScroll = new ApiUrls(new[] { "_search/scroll" });
	internal static ApiUrls NoNamespaceClosePointInTime = new ApiUrls(new[] { "_pit" });
	internal static ApiUrls NoNamespaceCount = new ApiUrls(new[] { "_count", "{index}/_count" });
	internal static ApiUrls NoNamespaceCreate = new ApiUrls(new[] { "{index}/_create/{id}" });
	internal static ApiUrls NoNamespaceDelete = new ApiUrls(new[] { "{index}/_doc/{id}" });
	internal static ApiUrls NoNamespaceDeleteByQuery = new ApiUrls(new[] { "{index}/_delete_by_query" });
	internal static ApiUrls NoNamespaceDeleteByQueryRethrottle = new ApiUrls(new[] { "_delete_by_query/{task_id}/_rethrottle" });
	internal static ApiUrls NoNamespaceDeleteScript = new ApiUrls(new[] { "_scripts/{id}" });
	internal static ApiUrls NoNamespaceExists = new ApiUrls(new[] { "{index}/_doc/{id}" });
	internal static ApiUrls NoNamespaceExistsSource = new ApiUrls(new[] { "{index}/_source/{id}" });
	internal static ApiUrls NoNamespaceExplain = new ApiUrls(new[] { "{index}/_explain/{id}" });
	internal static ApiUrls NoNamespaceFieldCaps = new ApiUrls(new[] { "_field_caps", "{index}/_field_caps" });
	internal static ApiUrls NoNamespaceGet = new ApiUrls(new[] { "{index}/_doc/{id}" });
	internal static ApiUrls NoNamespaceGetScript = new ApiUrls(new[] { "_scripts/{id}" });
	internal static ApiUrls NoNamespaceGetSource = new ApiUrls(new[] { "{index}/_source/{id}" });
	internal static ApiUrls NoNamespaceHealthReport = new ApiUrls(new[] { "_health_report", "_health_report/{feature}" });
	internal static ApiUrls NoNamespaceIndex = new ApiUrls(new[] { "{index}/_doc/{id}", "{index}/_doc" });
	internal static ApiUrls NoNamespaceInfo = new ApiUrls(new[] { "" });
	internal static ApiUrls NoNamespaceMtermvectors = new ApiUrls(new[] { "_mtermvectors", "{index}/_mtermvectors" });
	internal static ApiUrls NoNamespaceMultiGet = new ApiUrls(new[] { "_mget", "{index}/_mget" });
	internal static ApiUrls NoNamespaceMultiSearch = new ApiUrls(new[] { "_msearch", "{index}/_msearch" });
	internal static ApiUrls NoNamespaceMultiSearchTemplate = new ApiUrls(new[] { "_msearch/template", "{index}/_msearch/template" });
	internal static ApiUrls NoNamespaceOpenPointInTime = new ApiUrls(new[] { "{index}/_pit" });
	internal static ApiUrls NoNamespacePing = new ApiUrls(new[] { "" });
	internal static ApiUrls NoNamespacePutScript = new ApiUrls(new[] { "_scripts/{id}", "_scripts/{id}/{context}" });
	internal static ApiUrls NoNamespaceRankEval = new ApiUrls(new[] { "_rank_eval", "{index}/_rank_eval" });
	internal static ApiUrls NoNamespaceReindex = new ApiUrls(new[] { "_reindex" });
	internal static ApiUrls NoNamespaceReindexRethrottle = new ApiUrls(new[] { "_reindex/{task_id}/_rethrottle" });
	internal static ApiUrls NoNamespaceRenderSearchTemplate = new ApiUrls(new[] { "_render/template", "_render/template/{id}" });
	internal static ApiUrls NoNamespaceScroll = new ApiUrls(new[] { "_search/scroll" });
	internal static ApiUrls NoNamespaceSearch = new ApiUrls(new[] { "_search", "{index}/_search" });
	internal static ApiUrls NoNamespaceSearchMvt = new ApiUrls(new[] { "{index}/_mvt/{field}/{zoom}/{x}/{y}" });
	internal static ApiUrls NoNamespaceSearchTemplate = new ApiUrls(new[] { "_search/template", "{index}/_search/template" });
	internal static ApiUrls NoNamespaceTermsEnum = new ApiUrls(new[] { "{index}/_terms_enum" });
	internal static ApiUrls NoNamespaceTermvectors = new ApiUrls(new[] { "{index}/_termvectors/{id}", "{index}/_termvectors" });
	internal static ApiUrls NoNamespaceUpdate = new ApiUrls(new[] { "{index}/_update/{id}" });
	internal static ApiUrls NoNamespaceUpdateByQuery = new ApiUrls(new[] { "{index}/_update_by_query" });
	internal static ApiUrls NoNamespaceUpdateByQueryRethrottle = new ApiUrls(new[] { "_update_by_query/{task_id}/_rethrottle" });
	internal static ApiUrls QueryRulesDeleteRule = new ApiUrls(new[] { "_query_rules/{ruleset_id}/_rule/{rule_id}" });
	internal static ApiUrls QueryRulesDeleteRuleset = new ApiUrls(new[] { "_query_rules/{ruleset_id}" });
	internal static ApiUrls QueryRulesGetRule = new ApiUrls(new[] { "_query_rules/{ruleset_id}/_rule/{rule_id}" });
	internal static ApiUrls QueryRulesGetRuleset = new ApiUrls(new[] { "_query_rules/{ruleset_id}" });
	internal static ApiUrls QueryRulesListRulesets = new ApiUrls(new[] { "_query_rules" });
	internal static ApiUrls QueryRulesPutRule = new ApiUrls(new[] { "_query_rules/{ruleset_id}/_rule/{rule_id}" });
	internal static ApiUrls QueryRulesPutRuleset = new ApiUrls(new[] { "_query_rules/{ruleset_id}" });
	internal static ApiUrls SnapshotCleanupRepository = new ApiUrls(new[] { "_snapshot/{repository}/_cleanup" });
	internal static ApiUrls SnapshotClone = new ApiUrls(new[] { "_snapshot/{repository}/{snapshot}/_clone/{target_snapshot}" });
	internal static ApiUrls SnapshotCreate = new ApiUrls(new[] { "_snapshot/{repository}/{snapshot}" });
	internal static ApiUrls SnapshotCreateRepository = new ApiUrls(new[] { "_snapshot/{repository}" });
	internal static ApiUrls SnapshotDelete = new ApiUrls(new[] { "_snapshot/{repository}/{snapshot}" });
	internal static ApiUrls SnapshotDeleteRepository = new ApiUrls(new[] { "_snapshot/{repository}" });
	internal static ApiUrls SnapshotGet = new ApiUrls(new[] { "_snapshot/{repository}/{snapshot}" });
	internal static ApiUrls SnapshotGetRepository = new ApiUrls(new[] { "_snapshot", "_snapshot/{repository}" });
	internal static ApiUrls SnapshotLifecycleManagementDeleteLifecycle = new ApiUrls(new[] { "_slm/policy/{policy_id}" });
	internal static ApiUrls SnapshotLifecycleManagementExecuteLifecycle = new ApiUrls(new[] { "_slm/policy/{policy_id}/_execute" });
	internal static ApiUrls SnapshotLifecycleManagementExecuteRetention = new ApiUrls(new[] { "_slm/_execute_retention" });
	internal static ApiUrls SnapshotLifecycleManagementGetLifecycle = new ApiUrls(new[] { "_slm/policy/{policy_id}", "_slm/policy" });
	internal static ApiUrls SnapshotLifecycleManagementGetStats = new ApiUrls(new[] { "_slm/stats" });
	internal static ApiUrls SnapshotLifecycleManagementGetStatus = new ApiUrls(new[] { "_slm/status" });
	internal static ApiUrls SnapshotLifecycleManagementPutLifecycle = new ApiUrls(new[] { "_slm/policy/{policy_id}" });
	internal static ApiUrls SnapshotLifecycleManagementStart = new ApiUrls(new[] { "_slm/start" });
	internal static ApiUrls SnapshotLifecycleManagementStop = new ApiUrls(new[] { "_slm/stop" });
	internal static ApiUrls SnapshotRestore = new ApiUrls(new[] { "_snapshot/{repository}/{snapshot}/_restore" });
	internal static ApiUrls SnapshotStatus = new ApiUrls(new[] { "_snapshot/_status", "_snapshot/{repository}/_status", "_snapshot/{repository}/{snapshot}/_status" });
	internal static ApiUrls SnapshotVerifyRepository = new ApiUrls(new[] { "_snapshot/{repository}/_verify" });
	internal static ApiUrls SqlClearCursor = new ApiUrls(new[] { "_sql/close" });
	internal static ApiUrls SqlDeleteAsync = new ApiUrls(new[] { "_sql/async/delete/{id}" });
	internal static ApiUrls SqlGetAsync = new ApiUrls(new[] { "_sql/async/{id}" });
	internal static ApiUrls SqlGetAsyncStatus = new ApiUrls(new[] { "_sql/async/status/{id}" });
	internal static ApiUrls SqlQuery = new ApiUrls(new[] { "_sql" });
	internal static ApiUrls SqlTranslate = new ApiUrls(new[] { "_sql/translate" });
	internal static ApiUrls SynonymsDeleteSynonym = new ApiUrls(new[] { "_synonyms/{id}" });
	internal static ApiUrls SynonymsDeleteSynonymRule = new ApiUrls(new[] { "_synonyms/{set_id}/{rule_id}" });
	internal static ApiUrls SynonymsGetSynonym = new ApiUrls(new[] { "_synonyms/{id}" });
	internal static ApiUrls SynonymsGetSynonymRule = new ApiUrls(new[] { "_synonyms/{set_id}/{rule_id}" });
	internal static ApiUrls SynonymsGetSynonymsSets = new ApiUrls(new[] { "_synonyms" });
	internal static ApiUrls SynonymsPutSynonym = new ApiUrls(new[] { "_synonyms/{id}" });
	internal static ApiUrls SynonymsPutSynonymRule = new ApiUrls(new[] { "_synonyms/{set_id}/{rule_id}" });
	internal static ApiUrls TextStructureTestGrokPattern = new ApiUrls(new[] { "_text_structure/test_grok_pattern" });
	internal static ApiUrls TransformManagementDeleteTransform = new ApiUrls(new[] { "_transform/{transform_id}" });
	internal static ApiUrls TransformManagementGetTransform = new ApiUrls(new[] { "_transform/{transform_id}", "_transform" });
	internal static ApiUrls TransformManagementGetTransformStats = new ApiUrls(new[] { "_transform/{transform_id}/_stats" });
	internal static ApiUrls TransformManagementPreviewTransform = new ApiUrls(new[] { "_transform/{transform_id}/_preview", "_transform/_preview" });
	internal static ApiUrls TransformManagementPutTransform = new ApiUrls(new[] { "_transform/{transform_id}" });
	internal static ApiUrls TransformManagementResetTransform = new ApiUrls(new[] { "_transform/{transform_id}/_reset" });
	internal static ApiUrls TransformManagementScheduleNowTransform = new ApiUrls(new[] { "_transform/{transform_id}/_schedule_now" });
	internal static ApiUrls TransformManagementStartTransform = new ApiUrls(new[] { "_transform/{transform_id}/_start" });
	internal static ApiUrls TransformManagementStopTransform = new ApiUrls(new[] { "_transform/{transform_id}/_stop" });
	internal static ApiUrls TransformManagementUpdateTransform = new ApiUrls(new[] { "_transform/{transform_id}/_update" });
	internal static ApiUrls TransformManagementUpgradeTransforms = new ApiUrls(new[] { "_transform/_upgrade" });
	internal static ApiUrls XpackInfo = new ApiUrls(new[] { "_xpack" });
	internal static ApiUrls XpackUsage = new ApiUrls(new[] { "_xpack/usage" });
}
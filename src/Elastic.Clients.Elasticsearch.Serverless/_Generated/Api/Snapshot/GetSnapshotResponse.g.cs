// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Serverless.Fluent;
using Elastic.Clients.Elasticsearch.Serverless.Serialization;
using Elastic.Transport.Products.Elasticsearch;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Serverless.Snapshot;

public sealed partial class GetSnapshotResponse : ElasticsearchResponse
{
	/// <summary>
	/// <para>The number of remaining snapshots that were not returned due to size limits and that can be fetched by additional requests using the next field value.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("remaining")]
	public int Remaining { get; init; }
	[JsonInclude, JsonPropertyName("responses")]
	public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Serverless.Snapshot.SnapshotResponseItem>? Responses { get; init; }
	[JsonInclude, JsonPropertyName("snapshots")]
	public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Serverless.Snapshot.SnapshotInfo>? Snapshots { get; init; }

	/// <summary>
	/// <para>The total number of snapshots that match the request when ignoring size limit or after query parameter.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("total")]
	public int Total { get; init; }
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Core;
using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.MachineLearning;

[JsonConverter(typeof(CategorizationAnalyzerConverter))]
public sealed partial class CategorizationAnalyzer : Union<string, Elastic.Clients.Elasticsearch.MachineLearning.CategorizationAnalyzerDefinition>
{
	public CategorizationAnalyzer(string name) : base(name)
	{
	}

	public CategorizationAnalyzer(Elastic.Clients.Elasticsearch.MachineLearning.CategorizationAnalyzerDefinition definition) : base(definition)
	{
	}

	public static implicit operator CategorizationAnalyzer(string name) => new CategorizationAnalyzer(name);
	public static implicit operator CategorizationAnalyzer(Elastic.Clients.Elasticsearch.MachineLearning.CategorizationAnalyzerDefinition definition) => new CategorizationAnalyzer(definition);
}

internal sealed partial class CategorizationAnalyzerConverter : System.Text.Json.Serialization.JsonConverter<CategorizationAnalyzer>
{
	public override CategorizationAnalyzer Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
	{
		var selector = static (ref System.Text.Json.Utf8JsonReader r, System.Text.Json.JsonSerializerOptions o) => JsonUnionSelector.ByTokenType(ref r, o, Elastic.Clients.Elasticsearch.Serialization.JsonTokenTypes.String, Elastic.Clients.Elasticsearch.Serialization.JsonTokenTypes.StartObject);
		return selector(ref reader, options) switch
		{
			Elastic.Clients.Elasticsearch.UnionTag.T1 => new CategorizationAnalyzer(reader.ReadValue<string>(options, null)),
			Elastic.Clients.Elasticsearch.UnionTag.T2 => new CategorizationAnalyzer(reader.ReadValue<Elastic.Clients.Elasticsearch.MachineLearning.CategorizationAnalyzerDefinition>(options, null)),
			_ => throw new System.InvalidOperationException($"Failed to select a union variant for type '{nameof(CategorizationAnalyzer)}")
		};
	}

	public override void Write(System.Text.Json.Utf8JsonWriter writer, CategorizationAnalyzer value, System.Text.Json.JsonSerializerOptions options)
	{
		switch (value.Tag)
		{
			case Elastic.Clients.Elasticsearch.UnionTag.T1:
				{
					writer.WriteValue(options, value.Value1, null);
					break;
				}

			case Elastic.Clients.Elasticsearch.UnionTag.T2:
				{
					writer.WriteValue(options, value.Value2, null);
					break;
				}

			default:
				throw new System.InvalidOperationException($"Unrecognized tag value: {value.Tag}");
		}
	}
}
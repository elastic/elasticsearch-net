// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.MachineLearning;

public sealed partial class AnomalyCause
{
	[JsonInclude, JsonPropertyName("actual")]
	public IReadOnlyCollection<double> Actual { get; init; }
	[JsonInclude, JsonPropertyName("by_field_name")]
	public string ByFieldName { get; init; }
	[JsonInclude, JsonPropertyName("by_field_value")]
	public string ByFieldValue { get; init; }
	[JsonInclude, JsonPropertyName("correlated_by_field_value")]
	public string CorrelatedByFieldValue { get; init; }
	[JsonInclude, JsonPropertyName("field_name")]
	public string FieldName { get; init; }
	[JsonInclude, JsonPropertyName("function")]
	public string Function { get; init; }
	[JsonInclude, JsonPropertyName("function_description")]
	public string FunctionDescription { get; init; }
	[JsonInclude, JsonPropertyName("influencers")]
	public IReadOnlyCollection<Elastic.Clients.Elasticsearch.MachineLearning.Influence> Influencers { get; init; }
	[JsonInclude, JsonPropertyName("over_field_name")]
	public string OverFieldName { get; init; }
	[JsonInclude, JsonPropertyName("over_field_value")]
	public string OverFieldValue { get; init; }
	[JsonInclude, JsonPropertyName("partition_field_name")]
	public string PartitionFieldName { get; init; }
	[JsonInclude, JsonPropertyName("partition_field_value")]
	public string PartitionFieldValue { get; init; }
	[JsonInclude, JsonPropertyName("probability")]
	public double Probability { get; init; }
	[JsonInclude, JsonPropertyName("typical")]
	public IReadOnlyCollection<double> Typical { get; init; }
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.MachineLearning;

public sealed partial class TrainedModelAssignment
{
	/// <summary>
	/// <para>
	/// The overall assignment state.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("assignment_state")]
	public Elastic.Clients.Elasticsearch.MachineLearning.DeploymentAssignmentState AssignmentState { get; init; }
	[JsonInclude, JsonPropertyName("max_assigned_allocations")]
	public int? MaxAssignedAllocations { get; init; }

	/// <summary>
	/// <para>
	/// The allocation state for each node.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("routing_table")]
	public IReadOnlyDictionary<string, Elastic.Clients.Elasticsearch.MachineLearning.TrainedModelAssignmentRoutingTable> RoutingTable { get; init; }

	/// <summary>
	/// <para>
	/// The timestamp when the deployment started.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("start_time")]
	public DateTimeOffset StartTime { get; init; }
	[JsonInclude, JsonPropertyName("task_parameters")]
	public Elastic.Clients.Elasticsearch.MachineLearning.TrainedModelAssignmentTaskParameters TaskParameters { get; init; }
}
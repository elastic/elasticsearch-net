// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using System;
using System.Linq;
using Elastic.Clients.Elasticsearch.Serialization;

namespace Elastic.Clients.Elasticsearch.MachineLearning;

[System.Text.Json.Serialization.JsonConverter(typeof(Elastic.Clients.Elasticsearch.MachineLearning.Json.ModelSizeStatsConverter))]
public sealed partial class ModelSizeStats
{
	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public ModelSizeStats(long bucketAllocationFailuresCount, Elastic.Clients.Elasticsearch.MachineLearning.CategorizationStatus categorizationStatus, int categorizedDocCount, int deadCategoryCount, int failedCategoryCount, int frequentCategoryCount, string jobId, System.DateTimeOffset logTime, Elastic.Clients.Elasticsearch.MachineLearning.MemoryStatus memoryStatus, Elastic.Clients.Elasticsearch.ByteSize modelBytes, int rareCategoryCount, string resultType, long totalByFieldCount, int totalCategoryCount, long totalOverFieldCount, long totalPartitionFieldCount)
	{
		BucketAllocationFailuresCount = bucketAllocationFailuresCount;
		CategorizationStatus = categorizationStatus;
		CategorizedDocCount = categorizedDocCount;
		DeadCategoryCount = deadCategoryCount;
		FailedCategoryCount = failedCategoryCount;
		FrequentCategoryCount = frequentCategoryCount;
		JobId = jobId;
		LogTime = logTime;
		MemoryStatus = memoryStatus;
		ModelBytes = modelBytes;
		RareCategoryCount = rareCategoryCount;
		ResultType = resultType;
		TotalByFieldCount = totalByFieldCount;
		TotalCategoryCount = totalCategoryCount;
		TotalOverFieldCount = totalOverFieldCount;
		TotalPartitionFieldCount = totalPartitionFieldCount;
	}
#if NET7_0_OR_GREATER
	public ModelSizeStats()
	{
	}
#endif
#if !NET7_0_OR_GREATER
	[System.Obsolete("The type contains required properties that must be initialized. Please use an alternative constructor to ensure all required values are properly set.")]
	public ModelSizeStats()
	{
	}
#endif
	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	internal ModelSizeStats(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel sentinel)
	{
		_ = sentinel;
	}

	public string? AssignmentMemoryBasis { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	long BucketAllocationFailuresCount { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	Elastic.Clients.Elasticsearch.MachineLearning.CategorizationStatus CategorizationStatus { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	int CategorizedDocCount { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	int DeadCategoryCount { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	int FailedCategoryCount { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	int FrequentCategoryCount { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	string JobId { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	System.DateTimeOffset LogTime { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	Elastic.Clients.Elasticsearch.MachineLearning.MemoryStatus MemoryStatus { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	Elastic.Clients.Elasticsearch.ByteSize ModelBytes { get; set; }
	public Elastic.Clients.Elasticsearch.ByteSize? ModelBytesExceeded { get; set; }
	public Elastic.Clients.Elasticsearch.ByteSize? ModelBytesMemoryLimit { get; set; }
	public Elastic.Clients.Elasticsearch.ByteSize? OutputMemoryAllocatorBytes { get; set; }
	public Elastic.Clients.Elasticsearch.ByteSize? PeakModelBytes { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	int RareCategoryCount { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	string ResultType { get; set; }
	public long? Timestamp { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	long TotalByFieldCount { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	int TotalCategoryCount { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	long TotalOverFieldCount { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	long TotalPartitionFieldCount { get; set; }
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.MachineLearning;

public sealed partial class LearningToRankConfig
{
	[JsonInclude, JsonPropertyName("default_params")]
	public IDictionary<string, object>? DefaultParams { get; set; }
	[JsonInclude, JsonPropertyName("feature_extractors")]
	public ICollection<IDictionary<string, Elastic.Clients.Elasticsearch.MachineLearning.QueryFeatureExtractor>>? FeatureExtractors { get; set; }
	[JsonInclude, JsonPropertyName("num_top_feature_importance_values")]
	public int NumTopFeatureImportanceValues { get; set; }

	public static implicit operator Elastic.Clients.Elasticsearch.MachineLearning.InferenceConfigCreate(LearningToRankConfig learningToRankConfig) => Elastic.Clients.Elasticsearch.MachineLearning.InferenceConfigCreate.LearningToRank(learningToRankConfig);
}

public sealed partial class LearningToRankConfigDescriptor<TDocument> : SerializableDescriptor<LearningToRankConfigDescriptor<TDocument>>
{
	internal LearningToRankConfigDescriptor(Action<LearningToRankConfigDescriptor<TDocument>> configure) => configure.Invoke(this);

	public LearningToRankConfigDescriptor() : base()
	{
	}

	private IDictionary<string, object>? DefaultParamsValue { get; set; }
	private ICollection<IDictionary<string, Elastic.Clients.Elasticsearch.MachineLearning.QueryFeatureExtractor>>? FeatureExtractorsValue { get; set; }
	private int NumTopFeatureImportanceValuesValue { get; set; }

	public LearningToRankConfigDescriptor<TDocument> DefaultParams(Func<FluentDictionary<string, object>, FluentDictionary<string, object>> selector)
	{
		DefaultParamsValue = selector?.Invoke(new FluentDictionary<string, object>());
		return Self;
	}

	public LearningToRankConfigDescriptor<TDocument> FeatureExtractors(ICollection<IDictionary<string, Elastic.Clients.Elasticsearch.MachineLearning.QueryFeatureExtractor>>? featureExtractors)
	{
		FeatureExtractorsValue = featureExtractors;
		return Self;
	}

	public LearningToRankConfigDescriptor<TDocument> NumTopFeatureImportanceValues(int numTopFeatureImportanceValues)
	{
		NumTopFeatureImportanceValuesValue = numTopFeatureImportanceValues;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		if (DefaultParamsValue is not null)
		{
			writer.WritePropertyName("default_params");
			JsonSerializer.Serialize(writer, DefaultParamsValue, options);
		}

		if (FeatureExtractorsValue is not null)
		{
			writer.WritePropertyName("feature_extractors");
			JsonSerializer.Serialize(writer, FeatureExtractorsValue, options);
		}

		writer.WritePropertyName("num_top_feature_importance_values");
		writer.WriteNumberValue(NumTopFeatureImportanceValuesValue);
		writer.WriteEndObject();
	}
}

public sealed partial class LearningToRankConfigDescriptor : SerializableDescriptor<LearningToRankConfigDescriptor>
{
	internal LearningToRankConfigDescriptor(Action<LearningToRankConfigDescriptor> configure) => configure.Invoke(this);

	public LearningToRankConfigDescriptor() : base()
	{
	}

	private IDictionary<string, object>? DefaultParamsValue { get; set; }
	private ICollection<IDictionary<string, Elastic.Clients.Elasticsearch.MachineLearning.QueryFeatureExtractor>>? FeatureExtractorsValue { get; set; }
	private int NumTopFeatureImportanceValuesValue { get; set; }

	public LearningToRankConfigDescriptor DefaultParams(Func<FluentDictionary<string, object>, FluentDictionary<string, object>> selector)
	{
		DefaultParamsValue = selector?.Invoke(new FluentDictionary<string, object>());
		return Self;
	}

	public LearningToRankConfigDescriptor FeatureExtractors(ICollection<IDictionary<string, Elastic.Clients.Elasticsearch.MachineLearning.QueryFeatureExtractor>>? featureExtractors)
	{
		FeatureExtractorsValue = featureExtractors;
		return Self;
	}

	public LearningToRankConfigDescriptor NumTopFeatureImportanceValues(int numTopFeatureImportanceValues)
	{
		NumTopFeatureImportanceValuesValue = numTopFeatureImportanceValues;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		if (DefaultParamsValue is not null)
		{
			writer.WritePropertyName("default_params");
			JsonSerializer.Serialize(writer, DefaultParamsValue, options);
		}

		if (FeatureExtractorsValue is not null)
		{
			writer.WritePropertyName("feature_extractors");
			JsonSerializer.Serialize(writer, FeatureExtractorsValue, options);
		}

		writer.WritePropertyName("num_top_feature_importance_values");
		writer.WriteNumberValue(NumTopFeatureImportanceValuesValue);
		writer.WriteEndObject();
	}
}
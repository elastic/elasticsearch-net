// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Snapshot;

public sealed partial class ReadBlobDetails
{
	/// <summary>
	/// <para>
	/// Indicates whether the read operation may have started before the write operation was complete.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("before_write_complete")]
	public bool? BeforeWriteComplete { get; init; }

	/// <summary>
	/// <para>
	/// The length of time spent reading the blob.
	/// If the blob was not found, this detail is omitted.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("elapsed")]
	public Elastic.Clients.Elasticsearch.Duration? Elapsed { get; init; }

	/// <summary>
	/// <para>
	/// The length of time spent reading the blob, in nanoseconds.
	/// If the blob was not found, this detail is omitted.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("elapsed_nanos")]
	public long? ElapsedNanos { get; init; }

	/// <summary>
	/// <para>
	/// The length of time waiting for the first byte of the read operation to be received.
	/// If the blob was not found, this detail is omitted.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("first_byte_time")]
	public Elastic.Clients.Elasticsearch.Duration? FirstByteTime { get; init; }

	/// <summary>
	/// <para>
	/// The length of time waiting for the first byte of the read operation to be received, in nanoseconds.
	/// If the blob was not found, this detail is omitted.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("first_byte_time_nanos")]
	public long FirstByteTimeNanos { get; init; }

	/// <summary>
	/// <para>
	/// Indicates whether the blob was found by the read operation.
	/// If the read was started before the write completed or the write was ended before completion, it might be false.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("found")]
	public bool Found { get; init; }

	/// <summary>
	/// <para>
	/// The node that performed the read operation.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("node")]
	public Elastic.Clients.Elasticsearch.Snapshot.SnapshotNodeInfo Node { get; init; }

	/// <summary>
	/// <para>
	/// The length of time spent waiting due to the <c>max_restore_bytes_per_sec</c> or <c>indices.recovery.max_bytes_per_sec</c> throttles during the read of the blob.
	/// If the blob was not found, this detail is omitted.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("throttled")]
	public Elastic.Clients.Elasticsearch.Duration? Throttled { get; init; }

	/// <summary>
	/// <para>
	/// The length of time spent waiting due to the <c>max_restore_bytes_per_sec</c> or <c>indices.recovery.max_bytes_per_sec</c> throttles during the read of the blob, in nanoseconds.
	/// If the blob was not found, this detail is omitted.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("throttled_nanos")]
	public long? ThrottledNanos { get; init; }
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Security;

/// <summary>
/// <para>
/// The subset of cluster level privileges that can be defined for remote clusters.
/// </para>
/// </summary>
public sealed partial class RemoteClusterPrivileges
{
	/// <summary>
	/// <para>
	/// A list of cluster aliases to which the permissions in this entry apply.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("clusters")]
	public Elastic.Clients.Elasticsearch.Names Clusters { get; set; }

	/// <summary>
	/// <para>
	/// The cluster level privileges that owners of the role have on the remote cluster.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("privileges")]
	public ICollection<Elastic.Clients.Elasticsearch.Security.RemoteClusterPrivilege> Privileges { get; set; }
}

/// <summary>
/// <para>
/// The subset of cluster level privileges that can be defined for remote clusters.
/// </para>
/// </summary>
public sealed partial class RemoteClusterPrivilegesDescriptor : SerializableDescriptor<RemoteClusterPrivilegesDescriptor>
{
	internal RemoteClusterPrivilegesDescriptor(Action<RemoteClusterPrivilegesDescriptor> configure) => configure.Invoke(this);

	public RemoteClusterPrivilegesDescriptor() : base()
	{
	}

	private Elastic.Clients.Elasticsearch.Names ClustersValue { get; set; }
	private ICollection<Elastic.Clients.Elasticsearch.Security.RemoteClusterPrivilege> PrivilegesValue { get; set; }

	/// <summary>
	/// <para>
	/// A list of cluster aliases to which the permissions in this entry apply.
	/// </para>
	/// </summary>
	public RemoteClusterPrivilegesDescriptor Clusters(Elastic.Clients.Elasticsearch.Names clusters)
	{
		ClustersValue = clusters;
		return Self;
	}

	/// <summary>
	/// <para>
	/// The cluster level privileges that owners of the role have on the remote cluster.
	/// </para>
	/// </summary>
	public RemoteClusterPrivilegesDescriptor Privileges(ICollection<Elastic.Clients.Elasticsearch.Security.RemoteClusterPrivilege> privileges)
	{
		PrivilegesValue = privileges;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		writer.WritePropertyName("clusters");
		JsonSerializer.Serialize(writer, ClustersValue, options);
		writer.WritePropertyName("privileges");
		JsonSerializer.Serialize(writer, PrivilegesValue, options);
		writer.WriteEndObject();
	}
}
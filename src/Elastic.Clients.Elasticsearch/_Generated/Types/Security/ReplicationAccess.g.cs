// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Security;

internal sealed partial class ReplicationAccessConverter : System.Text.Json.Serialization.JsonConverter<ReplicationAccess>
{
	private static readonly System.Text.Json.JsonEncodedText PropAllowRestrictedIndices = System.Text.Json.JsonEncodedText.Encode("allow_restricted_indices");
	private static readonly System.Text.Json.JsonEncodedText PropNames = System.Text.Json.JsonEncodedText.Encode("names");

	public override ReplicationAccess Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
	{
		reader.ValidateToken(System.Text.Json.JsonTokenType.StartObject);
		LocalJsonValue<bool?> propAllowRestrictedIndices = default;
		LocalJsonValue<ICollection<Elastic.Clients.Elasticsearch.IndexName>> propNames = default;
		while (reader.Read() && reader.TokenType is System.Text.Json.JsonTokenType.PropertyName)
		{
			if (propAllowRestrictedIndices.TryReadProperty(ref reader, options, PropAllowRestrictedIndices, null))
			{
				continue;
			}

			if (propNames.TryReadProperty(ref reader, options, PropNames, static ICollection<Elastic.Clients.Elasticsearch.IndexName> (ref System.Text.Json.Utf8JsonReader r, System.Text.Json.JsonSerializerOptions o) => r.ReadSingleOrManyCollectionValue<Elastic.Clients.Elasticsearch.IndexName>(o, null)!))
			{
				continue;
			}

			throw new System.Text.Json.JsonException($"Unknown JSON property '{reader.GetString()}' for type '{typeToConvert.Name}'.");
		}

		reader.ValidateToken(System.Text.Json.JsonTokenType.EndObject);
		return new ReplicationAccess
		{
			AllowRestrictedIndices = propAllowRestrictedIndices.Value
,
			Names = propNames.Value
		};
	}

	public override void Write(System.Text.Json.Utf8JsonWriter writer, ReplicationAccess value, System.Text.Json.JsonSerializerOptions options)
	{
		writer.WriteStartObject();
		writer.WriteProperty(options, PropAllowRestrictedIndices, value.AllowRestrictedIndices, null, null);
		writer.WriteProperty(options, PropNames, value.Names, null, static (System.Text.Json.Utf8JsonWriter w, System.Text.Json.JsonSerializerOptions o, ICollection<Elastic.Clients.Elasticsearch.IndexName> v) => w.WriteSingleOrManyCollectionValue<Elastic.Clients.Elasticsearch.IndexName>(o, v, null));
		writer.WriteEndObject();
	}
}

[JsonConverter(typeof(ReplicationAccessConverter))]
public sealed partial class ReplicationAccess
{
	/// <summary>
	/// <para>
	/// This needs to be set to true if the patterns in the names field should cover system indices.
	/// </para>
	/// </summary>
	public bool? AllowRestrictedIndices { get; set; }

	/// <summary>
	/// <para>
	/// A list of indices (or index name patterns) to which the permissions in this entry apply.
	/// </para>
	/// </summary>
	public ICollection<Elastic.Clients.Elasticsearch.IndexName> Names { get; set; }
}

public sealed partial class ReplicationAccessDescriptor : SerializableDescriptor<ReplicationAccessDescriptor>
{
	internal ReplicationAccessDescriptor(Action<ReplicationAccessDescriptor> configure) => configure.Invoke(this);

	public ReplicationAccessDescriptor() : base()
	{
	}

	private bool? AllowRestrictedIndicesValue { get; set; }
	private ICollection<Elastic.Clients.Elasticsearch.IndexName> NamesValue { get; set; }

	/// <summary>
	/// <para>
	/// This needs to be set to true if the patterns in the names field should cover system indices.
	/// </para>
	/// </summary>
	public ReplicationAccessDescriptor AllowRestrictedIndices(bool? allowRestrictedIndices = true)
	{
		AllowRestrictedIndicesValue = allowRestrictedIndices;
		return Self;
	}

	/// <summary>
	/// <para>
	/// A list of indices (or index name patterns) to which the permissions in this entry apply.
	/// </para>
	/// </summary>
	public ReplicationAccessDescriptor Names(ICollection<Elastic.Clients.Elasticsearch.IndexName> names)
	{
		NamesValue = names;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		if (AllowRestrictedIndicesValue.HasValue)
		{
			writer.WritePropertyName("allow_restricted_indices");
			writer.WriteBooleanValue(AllowRestrictedIndicesValue.Value);
		}

		writer.WritePropertyName("names");
		SingleOrManySerializationHelper.Serialize<Elastic.Clients.Elasticsearch.IndexName>(NamesValue, writer, options);
		writer.WriteEndObject();
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.TransformManagement;

internal sealed partial class LatestConverter : System.Text.Json.Serialization.JsonConverter<Latest>
{
	private static readonly System.Text.Json.JsonEncodedText PropSort = System.Text.Json.JsonEncodedText.Encode("sort");
	private static readonly System.Text.Json.JsonEncodedText PropUniqueKey = System.Text.Json.JsonEncodedText.Encode("unique_key");

	public override Latest Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
	{
		reader.ValidateToken(System.Text.Json.JsonTokenType.StartObject);
		LocalJsonValue<Elastic.Clients.Elasticsearch.Field> propSort = default;
		LocalJsonValue<Elastic.Clients.Elasticsearch.Fields> propUniqueKey = default;
		while (reader.Read() && reader.TokenType is System.Text.Json.JsonTokenType.PropertyName)
		{
			if (propSort.TryRead(ref reader, options, PropSort))
			{
				continue;
			}

			if (propUniqueKey.TryRead(ref reader, options, PropUniqueKey, typeof(FieldsMarker)))
			{
				continue;
			}

			throw new System.Text.Json.JsonException($"Unknown JSON property '{reader.GetString()}' for type '{typeToConvert.Name}'.");
		}

		reader.ValidateToken(System.Text.Json.JsonTokenType.EndObject);
		return new Latest
		{
			Sort = propSort.Value
,
			UniqueKey = propUniqueKey.Value
		};
	}

	public override void Write(System.Text.Json.Utf8JsonWriter writer, Latest value, System.Text.Json.JsonSerializerOptions options)
	{
		writer.WriteStartObject();
		writer.WriteProperty(options, PropSort, value.Sort);
		writer.WriteProperty(options, PropUniqueKey, value.UniqueKey, null, typeof(FieldsMarker));
		writer.WriteEndObject();
	}
}

[JsonConverter(typeof(LatestConverter))]
public sealed partial class Latest
{
	/// <summary>
	/// <para>
	/// Specifies the date field that is used to identify the latest documents.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Field Sort { get; set; }

	/// <summary>
	/// <para>
	/// Specifies an array of one or more fields that are used to group the data.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Fields UniqueKey { get; set; }
}

public sealed partial class LatestDescriptor<TDocument> : SerializableDescriptor<LatestDescriptor<TDocument>>
{
	internal LatestDescriptor(Action<LatestDescriptor<TDocument>> configure) => configure.Invoke(this);

	public LatestDescriptor() : base()
	{
	}

	private Elastic.Clients.Elasticsearch.Field SortValue { get; set; }
	private Elastic.Clients.Elasticsearch.Fields UniqueKeyValue { get; set; }

	/// <summary>
	/// <para>
	/// Specifies the date field that is used to identify the latest documents.
	/// </para>
	/// </summary>
	public LatestDescriptor<TDocument> Sort(Elastic.Clients.Elasticsearch.Field sort)
	{
		SortValue = sort;
		return Self;
	}

	/// <summary>
	/// <para>
	/// Specifies the date field that is used to identify the latest documents.
	/// </para>
	/// </summary>
	public LatestDescriptor<TDocument> Sort<TValue>(Expression<Func<TDocument, TValue>> sort)
	{
		SortValue = sort;
		return Self;
	}

	/// <summary>
	/// <para>
	/// Specifies the date field that is used to identify the latest documents.
	/// </para>
	/// </summary>
	public LatestDescriptor<TDocument> Sort(Expression<Func<TDocument, object>> sort)
	{
		SortValue = sort;
		return Self;
	}

	/// <summary>
	/// <para>
	/// Specifies an array of one or more fields that are used to group the data.
	/// </para>
	/// </summary>
	public LatestDescriptor<TDocument> UniqueKey(Elastic.Clients.Elasticsearch.Fields uniqueKey)
	{
		UniqueKeyValue = uniqueKey;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		writer.WritePropertyName("sort");
		JsonSerializer.Serialize(writer, SortValue, options);
		writer.WritePropertyName("unique_key");
		JsonSerializer.Serialize(writer, UniqueKeyValue, options);
		writer.WriteEndObject();
	}
}

public sealed partial class LatestDescriptor : SerializableDescriptor<LatestDescriptor>
{
	internal LatestDescriptor(Action<LatestDescriptor> configure) => configure.Invoke(this);

	public LatestDescriptor() : base()
	{
	}

	private Elastic.Clients.Elasticsearch.Field SortValue { get; set; }
	private Elastic.Clients.Elasticsearch.Fields UniqueKeyValue { get; set; }

	/// <summary>
	/// <para>
	/// Specifies the date field that is used to identify the latest documents.
	/// </para>
	/// </summary>
	public LatestDescriptor Sort(Elastic.Clients.Elasticsearch.Field sort)
	{
		SortValue = sort;
		return Self;
	}

	/// <summary>
	/// <para>
	/// Specifies the date field that is used to identify the latest documents.
	/// </para>
	/// </summary>
	public LatestDescriptor Sort<TDocument, TValue>(Expression<Func<TDocument, TValue>> sort)
	{
		SortValue = sort;
		return Self;
	}

	/// <summary>
	/// <para>
	/// Specifies the date field that is used to identify the latest documents.
	/// </para>
	/// </summary>
	public LatestDescriptor Sort<TDocument>(Expression<Func<TDocument, object>> sort)
	{
		SortValue = sort;
		return Self;
	}

	/// <summary>
	/// <para>
	/// Specifies an array of one or more fields that are used to group the data.
	/// </para>
	/// </summary>
	public LatestDescriptor UniqueKey(Elastic.Clients.Elasticsearch.Fields uniqueKey)
	{
		UniqueKeyValue = uniqueKey;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		writer.WritePropertyName("sort");
		JsonSerializer.Serialize(writer, SortValue, options);
		writer.WritePropertyName("unique_key");
		JsonSerializer.Serialize(writer, UniqueKeyValue, options);
		writer.WriteEndObject();
	}
}
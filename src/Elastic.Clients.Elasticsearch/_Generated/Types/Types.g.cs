// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch
{
	public abstract partial class AcknowledgedResponseBase : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("acknowledged")]
		public bool Acknowledged { get; init; }
	}

	public partial class AggregationBreakdown
	{
		[JsonInclude]
		[JsonPropertyName("build_aggregation")]
		public long BuildAggregation { get; init; }

		[JsonInclude]
		[JsonPropertyName("build_aggregation_count")]
		public long BuildAggregationCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("build_leaf_collector")]
		public long BuildLeafCollector { get; init; }

		[JsonInclude]
		[JsonPropertyName("build_leaf_collector_count")]
		public long BuildLeafCollectorCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("collect")]
		public long Collect { get; init; }

		[JsonInclude]
		[JsonPropertyName("collect_count")]
		public long CollectCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("initialize")]
		public long Initialize { get; init; }

		[JsonInclude]
		[JsonPropertyName("initialize_count")]
		public long InitializeCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("post_collection")]
		public long? PostCollection { get; init; }

		[JsonInclude]
		[JsonPropertyName("post_collection_count")]
		public long? PostCollectionCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("reduce")]
		public long Reduce { get; init; }

		[JsonInclude]
		[JsonPropertyName("reduce_count")]
		public long ReduceCount { get; init; }
	}

	public partial class AggregationProfile
	{
		[JsonInclude]
		[JsonPropertyName("breakdown")]
		public Elastic.Clients.Elasticsearch.AggregationBreakdown Breakdown { get; init; }

		[JsonInclude]
		[JsonPropertyName("description")]
		public string Description { get; init; }

		[JsonInclude]
		[JsonPropertyName("time_in_nanos")]
		public long TimeInNanos { get; init; }

		[JsonInclude]
		[JsonPropertyName("type")]
		public string Type { get; init; }

		[JsonInclude]
		[JsonPropertyName("debug")]
		public Elastic.Clients.Elasticsearch.AggregationProfileDebug? Debug { get; init; }

		[JsonInclude]
		[JsonPropertyName("children")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.AggregationProfile>? Children { get; init; }
	}

	public partial class AggregationProfileDebug
	{
		[JsonInclude]
		[JsonPropertyName("segments_with_multi_valued_ords")]
		public int? SegmentsWithMultiValuedOrds { get; init; }

		[JsonInclude]
		[JsonPropertyName("collection_strategy")]
		public string? CollectionStrategy { get; init; }

		[JsonInclude]
		[JsonPropertyName("segments_with_single_valued_ords")]
		public int? SegmentsWithSingleValuedOrds { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_buckets")]
		public int? TotalBuckets { get; init; }

		[JsonInclude]
		[JsonPropertyName("built_buckets")]
		public int? BuiltBuckets { get; init; }

		[JsonInclude]
		[JsonPropertyName("result_strategy")]
		public string? ResultStrategy { get; init; }

		[JsonInclude]
		[JsonPropertyName("has_filter")]
		public bool? HasFilter { get; init; }

		[JsonInclude]
		[JsonPropertyName("delegate")]
		public string? Delegate { get; init; }

		[JsonInclude]
		[JsonPropertyName("delegate_debug")]
		public Elastic.Clients.Elasticsearch.AggregationProfileDelegateDebug? DelegateDebug { get; init; }

		[JsonInclude]
		[JsonPropertyName("chars_fetched")]
		public int? CharsFetched { get; init; }

		[JsonInclude]
		[JsonPropertyName("extract_count")]
		public int? ExtractCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("extract_ns")]
		public int? ExtractNs { get; init; }

		[JsonInclude]
		[JsonPropertyName("values_fetched")]
		public int? ValuesFetched { get; init; }

		[JsonInclude]
		[JsonPropertyName("collect_analyzed_ns")]
		public int? CollectAnalyzedNs { get; init; }

		[JsonInclude]
		[JsonPropertyName("collect_analyzed_count")]
		public int? CollectAnalyzedCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("surviving_buckets")]
		public int? SurvivingBuckets { get; init; }

		[JsonInclude]
		[JsonPropertyName("ordinals_collectors_used")]
		public int? OrdinalsCollectorsUsed { get; init; }

		[JsonInclude]
		[JsonPropertyName("ordinals_collectors_overhead_too_high")]
		public int? OrdinalsCollectorsOverheadTooHigh { get; init; }

		[JsonInclude]
		[JsonPropertyName("string_hashing_collectors_used")]
		public int? StringHashingCollectorsUsed { get; init; }

		[JsonInclude]
		[JsonPropertyName("numeric_collectors_used")]
		public int? NumericCollectorsUsed { get; init; }

		[JsonInclude]
		[JsonPropertyName("empty_collectors_used")]
		public int? EmptyCollectorsUsed { get; init; }

		[JsonInclude]
		[JsonPropertyName("deferred_aggregators")]
		public IReadOnlyCollection<string>? DeferredAggregators { get; init; }
	}

	public partial class AggregationProfileDelegateDebug
	{
		[JsonInclude]
		[JsonPropertyName("segments_with_doc_count_field")]
		public int? SegmentsWithDocCountField { get; init; }

		[JsonInclude]
		[JsonPropertyName("segments_with_deleted_docs")]
		public int? SegmentsWithDeletedDocs { get; init; }

		[JsonInclude]
		[JsonPropertyName("filters")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.AggregationProfileDelegateDebugFilter>? Filters { get; init; }

		[JsonInclude]
		[JsonPropertyName("segments_counted")]
		public int? SegmentsCounted { get; init; }

		[JsonInclude]
		[JsonPropertyName("segments_collected")]
		public int? SegmentsCollected { get; init; }
	}

	public partial class AggregationProfileDelegateDebugFilter
	{
		[JsonInclude]
		[JsonPropertyName("results_from_metadata")]
		public int? ResultsFromMetadata { get; init; }

		[JsonInclude]
		[JsonPropertyName("query")]
		public string? Query { get; init; }

		[JsonInclude]
		[JsonPropertyName("specialized_for")]
		public string? SpecializedFor { get; init; }
	}

	public partial class BulkStats
	{
		[JsonInclude]
		[JsonPropertyName("total_operations")]
		public long TotalOperations { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time")]
		public string? TotalTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time_in_millis")]
		public long TotalTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_size")]
		public Elastic.Clients.Elasticsearch.ByteSize? TotalSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_size_in_bytes")]
		public long TotalSizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("avg_time")]
		public string? AvgTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("avg_time_in_millis")]
		public long AvgTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("avg_size")]
		public Elastic.Clients.Elasticsearch.ByteSize? AvgSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("avg_size_in_bytes")]
		public long AvgSizeInBytes { get; init; }
	}

	public partial class ClusterStatistics
	{
		[JsonInclude]
		[JsonPropertyName("skipped")]
		public int Skipped { get; init; }

		[JsonInclude]
		[JsonPropertyName("successful")]
		public int Successful { get; init; }

		[JsonInclude]
		[JsonPropertyName("total")]
		public int Total { get; init; }
	}

	public partial class Collector
	{
		[JsonInclude]
		[JsonPropertyName("name")]
		public string Name { get; init; }

		[JsonInclude]
		[JsonPropertyName("reason")]
		public string Reason { get; init; }

		[JsonInclude]
		[JsonPropertyName("time_in_nanos")]
		public long TimeInNanos { get; init; }

		[JsonInclude]
		[JsonPropertyName("children")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Collector>? Children { get; init; }
	}

	public partial class CompletionStats
	{
		[JsonInclude]
		[JsonPropertyName("size_in_bytes")]
		public long SizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public Elastic.Clients.Elasticsearch.ByteSize? Size { get; init; }

		[JsonInclude]
		[JsonPropertyName("fields")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.FieldSizeUsage>? Fields { get; init; }
	}

	public partial class CompletionSuggester : SuggesterBase, ISuggestContainerVariant
	{
		[JsonIgnore]
		string ISuggestContainerVariant.SuggestContainerVariantName => "completion";
		[JsonInclude]
		[JsonPropertyName("contexts")]
		public Dictionary<string, object>? Contexts { get; set; }

		[JsonInclude]
		[JsonPropertyName("fuzzy")]
		public Elastic.Clients.Elasticsearch.SuggestFuzziness? Fuzzy { get; set; }

		[JsonInclude]
		[JsonPropertyName("prefix")]
		public string? Prefix { get; set; }

		[JsonInclude]
		[JsonPropertyName("regex")]
		public string? Regex { get; set; }

		[JsonInclude]
		[JsonPropertyName("skip_duplicates")]
		public bool? SkipDuplicates { get; set; }
	}

	public partial class CompletionSuggestOption<TDocument>
	{
		[JsonInclude]
		[JsonPropertyName("collate_match")]
		public bool? CollateMatch { get; init; }

		[JsonInclude]
		[JsonPropertyName("contexts")]
		public Dictionary<string, IReadOnlyCollection<Elastic.Clients.Elasticsearch.Context>>? Contexts { get; init; }

		[JsonInclude]
		[JsonPropertyName("fields")]
		public Dictionary<string, object>? Fields { get; init; }

		[JsonInclude]
		[JsonPropertyName("_id")]
		public string Id { get; init; }

		[JsonInclude]
		[JsonPropertyName("_index")]
		public Elastic.Clients.Elasticsearch.IndexName Index { get; init; }

		[JsonInclude]
		[JsonPropertyName("_type")]
		public string? Type { get; init; }

		[JsonInclude]
		[JsonPropertyName("_routing")]
		public string? Routing { get; init; }

		[JsonInclude]
		[JsonPropertyName("_score")]
		public double Score { get; init; }

		[JsonInclude]
		[JsonPropertyName("_source")]
		public TDocument Source { get; init; }

		[JsonInclude]
		[JsonPropertyName("text")]
		public string Text { get; init; }
	}

	public partial class DateField
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonInclude]
		[JsonPropertyName("include_unmapped")]
		public bool? IncludeUnmapped { get; set; }
	}

	[JsonConverter(typeof(DateFieldDescriptorConverter))]
	public sealed partial class DateFieldDescriptor : DescriptorBase<DateFieldDescriptor>
	{
		internal string _field;
		internal string? _format;
		internal bool? _includeUnmapped;
	}

	internal sealed class DateFieldDescriptorConverter : JsonConverter<DateFieldDescriptor>
	{
		public override DateFieldDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, DateFieldDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("field");
			JsonSerializer.Serialize(writer, value._field, options);
			if (!string.IsNullOrEmpty(value._format))
			{
				writer.WritePropertyName("format");
				writer.WriteStringValue(value._format);
			}

			if (value._includeUnmapped.HasValue)
			{
				writer.WritePropertyName("include_unmapped");
				writer.WriteBooleanValue(value._includeUnmapped.Value);
			}

			writer.WriteEndObject();
		}
	}

	public abstract partial class DictionaryResponseBase<TKey, TValue> : ResponseBase
	{
	}

	public partial class DirectGenerator
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_edits")]
		public int? MaxEdits { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_inspections")]
		public float? MaxInspections { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_term_freq")]
		public float? MaxTermFreq { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_doc_freq")]
		public float? MinDocFreq { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_word_length")]
		public int? MinWordLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("post_filter")]
		public string? PostFilter { get; set; }

		[JsonInclude]
		[JsonPropertyName("pre_filter")]
		public string? PreFilter { get; set; }

		[JsonInclude]
		[JsonPropertyName("prefix_length")]
		public int? PrefixLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonInclude]
		[JsonPropertyName("suggest_mode")]
		public Elastic.Clients.Elasticsearch.SuggestMode? SuggestMode { get; set; }
	}

	[JsonConverter(typeof(DirectGeneratorDescriptorConverter))]
	public sealed partial class DirectGeneratorDescriptor : DescriptorBase<DirectGeneratorDescriptor>
	{
		internal string _field;
		internal int? _maxEdits;
		internal float? _maxInspections;
		internal float? _maxTermFreq;
		internal float? _minDocFreq;
		internal int? _minWordLength;
		internal string? _postFilter;
		internal string? _preFilter;
		internal int? _prefixLength;
		internal int? _size;
		internal Elastic.Clients.Elasticsearch.SuggestMode? _suggestMode;
	}

	internal sealed class DirectGeneratorDescriptorConverter : JsonConverter<DirectGeneratorDescriptor>
	{
		public override DirectGeneratorDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, DirectGeneratorDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("field");
			JsonSerializer.Serialize(writer, value._field, options);
			if (value._maxEdits.HasValue)
			{
				writer.WritePropertyName("max_edits");
				writer.WriteNumberValue(value._maxEdits.Value);
			}

			if (value._maxInspections.HasValue)
			{
				writer.WritePropertyName("max_inspections");
				writer.WriteNumberValue(value._maxInspections.Value);
			}

			if (value._maxTermFreq.HasValue)
			{
				writer.WritePropertyName("max_term_freq");
				writer.WriteNumberValue(value._maxTermFreq.Value);
			}

			if (value._minDocFreq.HasValue)
			{
				writer.WritePropertyName("min_doc_freq");
				writer.WriteNumberValue(value._minDocFreq.Value);
			}

			if (value._minWordLength.HasValue)
			{
				writer.WritePropertyName("min_word_length");
				writer.WriteNumberValue(value._minWordLength.Value);
			}

			if (!string.IsNullOrEmpty(value._postFilter))
			{
				writer.WritePropertyName("post_filter");
				writer.WriteStringValue(value._postFilter);
			}

			if (!string.IsNullOrEmpty(value._preFilter))
			{
				writer.WritePropertyName("pre_filter");
				writer.WriteStringValue(value._preFilter);
			}

			if (value._prefixLength.HasValue)
			{
				writer.WritePropertyName("prefix_length");
				writer.WriteNumberValue(value._prefixLength.Value);
			}

			if (value._size.HasValue)
			{
				writer.WritePropertyName("size");
				writer.WriteNumberValue(value._size.Value);
			}

			if (value._suggestMode is not null)
			{
				writer.WritePropertyName("suggest_mode");
				JsonSerializer.Serialize(writer, value._suggestMode, options);
			}

			writer.WriteEndObject();
		}
	}

	public partial class DocStats
	{
		[JsonInclude]
		[JsonPropertyName("count")]
		public long Count { get; init; }

		[JsonInclude]
		[JsonPropertyName("deleted")]
		public long Deleted { get; init; }
	}

	public partial class ErrorCause
	{
		[JsonInclude]
		[JsonPropertyName("type")]
		public string Type { get; init; }

		[JsonInclude]
		[JsonPropertyName("reason")]
		public string Reason { get; init; }

		[JsonInclude]
		[JsonPropertyName("stack_trace")]
		public string? StackTrace { get; init; }

		[JsonInclude]
		[JsonPropertyName("caused_by")]
		public Elastic.Clients.Elasticsearch.ErrorCause? CausedBy { get; init; }

		[JsonInclude]
		[JsonPropertyName("root_cause")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.ErrorCause>? RootCause { get; init; }

		[JsonInclude]
		[JsonPropertyName("suppressed")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.ErrorCause>? Suppressed { get; init; }
	}

	public partial class Explanation
	{
		[JsonInclude]
		[JsonPropertyName("description")]
		public string Description { get; init; }

		[JsonInclude]
		[JsonPropertyName("details")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.ExplanationDetail> Details { get; init; }

		[JsonInclude]
		[JsonPropertyName("value")]
		public float Value { get; init; }
	}

	public partial class ExplanationDetail
	{
		[JsonInclude]
		[JsonPropertyName("description")]
		public string Description { get; init; }

		[JsonInclude]
		[JsonPropertyName("details")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.ExplanationDetail>? Details { get; init; }

		[JsonInclude]
		[JsonPropertyName("value")]
		public float Value { get; init; }
	}

	public partial class FetchProfile
	{
		[JsonInclude]
		[JsonPropertyName("type")]
		public string Type { get; init; }

		[JsonInclude]
		[JsonPropertyName("description")]
		public string Description { get; init; }

		[JsonInclude]
		[JsonPropertyName("time_in_nanos")]
		public long TimeInNanos { get; init; }

		[JsonInclude]
		[JsonPropertyName("breakdown")]
		public Elastic.Clients.Elasticsearch.FetchProfileBreakdown Breakdown { get; init; }

		[JsonInclude]
		[JsonPropertyName("debug")]
		public Elastic.Clients.Elasticsearch.FetchProfileDebug? Debug { get; init; }

		[JsonInclude]
		[JsonPropertyName("children")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.FetchProfile>? Children { get; init; }
	}

	public partial class FetchProfileBreakdown
	{
		[JsonInclude]
		[JsonPropertyName("load_stored_fields")]
		public int? LoadStoredFields { get; init; }

		[JsonInclude]
		[JsonPropertyName("load_stored_fields_count")]
		public int? LoadStoredFieldsCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("next_reader")]
		public int? NextReader { get; init; }

		[JsonInclude]
		[JsonPropertyName("next_reader_count")]
		public int? NextReaderCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("process_count")]
		public int? ProcessCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("process")]
		public int? Process { get; init; }
	}

	public partial class FetchProfileDebug
	{
		[JsonInclude]
		[JsonPropertyName("stored_fields")]
		public IReadOnlyCollection<string>? StoredFields { get; init; }

		[JsonInclude]
		[JsonPropertyName("fast_path")]
		public int? FastPath { get; init; }
	}

	public partial class FieldAndFormat
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonInclude]
		[JsonPropertyName("include_unmapped")]
		public bool? IncludeUnmapped { get; set; }
	}

	[JsonConverter(typeof(FieldAndFormatDescriptorConverter))]
	public sealed partial class FieldAndFormatDescriptor : DescriptorBase<FieldAndFormatDescriptor>
	{
		internal string _field;
		internal string? _format;
		internal bool? _includeUnmapped;
	}

	internal sealed class FieldAndFormatDescriptorConverter : JsonConverter<FieldAndFormatDescriptor>
	{
		public override FieldAndFormatDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, FieldAndFormatDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("field");
			JsonSerializer.Serialize(writer, value._field, options);
			if (!string.IsNullOrEmpty(value._format))
			{
				writer.WritePropertyName("format");
				writer.WriteStringValue(value._format);
			}

			if (value._includeUnmapped.HasValue)
			{
				writer.WritePropertyName("include_unmapped");
				writer.WriteBooleanValue(value._includeUnmapped.Value);
			}

			writer.WriteEndObject();
		}
	}

	public partial class FieldCollapse
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("inner_hits")]
		public IEnumerable<Elastic.Clients.Elasticsearch.InnerHits>? InnerHits { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_concurrent_group_searches")]
		public int? MaxConcurrentGroupSearches { get; set; }
	}

	[JsonConverter(typeof(FieldCollapseDescriptorConverter))]
	public sealed partial class FieldCollapseDescriptor : DescriptorBase<FieldCollapseDescriptor>
	{
		internal string _field;
		internal IEnumerable<Elastic.Clients.Elasticsearch.InnerHits>? _innerHits;
		internal int? _maxConcurrentGroupSearches;
	}

	internal sealed class FieldCollapseDescriptorConverter : JsonConverter<FieldCollapseDescriptor>
	{
		public override FieldCollapseDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, FieldCollapseDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("field");
			JsonSerializer.Serialize(writer, value._field, options);
			if (value._innerHits is not null)
			{
				writer.WritePropertyName("inner_hits");
				JsonSerializer.Serialize(writer, value._innerHits, options);
			}

			if (value._maxConcurrentGroupSearches.HasValue)
			{
				writer.WritePropertyName("max_concurrent_group_searches");
				writer.WriteNumberValue(value._maxConcurrentGroupSearches.Value);
			}

			writer.WriteEndObject();
		}
	}

	public partial class FielddataStats
	{
		[JsonInclude]
		[JsonPropertyName("evictions")]
		public long? Evictions { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_size")]
		public Elastic.Clients.Elasticsearch.ByteSize? MemorySize { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_size_in_bytes")]
		public long MemorySizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("fields")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.FieldMemoryUsage>? Fields { get; init; }
	}

	public partial class FieldMemoryUsage
	{
		[JsonInclude]
		[JsonPropertyName("memory_size")]
		public Elastic.Clients.Elasticsearch.ByteSize? MemorySize { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_size_in_bytes")]
		public long MemorySizeInBytes { get; init; }
	}

	public partial class FieldSizeUsage
	{
		[JsonInclude]
		[JsonPropertyName("size")]
		public Elastic.Clients.Elasticsearch.ByteSize? Size { get; init; }

		[JsonInclude]
		[JsonPropertyName("size_in_bytes")]
		public long SizeInBytes { get; init; }
	}

	public partial class FlushStats
	{
		[JsonInclude]
		[JsonPropertyName("periodic")]
		public long Periodic { get; init; }

		[JsonInclude]
		[JsonPropertyName("total")]
		public long Total { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time")]
		public string? TotalTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time_in_millis")]
		public long TotalTimeInMillis { get; init; }
	}

	public partial class GeoDistanceSort
	{
		[JsonInclude]
		[JsonPropertyName("mode")]
		public Elastic.Clients.Elasticsearch.SortMode? Mode { get; init; }

		[JsonInclude]
		[JsonPropertyName("distance_type")]
		public Elastic.Clients.Elasticsearch.GeoDistanceType? DistanceType { get; init; }

		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.SortOrder? Order { get; init; }

		[JsonInclude]
		[JsonPropertyName("unit")]
		public Elastic.Clients.Elasticsearch.DistanceUnit? Unit { get; init; }
	}

	public partial class GetStats
	{
		[JsonInclude]
		[JsonPropertyName("current")]
		public long Current { get; init; }

		[JsonInclude]
		[JsonPropertyName("exists_time")]
		public string? ExistsTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("exists_time_in_millis")]
		public long ExistsTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("exists_total")]
		public long ExistsTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("missing_time")]
		public string? MissingTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("missing_time_in_millis")]
		public long MissingTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("missing_total")]
		public long MissingTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("time")]
		public string? Time { get; init; }

		[JsonInclude]
		[JsonPropertyName("time_in_millis")]
		public long TimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("total")]
		public long Total { get; init; }
	}

	public partial class Highlight
	{
		[JsonInclude]
		[JsonPropertyName("fields")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.HighlightField> Fields { get; set; }

		[JsonInclude]
		[JsonPropertyName("type")]
		public Elastic.Clients.Elasticsearch.HighlighterType? Type { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_chars")]
		public string? BoundaryChars { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_max_scan")]
		public int? BoundaryMaxScan { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_scanner")]
		public Elastic.Clients.Elasticsearch.BoundaryScanner? BoundaryScanner { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_scanner_locale")]
		public string? BoundaryScannerLocale { get; set; }

		[JsonInclude]
		[JsonPropertyName("encoder")]
		public Elastic.Clients.Elasticsearch.HighlighterEncoder? Encoder { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragmenter")]
		public Elastic.Clients.Elasticsearch.HighlighterFragmenter? Fragmenter { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragment_offset")]
		public int? FragmentOffset { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragment_size")]
		public int? FragmentSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_fragment_length")]
		public int? MaxFragmentLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("no_match_size")]
		public int? NoMatchSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("number_of_fragments")]
		public int? NumberOfFragments { get; set; }

		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.HighlighterOrder? Order { get; set; }

		[JsonInclude]
		[JsonPropertyName("post_tags")]
		public IEnumerable<string>? PostTags { get; set; }

		[JsonInclude]
		[JsonPropertyName("pre_tags")]
		public IEnumerable<string>? PreTags { get; set; }

		[JsonInclude]
		[JsonPropertyName("require_field_match")]
		public bool? RequireFieldMatch { get; set; }

		[JsonInclude]
		[JsonPropertyName("tags_schema")]
		public Elastic.Clients.Elasticsearch.HighlighterTagsSchema? TagsSchema { get; set; }

		[JsonInclude]
		[JsonPropertyName("highlight_query")]
		public Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? HighlightQuery { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_analyzed_offset")]
		public Union<string?, int?>? MaxAnalyzedOffset { get; set; }
	}

	[JsonConverter(typeof(HighlightDescriptorConverter))]
	public sealed partial class HighlightDescriptor : DescriptorBase<HighlightDescriptor>
	{
		internal Dictionary<string, Elastic.Clients.Elasticsearch.HighlightField> _fields;
		internal Elastic.Clients.Elasticsearch.HighlighterType? _type;
		internal string? _boundaryChars;
		internal int? _boundaryMaxScan;
		internal Elastic.Clients.Elasticsearch.BoundaryScanner? _boundaryScanner;
		internal string? _boundaryScannerLocale;
		internal Elastic.Clients.Elasticsearch.HighlighterEncoder? _encoder;
		internal Elastic.Clients.Elasticsearch.HighlighterFragmenter? _fragmenter;
		internal int? _fragmentOffset;
		internal int? _fragmentSize;
		internal int? _maxFragmentLength;
		internal int? _noMatchSize;
		internal int? _numberOfFragments;
		internal Elastic.Clients.Elasticsearch.HighlighterOrder? _order;
		internal IEnumerable<string>? _postTags;
		internal IEnumerable<string>? _preTags;
		internal bool? _requireFieldMatch;
		internal Elastic.Clients.Elasticsearch.HighlighterTagsSchema? _tagsSchema;
		internal Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? _highlightQuery;
		internal Union<string?, int?>? _maxAnalyzedOffset;
	}

	internal sealed class HighlightDescriptorConverter : JsonConverter<HighlightDescriptor>
	{
		public override HighlightDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, HighlightDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("fields");
			JsonSerializer.Serialize(writer, value._fields, options);
			if (value._type is not null)
			{
				writer.WritePropertyName("type");
				JsonSerializer.Serialize(writer, value._type, options);
			}

			if (!string.IsNullOrEmpty(value._boundaryChars))
			{
				writer.WritePropertyName("boundary_chars");
				writer.WriteStringValue(value._boundaryChars);
			}

			if (value._boundaryMaxScan.HasValue)
			{
				writer.WritePropertyName("boundary_max_scan");
				writer.WriteNumberValue(value._boundaryMaxScan.Value);
			}

			if (value._boundaryScanner is not null)
			{
				writer.WritePropertyName("boundary_scanner");
				JsonSerializer.Serialize(writer, value._boundaryScanner, options);
			}

			if (!string.IsNullOrEmpty(value._boundaryScannerLocale))
			{
				writer.WritePropertyName("boundary_scanner_locale");
				writer.WriteStringValue(value._boundaryScannerLocale);
			}

			if (value._encoder is not null)
			{
				writer.WritePropertyName("encoder");
				JsonSerializer.Serialize(writer, value._encoder, options);
			}

			if (value._fragmenter is not null)
			{
				writer.WritePropertyName("fragmenter");
				JsonSerializer.Serialize(writer, value._fragmenter, options);
			}

			if (value._fragmentOffset.HasValue)
			{
				writer.WritePropertyName("fragment_offset");
				writer.WriteNumberValue(value._fragmentOffset.Value);
			}

			if (value._fragmentSize.HasValue)
			{
				writer.WritePropertyName("fragment_size");
				writer.WriteNumberValue(value._fragmentSize.Value);
			}

			if (value._maxFragmentLength.HasValue)
			{
				writer.WritePropertyName("max_fragment_length");
				writer.WriteNumberValue(value._maxFragmentLength.Value);
			}

			if (value._noMatchSize.HasValue)
			{
				writer.WritePropertyName("no_match_size");
				writer.WriteNumberValue(value._noMatchSize.Value);
			}

			if (value._numberOfFragments.HasValue)
			{
				writer.WritePropertyName("number_of_fragments");
				writer.WriteNumberValue(value._numberOfFragments.Value);
			}

			if (value._order is not null)
			{
				writer.WritePropertyName("order");
				JsonSerializer.Serialize(writer, value._order, options);
			}

			if (value._postTags is not null)
			{
				writer.WritePropertyName("post_tags");
				JsonSerializer.Serialize(writer, value._postTags, options);
			}

			if (value._preTags is not null)
			{
				writer.WritePropertyName("pre_tags");
				JsonSerializer.Serialize(writer, value._preTags, options);
			}

			if (value._requireFieldMatch.HasValue)
			{
				writer.WritePropertyName("require_field_match");
				writer.WriteBooleanValue(value._requireFieldMatch.Value);
			}

			if (value._tagsSchema is not null)
			{
				writer.WritePropertyName("tags_schema");
				JsonSerializer.Serialize(writer, value._tagsSchema, options);
			}

			if (value._highlightQuery is not null)
			{
				writer.WritePropertyName("highlight_query");
				JsonSerializer.Serialize(writer, value._highlightQuery, options);
			}

			if (value._maxAnalyzedOffset is not null)
			{
				writer.WritePropertyName("max_analyzed_offset");
				JsonSerializer.Serialize(writer, value._maxAnalyzedOffset, options);
			}

			writer.WriteEndObject();
		}
	}

	public partial class HighlightField
	{
		[JsonInclude]
		[JsonPropertyName("boundary_chars")]
		public string? BoundaryChars { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_max_scan")]
		public int? BoundaryMaxScan { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_scanner")]
		public Elastic.Clients.Elasticsearch.BoundaryScanner? BoundaryScanner { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_scanner_locale")]
		public string? BoundaryScannerLocale { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("force_source")]
		public bool? ForceSource { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragmenter")]
		public Elastic.Clients.Elasticsearch.HighlighterFragmenter? Fragmenter { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragment_offset")]
		public int? FragmentOffset { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragment_size")]
		public int? FragmentSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("highlight_query")]
		public Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? HighlightQuery { get; set; }

		[JsonInclude]
		[JsonPropertyName("matched_fields")]
		public Elastic.Clients.Elasticsearch.Fields? MatchedFields { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_fragment_length")]
		public int? MaxFragmentLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("no_match_size")]
		public int? NoMatchSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("number_of_fragments")]
		public int? NumberOfFragments { get; set; }

		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.HighlighterOrder? Order { get; set; }

		[JsonInclude]
		[JsonPropertyName("phrase_limit")]
		public int? PhraseLimit { get; set; }

		[JsonInclude]
		[JsonPropertyName("post_tags")]
		public IEnumerable<string>? PostTags { get; set; }

		[JsonInclude]
		[JsonPropertyName("pre_tags")]
		public IEnumerable<string>? PreTags { get; set; }

		[JsonInclude]
		[JsonPropertyName("require_field_match")]
		public bool? RequireFieldMatch { get; set; }

		[JsonInclude]
		[JsonPropertyName("tags_schema")]
		public Elastic.Clients.Elasticsearch.HighlighterTagsSchema? TagsSchema { get; set; }

		[JsonInclude]
		[JsonPropertyName("type")]
		public Union<Elastic.Clients.Elasticsearch.HighlighterType?, string?>? Type { get; set; }
	}

	[JsonConverter(typeof(HighlightFieldDescriptorConverter))]
	public sealed partial class HighlightFieldDescriptor : DescriptorBase<HighlightFieldDescriptor>
	{
		internal string? _boundaryChars;
		internal int? _boundaryMaxScan;
		internal Elastic.Clients.Elasticsearch.BoundaryScanner? _boundaryScanner;
		internal string? _boundaryScannerLocale;
		internal string? _field;
		internal bool? _forceSource;
		internal Elastic.Clients.Elasticsearch.HighlighterFragmenter? _fragmenter;
		internal int? _fragmentOffset;
		internal int? _fragmentSize;
		internal Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? _highlightQuery;
		internal Elastic.Clients.Elasticsearch.Fields? _matchedFields;
		internal int? _maxFragmentLength;
		internal int? _noMatchSize;
		internal int? _numberOfFragments;
		internal Elastic.Clients.Elasticsearch.HighlighterOrder? _order;
		internal int? _phraseLimit;
		internal IEnumerable<string>? _postTags;
		internal IEnumerable<string>? _preTags;
		internal bool? _requireFieldMatch;
		internal Elastic.Clients.Elasticsearch.HighlighterTagsSchema? _tagsSchema;
		internal Union<Elastic.Clients.Elasticsearch.HighlighterType?, string?>? _type;
	}

	internal sealed class HighlightFieldDescriptorConverter : JsonConverter<HighlightFieldDescriptor>
	{
		public override HighlightFieldDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, HighlightFieldDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			if (!string.IsNullOrEmpty(value._boundaryChars))
			{
				writer.WritePropertyName("boundary_chars");
				writer.WriteStringValue(value._boundaryChars);
			}

			if (value._boundaryMaxScan.HasValue)
			{
				writer.WritePropertyName("boundary_max_scan");
				writer.WriteNumberValue(value._boundaryMaxScan.Value);
			}

			if (value._boundaryScanner is not null)
			{
				writer.WritePropertyName("boundary_scanner");
				JsonSerializer.Serialize(writer, value._boundaryScanner, options);
			}

			if (!string.IsNullOrEmpty(value._boundaryScannerLocale))
			{
				writer.WritePropertyName("boundary_scanner_locale");
				writer.WriteStringValue(value._boundaryScannerLocale);
			}

			if (value._field is not null)
			{
				writer.WritePropertyName("field");
				JsonSerializer.Serialize(writer, value._field, options);
			}

			if (value._forceSource.HasValue)
			{
				writer.WritePropertyName("force_source");
				writer.WriteBooleanValue(value._forceSource.Value);
			}

			if (value._fragmenter is not null)
			{
				writer.WritePropertyName("fragmenter");
				JsonSerializer.Serialize(writer, value._fragmenter, options);
			}

			if (value._fragmentOffset.HasValue)
			{
				writer.WritePropertyName("fragment_offset");
				writer.WriteNumberValue(value._fragmentOffset.Value);
			}

			if (value._fragmentSize.HasValue)
			{
				writer.WritePropertyName("fragment_size");
				writer.WriteNumberValue(value._fragmentSize.Value);
			}

			if (value._highlightQuery is not null)
			{
				writer.WritePropertyName("highlight_query");
				JsonSerializer.Serialize(writer, value._highlightQuery, options);
			}

			if (value._matchedFields is not null)
			{
				writer.WritePropertyName("matched_fields");
				JsonSerializer.Serialize(writer, value._matchedFields, options);
			}

			if (value._maxFragmentLength.HasValue)
			{
				writer.WritePropertyName("max_fragment_length");
				writer.WriteNumberValue(value._maxFragmentLength.Value);
			}

			if (value._noMatchSize.HasValue)
			{
				writer.WritePropertyName("no_match_size");
				writer.WriteNumberValue(value._noMatchSize.Value);
			}

			if (value._numberOfFragments.HasValue)
			{
				writer.WritePropertyName("number_of_fragments");
				writer.WriteNumberValue(value._numberOfFragments.Value);
			}

			if (value._order is not null)
			{
				writer.WritePropertyName("order");
				JsonSerializer.Serialize(writer, value._order, options);
			}

			if (value._phraseLimit.HasValue)
			{
				writer.WritePropertyName("phrase_limit");
				writer.WriteNumberValue(value._phraseLimit.Value);
			}

			if (value._postTags is not null)
			{
				writer.WritePropertyName("post_tags");
				JsonSerializer.Serialize(writer, value._postTags, options);
			}

			if (value._preTags is not null)
			{
				writer.WritePropertyName("pre_tags");
				JsonSerializer.Serialize(writer, value._preTags, options);
			}

			if (value._requireFieldMatch.HasValue)
			{
				writer.WritePropertyName("require_field_match");
				writer.WriteBooleanValue(value._requireFieldMatch.Value);
			}

			if (value._tagsSchema is not null)
			{
				writer.WritePropertyName("tags_schema");
				JsonSerializer.Serialize(writer, value._tagsSchema, options);
			}

			if (value._type is not null)
			{
				writer.WritePropertyName("type");
				JsonSerializer.Serialize(writer, value._type, options);
			}

			writer.WriteEndObject();
		}
	}

	public partial class Hit<TDocument>
	{
		[JsonInclude]
		[JsonPropertyName("_index")]
		public Elastic.Clients.Elasticsearch.IndexName Index { get; init; }

		[JsonInclude]
		[JsonPropertyName("_id")]
		public Elastic.Clients.Elasticsearch.Id Id { get; init; }

		[JsonInclude]
		[JsonPropertyName("_score")]
		public double? Score { get; init; }

		[JsonInclude]
		[JsonPropertyName("_type")]
		public string? Type { get; init; }

		[JsonInclude]
		[JsonPropertyName("_explanation")]
		public Elastic.Clients.Elasticsearch.Explanation? Explanation { get; init; }

		[JsonInclude]
		[JsonPropertyName("fields")]
		public Dictionary<string, object>? Fields { get; init; }

		[JsonInclude]
		[JsonPropertyName("highlight")]
		public Dictionary<string, IReadOnlyCollection<string>>? Highlight { get; init; }

		[JsonInclude]
		[JsonPropertyName("inner_hits")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.InnerHitsResult>? InnerHits { get; init; }

		[JsonInclude]
		[JsonPropertyName("matched_queries")]
		public IReadOnlyCollection<string>? MatchedQueries { get; init; }

		[JsonInclude]
		[JsonPropertyName("_nested")]
		public Elastic.Clients.Elasticsearch.NestedIdentity? Nested { get; init; }

		[JsonInclude]
		[JsonPropertyName("_ignored")]
		public IReadOnlyCollection<string>? Ignored { get; init; }

		[JsonInclude]
		[JsonPropertyName("_shard")]
		public string? Shard { get; init; }

		[JsonInclude]
		[JsonPropertyName("_node")]
		public string? Node { get; init; }

		[JsonInclude]
		[JsonPropertyName("_routing")]
		public string? Routing { get; init; }

		[JsonInclude]
		[JsonPropertyName("_source")]
		public TDocument? Source { get; init; }

		[JsonInclude]
		[JsonPropertyName("_seq_no")]
		public long? SeqNo { get; init; }

		[JsonInclude]
		[JsonPropertyName("_primary_term")]
		public long? PrimaryTerm { get; init; }

		[JsonInclude]
		[JsonPropertyName("_version")]
		public long? Version { get; init; }

		[JsonInclude]
		[JsonPropertyName("sort")]
		public IReadOnlyCollection<object>? Sort { get; init; }
	}

	public partial class HitsMetadata<T>
	{
		[JsonInclude]
		[JsonPropertyName("total")]
		public Union<Elastic.Clients.Elasticsearch.TotalHits, long> Total { get; init; }

		[JsonInclude]
		[JsonPropertyName("hits")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Hit<T>> Hits { get; init; }

		[JsonInclude]
		[JsonPropertyName("max_score")]
		public double? MaxScore { get; init; }
	}

	public partial class IndexedScript : ScriptBase
	{
		[JsonInclude]
		[JsonPropertyName("id")]
		public Elastic.Clients.Elasticsearch.Id Id { get; init; }
	}

	public partial class IndexingStats
	{
		[JsonInclude]
		[JsonPropertyName("index_current")]
		public long IndexCurrent { get; init; }

		[JsonInclude]
		[JsonPropertyName("delete_current")]
		public long DeleteCurrent { get; init; }

		[JsonInclude]
		[JsonPropertyName("delete_time")]
		public string? DeleteTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("delete_time_in_millis")]
		public long DeleteTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("delete_total")]
		public long DeleteTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("is_throttled")]
		public bool IsThrottled { get; init; }

		[JsonInclude]
		[JsonPropertyName("noop_update_total")]
		public long NoopUpdateTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("throttle_time")]
		public string? ThrottleTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("throttle_time_in_millis")]
		public long ThrottleTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("index_time")]
		public string? IndexTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("index_time_in_millis")]
		public long IndexTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("index_total")]
		public long IndexTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("index_failed")]
		public long IndexFailed { get; init; }

		[JsonInclude]
		[JsonPropertyName("types")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.IndexingStats>? Types { get; init; }
	}

	public abstract partial class IndicesResponseBase : AcknowledgedResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("_shards")]
		public Elastic.Clients.Elasticsearch.ShardStatistics? Shards { get; init; }
	}

	public partial class InlineGet<TDocument>
	{
		[JsonInclude]
		[JsonPropertyName("fields")]
		public Dictionary<string, object>? Fields { get; init; }

		[JsonInclude]
		[JsonPropertyName("found")]
		public bool Found { get; init; }

		[JsonInclude]
		[JsonPropertyName("_seq_no")]
		public long? SeqNo { get; init; }

		[JsonInclude]
		[JsonPropertyName("_primary_term")]
		public long? PrimaryTerm { get; init; }

		[JsonInclude]
		[JsonPropertyName("_routing")]
		public string? Routing { get; init; }

		[JsonInclude]
		[JsonPropertyName("_source")]
		public TDocument Source { get; init; }
	}

	public partial class InlineScript : ScriptBase
	{
		[JsonInclude]
		[JsonPropertyName("source")]
		public string Source { get; set; }
	}

	public partial class InnerHits
	{
		[JsonInclude]
		[JsonPropertyName("name")]
		public Elastic.Clients.Elasticsearch.Name? Name { get; set; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonInclude]
		[JsonPropertyName("from")]
		public int? From { get; set; }

		[JsonInclude]
		[JsonPropertyName("collapse")]
		public Elastic.Clients.Elasticsearch.FieldCollapse? Collapse { get; set; }

		[JsonInclude]
		[JsonPropertyName("docvalue_fields")]
		public IEnumerable<Elastic.Clients.Elasticsearch.FieldAndFormat>? DocvalueFields { get; set; }

		[JsonInclude]
		[JsonPropertyName("explain")]
		public bool? Explain { get; set; }

		[JsonInclude]
		[JsonPropertyName("highlight")]
		public Elastic.Clients.Elasticsearch.Highlight? Highlight { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_unmapped")]
		public bool? IgnoreUnmapped { get; set; }

		[JsonInclude]
		[JsonPropertyName("script_fields")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.ScriptField>? ScriptFields { get; set; }

		[JsonInclude]
		[JsonPropertyName("seq_no_primary_term")]
		public bool? SeqNoPrimaryTerm { get; set; }

		[JsonInclude]
		[JsonPropertyName("fields")]
		public Elastic.Clients.Elasticsearch.Fields? Fields { get; set; }

		[JsonInclude]
		[JsonPropertyName("sort")]
		public Elastic.Clients.Elasticsearch.Sort? Sort { get; set; }

		[JsonInclude]
		[JsonPropertyName("_source")]
		public Union<bool?, Elastic.Clients.Elasticsearch.SourceFilter?>? Source { get; set; }

		[JsonInclude]
		[JsonPropertyName("stored_field")]
		public Elastic.Clients.Elasticsearch.Fields? StoredField { get; set; }

		[JsonInclude]
		[JsonPropertyName("track_scores")]
		public bool? TrackScores { get; set; }

		[JsonInclude]
		[JsonPropertyName("version")]
		public bool? Version { get; set; }
	}

	[JsonConverter(typeof(InnerHitsDescriptorConverter))]
	public sealed partial class InnerHitsDescriptor : DescriptorBase<InnerHitsDescriptor>
	{
		internal Elastic.Clients.Elasticsearch.Name? _name;
		internal int? _size;
		internal int? _from;
		internal Elastic.Clients.Elasticsearch.FieldCollapse? _collapse;
		internal IEnumerable<Elastic.Clients.Elasticsearch.FieldAndFormat>? _docvalueFields;
		internal bool? _explain;
		internal Elastic.Clients.Elasticsearch.Highlight? _highlight;
		internal bool? _ignoreUnmapped;
		internal Dictionary<string, Elastic.Clients.Elasticsearch.ScriptField>? _scriptFields;
		internal bool? _seqNoPrimaryTerm;
		internal Elastic.Clients.Elasticsearch.Fields? _fields;
		internal Elastic.Clients.Elasticsearch.Sort? _sort;
		internal Union<bool?, Elastic.Clients.Elasticsearch.SourceFilter?>? _source;
		internal Elastic.Clients.Elasticsearch.Fields? _storedField;
		internal bool? _trackScores;
		internal bool? _version;
	}

	internal sealed class InnerHitsDescriptorConverter : JsonConverter<InnerHitsDescriptor>
	{
		public override InnerHitsDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, InnerHitsDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			if (value._name is not null)
			{
				writer.WritePropertyName("name");
				JsonSerializer.Serialize(writer, value._name, options);
			}

			if (value._size.HasValue)
			{
				writer.WritePropertyName("size");
				writer.WriteNumberValue(value._size.Value);
			}

			if (value._from.HasValue)
			{
				writer.WritePropertyName("from");
				writer.WriteNumberValue(value._from.Value);
			}

			if (value._collapse is not null)
			{
				writer.WritePropertyName("collapse");
				JsonSerializer.Serialize(writer, value._collapse, options);
			}

			if (value._docvalueFields is not null)
			{
				writer.WritePropertyName("docvalue_fields");
				JsonSerializer.Serialize(writer, value._docvalueFields, options);
			}

			if (value._explain.HasValue)
			{
				writer.WritePropertyName("explain");
				writer.WriteBooleanValue(value._explain.Value);
			}

			if (value._highlight is not null)
			{
				writer.WritePropertyName("highlight");
				JsonSerializer.Serialize(writer, value._highlight, options);
			}

			if (value._ignoreUnmapped.HasValue)
			{
				writer.WritePropertyName("ignore_unmapped");
				writer.WriteBooleanValue(value._ignoreUnmapped.Value);
			}

			if (value._scriptFields is not null)
			{
				writer.WritePropertyName("script_fields");
				JsonSerializer.Serialize(writer, value._scriptFields, options);
			}

			if (value._seqNoPrimaryTerm.HasValue)
			{
				writer.WritePropertyName("seq_no_primary_term");
				writer.WriteBooleanValue(value._seqNoPrimaryTerm.Value);
			}

			if (value._fields is not null)
			{
				writer.WritePropertyName("fields");
				JsonSerializer.Serialize(writer, value._fields, options);
			}

			if (value._sort is not null)
			{
				writer.WritePropertyName("sort");
				JsonSerializer.Serialize(writer, value._sort, options);
			}

			if (value._source is not null)
			{
				writer.WritePropertyName("_source");
				JsonSerializer.Serialize(writer, value._source, options);
			}

			if (value._storedField is not null)
			{
				writer.WritePropertyName("stored_field");
				JsonSerializer.Serialize(writer, value._storedField, options);
			}

			if (value._trackScores.HasValue)
			{
				writer.WritePropertyName("track_scores");
				writer.WriteBooleanValue(value._trackScores.Value);
			}

			if (value._version.HasValue)
			{
				writer.WritePropertyName("version");
				writer.WriteBooleanValue(value._version.Value);
			}

			writer.WriteEndObject();
		}
	}

	public partial class InnerHitsMetadata
	{
		[JsonInclude]
		[JsonPropertyName("total")]
		public Union<Elastic.Clients.Elasticsearch.TotalHits, long> Total { get; init; }

		[JsonInclude]
		[JsonPropertyName("max_score")]
		public double? MaxScore { get; init; }
	}

	public partial class InnerHitsResult
	{
		[JsonInclude]
		[JsonPropertyName("hits")]
		public Elastic.Clients.Elasticsearch.InnerHitsMetadata Hits { get; init; }
	}

	public partial class LaplaceSmoothingModel : ISmoothingModelContainerVariant
	{
		[JsonIgnore]
		string ISmoothingModelContainerVariant.SmoothingModelContainerVariantName => "laplace";
		[JsonInclude]
		[JsonPropertyName("alpha")]
		public double Alpha { get; set; }
	}

	public partial class LatLon
	{
		[JsonInclude]
		[JsonPropertyName("lat")]
		public double Lat { get; set; }

		[JsonInclude]
		[JsonPropertyName("lon")]
		public double Lon { get; set; }
	}

	public partial class LinearInterpolationSmoothingModel : ISmoothingModelContainerVariant
	{
		[JsonIgnore]
		string ISmoothingModelContainerVariant.SmoothingModelContainerVariantName => "linear_interpolation";
		[JsonInclude]
		[JsonPropertyName("bigram_lambda")]
		public double BigramLambda { get; set; }

		[JsonInclude]
		[JsonPropertyName("trigram_lambda")]
		public double TrigramLambda { get; set; }

		[JsonInclude]
		[JsonPropertyName("unigram_lambda")]
		public double UnigramLambda { get; set; }
	}

	public partial class MergesStats
	{
		[JsonInclude]
		[JsonPropertyName("current")]
		public long Current { get; init; }

		[JsonInclude]
		[JsonPropertyName("current_docs")]
		public long CurrentDocs { get; init; }

		[JsonInclude]
		[JsonPropertyName("current_size")]
		public string? CurrentSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("current_size_in_bytes")]
		public long CurrentSizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("total")]
		public long Total { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_auto_throttle")]
		public string? TotalAutoThrottle { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_auto_throttle_in_bytes")]
		public long TotalAutoThrottleInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_docs")]
		public long TotalDocs { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_size")]
		public string? TotalSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_size_in_bytes")]
		public long TotalSizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_stopped_time")]
		public string? TotalStoppedTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_stopped_time_in_millis")]
		public long TotalStoppedTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_throttled_time")]
		public string? TotalThrottledTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_throttled_time_in_millis")]
		public long TotalThrottledTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time")]
		public string? TotalTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time_in_millis")]
		public long TotalTimeInMillis { get; init; }
	}

	public partial class NestedIdentity
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string Field { get; init; }

		[JsonInclude]
		[JsonPropertyName("offset")]
		public int Offset { get; init; }

		[JsonInclude]
		[JsonPropertyName("_nested")]
		public Elastic.Clients.Elasticsearch.NestedIdentity? Nested { get; init; }
	}

	public partial class NodeStatistics
	{
		[JsonInclude]
		[JsonPropertyName("failures")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.ErrorCause>? Failures { get; init; }

		[JsonInclude]
		[JsonPropertyName("total")]
		public int Total { get; init; }

		[JsonInclude]
		[JsonPropertyName("successful")]
		public int Successful { get; init; }

		[JsonInclude]
		[JsonPropertyName("failed")]
		public int Failed { get; init; }
	}

	public partial class PhraseSuggestCollate
	{
		[JsonInclude]
		[JsonPropertyName("params")]
		public Dictionary<string, object>? Params { get; set; }

		[JsonInclude]
		[JsonPropertyName("prune")]
		public bool? Prune { get; set; }

		[JsonInclude]
		[JsonPropertyName("query")]
		public Elastic.Clients.Elasticsearch.PhraseSuggestCollateQuery Query { get; set; }
	}

	[JsonConverter(typeof(PhraseSuggestCollateDescriptorConverter))]
	public sealed partial class PhraseSuggestCollateDescriptor : DescriptorBase<PhraseSuggestCollateDescriptor>
	{
		internal Dictionary<string, object>? _params;
		internal bool? _prune;
		internal Elastic.Clients.Elasticsearch.PhraseSuggestCollateQuery _query;
	}

	internal sealed class PhraseSuggestCollateDescriptorConverter : JsonConverter<PhraseSuggestCollateDescriptor>
	{
		public override PhraseSuggestCollateDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, PhraseSuggestCollateDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			if (value._params is not null)
			{
				writer.WritePropertyName("params");
				JsonSerializer.Serialize(writer, value._params, options);
			}

			if (value._prune.HasValue)
			{
				writer.WritePropertyName("prune");
				writer.WriteBooleanValue(value._prune.Value);
			}

			writer.WritePropertyName("query");
			JsonSerializer.Serialize(writer, value._query, options);
			writer.WriteEndObject();
		}
	}

	public partial class PhraseSuggestCollateQuery
	{
		[JsonInclude]
		[JsonPropertyName("id")]
		public Elastic.Clients.Elasticsearch.Id? Id { get; set; }

		[JsonInclude]
		[JsonPropertyName("source")]
		public string? Source { get; set; }
	}

	public partial class PhraseSuggester : SuggesterBase, ISuggestContainerVariant
	{
		[JsonIgnore]
		string ISuggestContainerVariant.SuggestContainerVariantName => "phrase";
		[JsonInclude]
		[JsonPropertyName("collate")]
		public Elastic.Clients.Elasticsearch.PhraseSuggestCollate? Collate { get; set; }

		[JsonInclude]
		[JsonPropertyName("confidence")]
		public double? Confidence { get; set; }

		[JsonInclude]
		[JsonPropertyName("direct_generator")]
		public IEnumerable<Elastic.Clients.Elasticsearch.DirectGenerator>? DirectGenerator { get; set; }

		[JsonInclude]
		[JsonPropertyName("force_unigrams")]
		public bool? ForceUnigrams { get; set; }

		[JsonInclude]
		[JsonPropertyName("gram_size")]
		public int? GramSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("highlight")]
		public Elastic.Clients.Elasticsearch.PhraseSuggestHighlight? Highlight { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_errors")]
		public double? MaxErrors { get; set; }

		[JsonInclude]
		[JsonPropertyName("real_word_error_likelihood")]
		public double? RealWordErrorLikelihood { get; set; }

		[JsonInclude]
		[JsonPropertyName("separator")]
		public string? Separator { get; set; }

		[JsonInclude]
		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("smoothing")]
		public Elastic.Clients.Elasticsearch.SmoothingModelContainer? Smoothing { get; set; }

		[JsonInclude]
		[JsonPropertyName("text")]
		public string? Text { get; set; }

		[JsonInclude]
		[JsonPropertyName("token_limit")]
		public int? TokenLimit { get; set; }
	}

	public partial class PhraseSuggestHighlight
	{
		[JsonInclude]
		[JsonPropertyName("post_tag")]
		public string PostTag { get; set; }

		[JsonInclude]
		[JsonPropertyName("pre_tag")]
		public string PreTag { get; set; }
	}

	public partial class PhraseSuggestOption
	{
		[JsonInclude]
		[JsonPropertyName("text")]
		public string Text { get; init; }

		[JsonInclude]
		[JsonPropertyName("highlighted")]
		public string Highlighted { get; init; }

		[JsonInclude]
		[JsonPropertyName("score")]
		public double Score { get; init; }
	}

	public partial class PluginStats
	{
		[JsonInclude]
		[JsonPropertyName("classname")]
		public string Classname { get; init; }

		[JsonInclude]
		[JsonPropertyName("description")]
		public string Description { get; init; }

		[JsonInclude]
		[JsonPropertyName("elasticsearch_version")]
		public string ElasticsearchVersion { get; init; }

		[JsonInclude]
		[JsonPropertyName("extended_plugins")]
		public IReadOnlyCollection<string> ExtendedPlugins { get; init; }

		[JsonInclude]
		[JsonPropertyName("has_native_controller")]
		public bool HasNativeController { get; init; }

		[JsonInclude]
		[JsonPropertyName("java_version")]
		public string JavaVersion { get; init; }

		[JsonInclude]
		[JsonPropertyName("name")]
		public Elastic.Clients.Elasticsearch.Name Name { get; init; }

		[JsonInclude]
		[JsonPropertyName("version")]
		public string Version { get; init; }

		[JsonInclude]
		[JsonPropertyName("licensed")]
		public bool Licensed { get; init; }

		[JsonInclude]
		[JsonPropertyName("type")]
		public string Type { get; init; }
	}

	public partial class PointInTimeReference
	{
		[JsonInclude]
		[JsonPropertyName("id")]
		public Elastic.Clients.Elasticsearch.Id Id { get; set; }

		[JsonInclude]
		[JsonPropertyName("keep_alive")]
		public Elastic.Clients.Elasticsearch.Time? KeepAlive { get; set; }
	}

	public partial class Profile
	{
		[JsonInclude]
		[JsonPropertyName("shards")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.ShardProfile> Shards { get; init; }
	}

	public partial class QueryBreakdown
	{
		[JsonInclude]
		[JsonPropertyName("advance")]
		public long Advance { get; init; }

		[JsonInclude]
		[JsonPropertyName("advance_count")]
		public long AdvanceCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("build_scorer")]
		public long BuildScorer { get; init; }

		[JsonInclude]
		[JsonPropertyName("build_scorer_count")]
		public long BuildScorerCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("create_weight")]
		public long CreateWeight { get; init; }

		[JsonInclude]
		[JsonPropertyName("create_weight_count")]
		public long CreateWeightCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("match")]
		public long Match { get; init; }

		[JsonInclude]
		[JsonPropertyName("match_count")]
		public long MatchCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("shallow_advance")]
		public long ShallowAdvance { get; init; }

		[JsonInclude]
		[JsonPropertyName("shallow_advance_count")]
		public long ShallowAdvanceCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("next_doc")]
		public long NextDoc { get; init; }

		[JsonInclude]
		[JsonPropertyName("next_doc_count")]
		public long NextDocCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("score")]
		public long Score { get; init; }

		[JsonInclude]
		[JsonPropertyName("score_count")]
		public long ScoreCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("compute_max_score")]
		public long ComputeMaxScore { get; init; }

		[JsonInclude]
		[JsonPropertyName("compute_max_score_count")]
		public long ComputeMaxScoreCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("set_min_competitive_score")]
		public long SetMinCompetitiveScore { get; init; }

		[JsonInclude]
		[JsonPropertyName("set_min_competitive_score_count")]
		public long SetMinCompetitiveScoreCount { get; init; }
	}

	public partial class QueryCacheStats
	{
		[JsonInclude]
		[JsonPropertyName("cache_count")]
		public int CacheCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("cache_size")]
		public int CacheSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("evictions")]
		public int Evictions { get; init; }

		[JsonInclude]
		[JsonPropertyName("hit_count")]
		public int HitCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_size")]
		public Elastic.Clients.Elasticsearch.ByteSize? MemorySize { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_size_in_bytes")]
		public int MemorySizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("miss_count")]
		public int MissCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_count")]
		public int TotalCount { get; init; }
	}

	public partial class QueryProfile
	{
		[JsonInclude]
		[JsonPropertyName("breakdown")]
		public Elastic.Clients.Elasticsearch.QueryBreakdown Breakdown { get; init; }

		[JsonInclude]
		[JsonPropertyName("description")]
		public string Description { get; init; }

		[JsonInclude]
		[JsonPropertyName("time_in_nanos")]
		public long TimeInNanos { get; init; }

		[JsonInclude]
		[JsonPropertyName("type")]
		public string Type { get; init; }

		[JsonInclude]
		[JsonPropertyName("children")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.QueryProfile>? Children { get; init; }
	}

	public partial class RecoveryStats
	{
		[JsonInclude]
		[JsonPropertyName("current_as_source")]
		public long CurrentAsSource { get; init; }

		[JsonInclude]
		[JsonPropertyName("current_as_target")]
		public long CurrentAsTarget { get; init; }

		[JsonInclude]
		[JsonPropertyName("throttle_time")]
		public string? ThrottleTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("throttle_time_in_millis")]
		public long ThrottleTimeInMillis { get; init; }
	}

	public partial class RefreshStats
	{
		[JsonInclude]
		[JsonPropertyName("external_total")]
		public long ExternalTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("external_total_time_in_millis")]
		public long ExternalTotalTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("listeners")]
		public long Listeners { get; init; }

		[JsonInclude]
		[JsonPropertyName("total")]
		public long Total { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time")]
		public string? TotalTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time_in_millis")]
		public long TotalTimeInMillis { get; init; }
	}

	public abstract partial class RequestBase
	{
	}

	public partial class RequestCacheStats
	{
		[JsonInclude]
		[JsonPropertyName("evictions")]
		public long Evictions { get; init; }

		[JsonInclude]
		[JsonPropertyName("hit_count")]
		public long HitCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_size")]
		public string? MemorySize { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_size_in_bytes")]
		public long MemorySizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("miss_count")]
		public long MissCount { get; init; }
	}

	public partial class Rescore
	{
		[JsonInclude]
		[JsonPropertyName("query")]
		public Elastic.Clients.Elasticsearch.RescoreQuery Query { get; set; }

		[JsonInclude]
		[JsonPropertyName("window_size")]
		public int? WindowSize { get; set; }
	}

	public partial class RescoreQuery
	{
		[JsonInclude]
		[JsonPropertyName("rescore_query")]
		public Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer Query { get; set; }

		[JsonInclude]
		[JsonPropertyName("query_weight")]
		public double? QueryWeight { get; set; }

		[JsonInclude]
		[JsonPropertyName("rescore_query_weight")]
		public double? RescoreQueryWeight { get; set; }

		[JsonInclude]
		[JsonPropertyName("score_mode")]
		public Elastic.Clients.Elasticsearch.ScoreMode? ScoreMode { get; set; }
	}

	[JsonConverter(typeof(RescoreQueryDescriptorConverter))]
	public sealed partial class RescoreQueryDescriptor : DescriptorBase<RescoreQueryDescriptor>
	{
		internal Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer _query;
		internal double? _queryWeight;
		internal double? _rescoreQueryWeight;
		internal Elastic.Clients.Elasticsearch.ScoreMode? _scoreMode;
	}

	internal sealed class RescoreQueryDescriptorConverter : JsonConverter<RescoreQueryDescriptor>
	{
		public override RescoreQueryDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, RescoreQueryDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("rescore_query");
			JsonSerializer.Serialize(writer, value._query, options);
			if (value._queryWeight.HasValue)
			{
				writer.WritePropertyName("query_weight");
				writer.WriteNumberValue(value._queryWeight.Value);
			}

			if (value._rescoreQueryWeight.HasValue)
			{
				writer.WritePropertyName("rescore_query_weight");
				writer.WriteNumberValue(value._rescoreQueryWeight.Value);
			}

			if (value._scoreMode is not null)
			{
				writer.WritePropertyName("score_mode");
				JsonSerializer.Serialize(writer, value._scoreMode, options);
			}

			writer.WriteEndObject();
		}
	}

	public partial class ScoreSort
	{
		[JsonInclude]
		[JsonPropertyName("mode")]
		public Elastic.Clients.Elasticsearch.SortMode? Mode { get; init; }

		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.SortOrder? Order { get; init; }
	}

	public abstract partial class ScriptBase
	{
		[JsonInclude]
		[JsonPropertyName("lang")]
		public Union<Elastic.Clients.Elasticsearch.ScriptLanguage?, string?>? Lang { get; set; }

		[JsonInclude]
		[JsonPropertyName("params")]
		public Dictionary<string, object>? Params { get; set; }
	}

	public partial class ScriptField
	{
		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script Script { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_failure")]
		public bool? IgnoreFailure { get; set; }
	}

	public partial class ScriptSort
	{
		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.SortOrder? Order { get; init; }

		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script Script { get; init; }

		[JsonInclude]
		[JsonPropertyName("type")]
		public string? Type { get; init; }
	}

	public partial class SearchProfile
	{
		[JsonInclude]
		[JsonPropertyName("collector")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Collector> Collector { get; init; }

		[JsonInclude]
		[JsonPropertyName("query")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.QueryProfile> Query { get; init; }

		[JsonInclude]
		[JsonPropertyName("rewrite_time")]
		public long RewriteTime { get; init; }
	}

	public partial class SearchStats
	{
		[JsonInclude]
		[JsonPropertyName("fetch_current")]
		public long FetchCurrent { get; init; }

		[JsonInclude]
		[JsonPropertyName("fetch_time_in_millis")]
		public long FetchTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("fetch_total")]
		public long FetchTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("open_contexts")]
		public long? OpenContexts { get; init; }

		[JsonInclude]
		[JsonPropertyName("query_current")]
		public long QueryCurrent { get; init; }

		[JsonInclude]
		[JsonPropertyName("query_time_in_millis")]
		public long QueryTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("query_total")]
		public long QueryTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("scroll_current")]
		public long ScrollCurrent { get; init; }

		[JsonInclude]
		[JsonPropertyName("scroll_time_in_millis")]
		public long ScrollTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("scroll_total")]
		public long ScrollTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("suggest_current")]
		public long SuggestCurrent { get; init; }

		[JsonInclude]
		[JsonPropertyName("suggest_time_in_millis")]
		public long SuggestTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("suggest_total")]
		public long SuggestTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("groups")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.SearchStats>? Groups { get; init; }
	}

	public partial class SegmentsStats
	{
		[JsonInclude]
		[JsonPropertyName("count")]
		public int Count { get; init; }

		[JsonInclude]
		[JsonPropertyName("doc_values_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? DocValuesMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("doc_values_memory_in_bytes")]
		public int DocValuesMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("file_sizes")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.IndexManagement.Stats.ShardFileSizeInfo> FileSizes { get; init; }

		[JsonInclude]
		[JsonPropertyName("fixed_bit_set")]
		public Elastic.Clients.Elasticsearch.ByteSize? FixedBitSet { get; init; }

		[JsonInclude]
		[JsonPropertyName("fixed_bit_set_memory_in_bytes")]
		public int FixedBitSetMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("index_writer_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? IndexWriterMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("index_writer_max_memory_in_bytes")]
		public int? IndexWriterMaxMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("index_writer_memory_in_bytes")]
		public int IndexWriterMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("max_unsafe_auto_id_timestamp")]
		public int MaxUnsafeAutoIdTimestamp { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? Memory { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_in_bytes")]
		public int MemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("norms_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? NormsMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("norms_memory_in_bytes")]
		public int NormsMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("points_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? PointsMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("points_memory_in_bytes")]
		public int PointsMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("stored_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? StoredMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("stored_fields_memory_in_bytes")]
		public int StoredFieldsMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("terms_memory_in_bytes")]
		public int TermsMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("terms_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? TermsMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("term_vectory_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? TermVectoryMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("term_vectors_memory_in_bytes")]
		public int TermVectorsMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("version_map_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? VersionMapMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("version_map_memory_in_bytes")]
		public int VersionMapMemoryInBytes { get; init; }
	}

	public partial class ShardFailure
	{
		[JsonInclude]
		[JsonPropertyName("index")]
		public Elastic.Clients.Elasticsearch.IndexName? Index { get; init; }

		[JsonInclude]
		[JsonPropertyName("node")]
		public string? Node { get; init; }

		[JsonInclude]
		[JsonPropertyName("reason")]
		public Elastic.Clients.Elasticsearch.ErrorCause Reason { get; init; }

		[JsonInclude]
		[JsonPropertyName("shard")]
		public int Shard { get; init; }

		[JsonInclude]
		[JsonPropertyName("status")]
		public string? Status { get; init; }
	}

	public partial class ShardProfile
	{
		[JsonInclude]
		[JsonPropertyName("aggregations")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.AggregationProfile> Aggregations { get; init; }

		[JsonInclude]
		[JsonPropertyName("id")]
		public string Id { get; init; }

		[JsonInclude]
		[JsonPropertyName("searches")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.SearchProfile> Searches { get; init; }

		[JsonInclude]
		[JsonPropertyName("fetch")]
		public Elastic.Clients.Elasticsearch.FetchProfile? Fetch { get; init; }
	}

	public abstract partial class ShardsOperationResponseBase : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("_shards")]
		public Elastic.Clients.Elasticsearch.ShardStatistics Shards { get; init; }
	}

	public partial class ShardStatistics
	{
		[JsonInclude]
		[JsonPropertyName("failed")]
		public int Failed { get; init; }

		[JsonInclude]
		[JsonPropertyName("successful")]
		public int Successful { get; init; }

		[JsonInclude]
		[JsonPropertyName("total")]
		public int Total { get; init; }

		[JsonInclude]
		[JsonPropertyName("failures")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.ShardFailure>? Failures { get; init; }

		[JsonInclude]
		[JsonPropertyName("skipped")]
		public int? Skipped { get; init; }
	}

	public partial class SlicedScroll
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("id")]
		public int Id { get; set; }

		[JsonInclude]
		[JsonPropertyName("max")]
		public int Max { get; set; }
	}

	[JsonConverter(typeof(SlicedScrollDescriptorConverter))]
	public sealed partial class SlicedScrollDescriptor : DescriptorBase<SlicedScrollDescriptor>
	{
		internal string? _field;
		internal int _id;
		internal int _max;
	}

	internal sealed class SlicedScrollDescriptorConverter : JsonConverter<SlicedScrollDescriptor>
	{
		public override SlicedScrollDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, SlicedScrollDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			if (value._field is not null)
			{
				writer.WritePropertyName("field");
				JsonSerializer.Serialize(writer, value._field, options);
			}

			writer.WritePropertyName("id");
			writer.WriteNumberValue(value._id);
			writer.WritePropertyName("max");
			writer.WriteNumberValue(value._max);
			writer.WriteEndObject();
		}
	}

	public interface ISmoothingModelContainerVariant
	{
		string SmoothingModelContainerVariantName { get; }
	}

	[JsonConverter(typeof(SmoothingModelContainerConverter))]
	public partial class SmoothingModelContainer : IContainer
	{
		public SmoothingModelContainer(ISmoothingModelContainerVariant variant) => Variant = variant ?? throw new ArgumentNullException(nameof(variant));
		internal ISmoothingModelContainerVariant Variant { get; }
	}

	internal sealed class SmoothingModelContainerConverter : JsonConverter<SmoothingModelContainer>
	{
		public override SmoothingModelContainer Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
		{
			reader.Read();
			if (reader.TokenType != JsonTokenType.PropertyName)
			{
				throw new JsonException();
			}

			var propertyName = reader.GetString();
			if (propertyName == "laplace")
			{
				var variant = JsonSerializer.Deserialize<Elastic.Clients.Elasticsearch.LaplaceSmoothingModel?>(ref reader, options);
				reader.Read();
				return new SmoothingModelContainer(variant);
			}

			if (propertyName == "linear_interpolation")
			{
				var variant = JsonSerializer.Deserialize<Elastic.Clients.Elasticsearch.LinearInterpolationSmoothingModel?>(ref reader, options);
				reader.Read();
				return new SmoothingModelContainer(variant);
			}

			if (propertyName == "stupid_backoff")
			{
				var variant = JsonSerializer.Deserialize<Elastic.Clients.Elasticsearch.StupidBackoffSmoothingModel?>(ref reader, options);
				reader.Read();
				return new SmoothingModelContainer(variant);
			}

			throw new JsonException();
		}

		public override void Write(Utf8JsonWriter writer, SmoothingModelContainer value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			writer.WritePropertyName(value.Variant.SmoothingModelContainerVariantName);
			switch (value.Variant)
			{
				case Elastic.Clients.Elasticsearch.LaplaceSmoothingModel variant:
					JsonSerializer.Serialize(writer, variant, options);
					break;
				case Elastic.Clients.Elasticsearch.LinearInterpolationSmoothingModel variant:
					JsonSerializer.Serialize(writer, variant, options);
					break;
				case Elastic.Clients.Elasticsearch.StupidBackoffSmoothingModel variant:
					JsonSerializer.Serialize(writer, variant, options);
					break;
			}

			writer.WriteEndObject();
		}
	}

	public partial class SortContainer
	{
		[JsonInclude]
		[JsonPropertyName("_score")]
		public Elastic.Clients.Elasticsearch.ScoreSort? Score { get; init; }

		[JsonInclude]
		[JsonPropertyName("_doc")]
		public Elastic.Clients.Elasticsearch.ScoreSort? Doc { get; init; }

		[JsonInclude]
		[JsonPropertyName("_geo_distance")]
		public Elastic.Clients.Elasticsearch.GeoDistanceSort? GeoDistance { get; init; }

		[JsonInclude]
		[JsonPropertyName("_script")]
		public Elastic.Clients.Elasticsearch.ScriptSort? Script { get; init; }
	}

	public partial class SourceFilter
	{
		[JsonInclude]
		[JsonPropertyName("excludes")]
		public Elastic.Clients.Elasticsearch.Fields? Excludes { get; set; }

		[JsonInclude]
		[JsonPropertyName("includes")]
		public Elastic.Clients.Elasticsearch.Fields? Includes { get; set; }

		[JsonInclude]
		[JsonPropertyName("exclude")]
		public Elastic.Clients.Elasticsearch.Fields? Exclude { get; set; }

		[JsonInclude]
		[JsonPropertyName("include")]
		public Elastic.Clients.Elasticsearch.Fields? Include { get; set; }
	}

	[JsonConverter(typeof(SourceFilterDescriptorConverter))]
	public sealed partial class SourceFilterDescriptor : DescriptorBase<SourceFilterDescriptor>
	{
		internal Elastic.Clients.Elasticsearch.Fields? _excludes;
		internal Elastic.Clients.Elasticsearch.Fields? _includes;
		internal Elastic.Clients.Elasticsearch.Fields? _exclude;
		internal Elastic.Clients.Elasticsearch.Fields? _include;
	}

	internal sealed class SourceFilterDescriptorConverter : JsonConverter<SourceFilterDescriptor>
	{
		public override SourceFilterDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, SourceFilterDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			if (value._excludes is not null)
			{
				writer.WritePropertyName("excludes");
				JsonSerializer.Serialize(writer, value._excludes, options);
			}

			if (value._includes is not null)
			{
				writer.WritePropertyName("includes");
				JsonSerializer.Serialize(writer, value._includes, options);
			}

			if (value._exclude is not null)
			{
				writer.WritePropertyName("exclude");
				JsonSerializer.Serialize(writer, value._exclude, options);
			}

			if (value._include is not null)
			{
				writer.WritePropertyName("include");
				JsonSerializer.Serialize(writer, value._include, options);
			}

			writer.WriteEndObject();
		}
	}

	public partial class StoreStats
	{
		[JsonInclude]
		[JsonPropertyName("size")]
		public Elastic.Clients.Elasticsearch.ByteSize? Size { get; init; }

		[JsonInclude]
		[JsonPropertyName("size_in_bytes")]
		public int SizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("reserved")]
		public Elastic.Clients.Elasticsearch.ByteSize? Reserved { get; init; }

		[JsonInclude]
		[JsonPropertyName("reserved_in_bytes")]
		public int ReservedInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_data_set_size")]
		public Elastic.Clients.Elasticsearch.ByteSize? TotalDataSetSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_data_set_size_in_bytes")]
		public int? TotalDataSetSizeInBytes { get; init; }
	}

	public partial class StupidBackoffSmoothingModel : ISmoothingModelContainerVariant
	{
		[JsonIgnore]
		string ISmoothingModelContainerVariant.SmoothingModelContainerVariantName => "stupid_backoff";
		[JsonInclude]
		[JsonPropertyName("discount")]
		public double Discount { get; set; }
	}

	public partial class Suggest<T>
	{
		[JsonInclude]
		[JsonPropertyName("length")]
		public int Length { get; init; }

		[JsonInclude]
		[JsonPropertyName("offset")]
		public int Offset { get; init; }

		[JsonInclude]
		[JsonPropertyName("options")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.SuggestOption<T>> Options { get; init; }

		[JsonInclude]
		[JsonPropertyName("text")]
		public string Text { get; init; }
	}

	public interface ISuggestContainerVariant
	{
		string SuggestContainerVariantName { get; }
	}

	[JsonConverter(typeof(SuggestContainerConverter))]
	public partial class SuggestContainer : IContainer
	{
		public SuggestContainer(ISuggestContainerVariant variant) => Variant = variant ?? throw new ArgumentNullException(nameof(variant));
		internal ISuggestContainerVariant Variant { get; }
	}

	internal sealed class SuggestContainerConverter : JsonConverter<SuggestContainer>
	{
		public override SuggestContainer Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
		{
			reader.Read();
			if (reader.TokenType != JsonTokenType.PropertyName)
			{
				throw new JsonException();
			}

			var propertyName = reader.GetString();
			if (propertyName == "completion")
			{
				var variant = JsonSerializer.Deserialize<Elastic.Clients.Elasticsearch.CompletionSuggester?>(ref reader, options);
				reader.Read();
				return new SuggestContainer(variant);
			}

			if (propertyName == "phrase")
			{
				var variant = JsonSerializer.Deserialize<Elastic.Clients.Elasticsearch.PhraseSuggester?>(ref reader, options);
				reader.Read();
				return new SuggestContainer(variant);
			}

			if (propertyName == "term")
			{
				var variant = JsonSerializer.Deserialize<Elastic.Clients.Elasticsearch.TermSuggester?>(ref reader, options);
				reader.Read();
				return new SuggestContainer(variant);
			}

			throw new JsonException();
		}

		public override void Write(Utf8JsonWriter writer, SuggestContainer value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			writer.WritePropertyName(value.Variant.SuggestContainerVariantName);
			switch (value.Variant)
			{
				case Elastic.Clients.Elasticsearch.CompletionSuggester variant:
					JsonSerializer.Serialize(writer, variant, options);
					break;
				case Elastic.Clients.Elasticsearch.PhraseSuggester variant:
					JsonSerializer.Serialize(writer, variant, options);
					break;
				case Elastic.Clients.Elasticsearch.TermSuggester variant:
					JsonSerializer.Serialize(writer, variant, options);
					break;
			}

			writer.WriteEndObject();
		}
	}

	public partial class SuggestContextQuery
	{
		[JsonInclude]
		[JsonPropertyName("boost")]
		public double? Boost { get; set; }

		[JsonInclude]
		[JsonPropertyName("context")]
		public Elastic.Clients.Elasticsearch.Context Context { get; set; }

		[JsonInclude]
		[JsonPropertyName("neighbours")]
		public Union<IEnumerable<string>?, IEnumerable<int>?>? Neighbours { get; set; }

		[JsonInclude]
		[JsonPropertyName("precision")]
		public Union<string?, int?>? Precision { get; set; }

		[JsonInclude]
		[JsonPropertyName("prefix")]
		public bool? Prefix { get; set; }
	}

	[JsonConverter(typeof(SuggestContextQueryDescriptorConverter))]
	public sealed partial class SuggestContextQueryDescriptor : DescriptorBase<SuggestContextQueryDescriptor>
	{
		internal double? _boost;
		internal Elastic.Clients.Elasticsearch.Context _context;
		internal Union<IEnumerable<string>?, IEnumerable<int>?>? _neighbours;
		internal Union<string?, int?>? _precision;
		internal bool? _prefix;
	}

	internal sealed class SuggestContextQueryDescriptorConverter : JsonConverter<SuggestContextQueryDescriptor>
	{
		public override SuggestContextQueryDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, SuggestContextQueryDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			if (value._boost.HasValue)
			{
				writer.WritePropertyName("boost");
				writer.WriteNumberValue(value._boost.Value);
			}

			writer.WritePropertyName("context");
			JsonSerializer.Serialize(writer, value._context, options);
			if (value._neighbours is not null)
			{
				writer.WritePropertyName("neighbours");
				JsonSerializer.Serialize(writer, value._neighbours, options);
			}

			if (value._precision is not null)
			{
				writer.WritePropertyName("precision");
				JsonSerializer.Serialize(writer, value._precision, options);
			}

			if (value._prefix.HasValue)
			{
				writer.WritePropertyName("prefix");
				writer.WriteBooleanValue(value._prefix.Value);
			}

			writer.WriteEndObject();
		}
	}

	public abstract partial class SuggesterBase
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("analyzer")]
		public string? Analyzer { get; set; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }
	}

	[JsonConverter(typeof(SuggesterBaseDescriptorConverter))]
	public sealed partial class SuggesterBaseDescriptor : DescriptorBase<SuggesterBaseDescriptor>
	{
		internal string _field;
		internal string? _analyzer;
		internal int? _size;
	}

	internal sealed class SuggesterBaseDescriptorConverter : JsonConverter<SuggesterBaseDescriptor>
	{
		public override SuggesterBaseDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, SuggesterBaseDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("field");
			JsonSerializer.Serialize(writer, value._field, options);
			if (!string.IsNullOrEmpty(value._analyzer))
			{
				writer.WritePropertyName("analyzer");
				writer.WriteStringValue(value._analyzer);
			}

			if (value._size.HasValue)
			{
				writer.WritePropertyName("size");
				writer.WriteNumberValue(value._size.Value);
			}

			writer.WriteEndObject();
		}
	}

	public partial class SuggestFuzziness
	{
		[JsonInclude]
		[JsonPropertyName("fuzziness")]
		public Elastic.Clients.Elasticsearch.Fuzziness Fuzziness { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_length")]
		public int MinLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("prefix_length")]
		public int PrefixLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("transpositions")]
		public bool Transpositions { get; set; }

		[JsonInclude]
		[JsonPropertyName("unicode_aware")]
		public bool UnicodeAware { get; set; }
	}

	[JsonConverter(typeof(SuggestFuzzinessDescriptorConverter))]
	public sealed partial class SuggestFuzzinessDescriptor : DescriptorBase<SuggestFuzzinessDescriptor>
	{
		internal Elastic.Clients.Elasticsearch.Fuzziness _fuzziness;
		internal int _minLength;
		internal int _prefixLength;
		internal bool _transpositions;
		internal bool _unicodeAware;
	}

	internal sealed class SuggestFuzzinessDescriptorConverter : JsonConverter<SuggestFuzzinessDescriptor>
	{
		public override SuggestFuzzinessDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, SuggestFuzzinessDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("fuzziness");
			JsonSerializer.Serialize(writer, value._fuzziness, options);
			writer.WritePropertyName("min_length");
			writer.WriteNumberValue(value._minLength);
			writer.WritePropertyName("prefix_length");
			writer.WriteNumberValue(value._prefixLength);
			writer.WritePropertyName("transpositions");
			writer.WriteBooleanValue(value._transpositions);
			writer.WritePropertyName("unicode_aware");
			writer.WriteBooleanValue(value._unicodeAware);
			writer.WriteEndObject();
		}
	}

	public partial class TermSuggester : SuggesterBase, ISuggestContainerVariant
	{
		[JsonIgnore]
		string ISuggestContainerVariant.SuggestContainerVariantName => "term";
		[JsonInclude]
		[JsonPropertyName("lowercase_terms")]
		public bool? LowercaseTerms { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_edits")]
		public int? MaxEdits { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_inspections")]
		public int? MaxInspections { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_term_freq")]
		public float? MaxTermFreq { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_doc_freq")]
		public float? MinDocFreq { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_word_length")]
		public int? MinWordLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("prefix_length")]
		public int? PrefixLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("sort")]
		public Elastic.Clients.Elasticsearch.SuggestSort? Sort { get; set; }

		[JsonInclude]
		[JsonPropertyName("string_distance")]
		public Elastic.Clients.Elasticsearch.StringDistance? StringDistance { get; set; }

		[JsonInclude]
		[JsonPropertyName("suggest_mode")]
		public Elastic.Clients.Elasticsearch.SuggestMode? SuggestMode { get; set; }

		[JsonInclude]
		[JsonPropertyName("text")]
		public string? Text { get; set; }
	}

	public partial class TermSuggestOption
	{
		[JsonInclude]
		[JsonPropertyName("text")]
		public string Text { get; init; }

		[JsonInclude]
		[JsonPropertyName("freq")]
		public long? Freq { get; init; }

		[JsonInclude]
		[JsonPropertyName("score")]
		public double Score { get; init; }
	}

	public partial class TotalHits
	{
		[JsonInclude]
		[JsonPropertyName("relation")]
		public Elastic.Clients.Elasticsearch.TotalHitsRelation Relation { get; init; }

		[JsonInclude]
		[JsonPropertyName("value")]
		public long Value { get; init; }
	}

	public partial class TranslogStats
	{
		[JsonInclude]
		[JsonPropertyName("earliest_last_modified_age")]
		public long EarliestLastModifiedAge { get; init; }

		[JsonInclude]
		[JsonPropertyName("operations")]
		public long Operations { get; init; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public string? Size { get; init; }

		[JsonInclude]
		[JsonPropertyName("size_in_bytes")]
		public long SizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("uncommitted_operations")]
		public int UncommittedOperations { get; init; }

		[JsonInclude]
		[JsonPropertyName("uncommitted_size")]
		public string? UncommittedSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("uncommitted_size_in_bytes")]
		public long UncommittedSizeInBytes { get; init; }
	}

	public partial class WarmerStats
	{
		[JsonInclude]
		[JsonPropertyName("current")]
		public long Current { get; init; }

		[JsonInclude]
		[JsonPropertyName("total")]
		public long Total { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time")]
		public string? TotalTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time_in_millis")]
		public long TotalTimeInMillis { get; init; }
	}

	public abstract partial class WriteResponseBase : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("_id")]
		public Elastic.Clients.Elasticsearch.Id Id { get; init; }

		[JsonInclude]
		[JsonPropertyName("_index")]
		public Elastic.Clients.Elasticsearch.IndexName Index { get; init; }

		[JsonInclude]
		[JsonPropertyName("_primary_term")]
		public long PrimaryTerm { get; init; }

		[JsonInclude]
		[JsonPropertyName("result")]
		public Elastic.Clients.Elasticsearch.Result Result { get; init; }

		[JsonInclude]
		[JsonPropertyName("_seq_no")]
		public long SequenceNumber { get; init; }

		[JsonInclude]
		[JsonPropertyName("_shards")]
		public Elastic.Clients.Elasticsearch.ShardStatistics Shards { get; init; }

		[JsonInclude]
		[JsonPropertyName("_type")]
		public string? Type { get; init; }

		[JsonInclude]
		[JsonPropertyName("_version")]
		public long Version { get; init; }

		[JsonInclude]
		[JsonPropertyName("forced_refresh")]
		public bool? ForcedRefresh { get; init; }
	}
}
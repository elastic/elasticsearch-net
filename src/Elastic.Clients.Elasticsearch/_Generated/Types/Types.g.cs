// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch
{
	public abstract partial class AcknowledgedResponseBase : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("acknowledged")]
		public bool Acknowledged { get; init; }
	}

	public partial class BulkStats
	{
		[JsonInclude]
		[JsonPropertyName("total_operations")]
		public object TotalOperations { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time")]
		public string? TotalTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time_in_millis")]
		public object TotalTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_size")]
		public Elastic.Clients.Elasticsearch.ByteSize? TotalSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_size_in_bytes")]
		public object TotalSizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("avg_time")]
		public string? AvgTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("avg_time_in_millis")]
		public object AvgTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("avg_size")]
		public Elastic.Clients.Elasticsearch.ByteSize? AvgSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("avg_size_in_bytes")]
		public object AvgSizeInBytes { get; init; }
	}

	public partial class CompletionStats
	{
		[JsonInclude]
		[JsonPropertyName("size_in_bytes")]
		public object SizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public Elastic.Clients.Elasticsearch.ByteSize? Size { get; init; }

		[JsonInclude]
		[JsonPropertyName("fields")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.FieldSizeUsage>? Fields { get; init; }
	}

	public abstract partial class DictionaryResponseBase<TKey, TValue> : ResponseBase
	{
	}

	public partial class DocStats
	{
		[JsonInclude]
		[JsonPropertyName("count")]
		public object Count { get; init; }

		[JsonInclude]
		[JsonPropertyName("deleted")]
		public object Deleted { get; init; }
	}

	public partial class ErrorCause
	{
		[JsonInclude]
		[JsonPropertyName("type")]
		public string Type { get; init; }

		[JsonInclude]
		[JsonPropertyName("reason")]
		public string Reason { get; init; }

		[JsonInclude]
		[JsonPropertyName("stack_trace")]
		public string? StackTrace { get; init; }

		[JsonInclude]
		[JsonPropertyName("caused_by")]
		public Elastic.Clients.Elasticsearch.ErrorCause? CausedBy { get; init; }

		[JsonInclude]
		[JsonPropertyName("root_cause")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.ErrorCause>? RootCause { get; init; }

		[JsonInclude]
		[JsonPropertyName("suppressed")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.ErrorCause>? Suppressed { get; init; }
	}

	public partial class FieldAndFormat
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonInclude]
		[JsonPropertyName("include_unmapped")]
		public bool? IncludeUnmapped { get; set; }
	}

	[JsonConverter(typeof(FieldAndFormatDescriptorConverter))]
	public partial class FieldAndFormatDescriptor : DescriptorBase<FieldAndFormatDescriptor>
	{
		internal string _field;
		internal string? _format;
		internal bool? _includeUnmapped;
		public FieldAndFormatDescriptor Field(string field) => Assign(field, (a, v) => a._field = v);
		public FieldAndFormatDescriptor Format(string? format) => Assign(format, (a, v) => a._format = v);
		public FieldAndFormatDescriptor IncludeUnmapped(bool? includeUnmapped = true) => Assign(includeUnmapped, (a, v) => a._includeUnmapped = v);
	}

	internal sealed class FieldAndFormatDescriptorConverter : JsonConverter<FieldAndFormatDescriptor>
	{
		public override FieldAndFormatDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, FieldAndFormatDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("field");
			JsonSerializer.Serialize(writer, value._field, options);
			if (!string.IsNullOrEmpty(value._format))
			{
				writer.WritePropertyName("format");
				writer.WriteStringValue(value._format);
			}

			if (value._includeUnmapped.HasValue)
			{
				writer.WritePropertyName("include_unmapped");
				writer.WriteBooleanValue(value._includeUnmapped.Value);
			}

			writer.WriteEndObject();
		}
	}

	public partial class FieldCollapse
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("inner_hits")]
		public IEnumerable<Elastic.Clients.Elasticsearch.InnerHits>? InnerHits { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_concurrent_group_searches")]
		public int? MaxConcurrentGroupSearches { get; set; }
	}

	[JsonConverter(typeof(FieldCollapseDescriptorConverter))]
	public partial class FieldCollapseDescriptor : DescriptorBase<FieldCollapseDescriptor>
	{
		internal string _field;
		internal IEnumerable<Elastic.Clients.Elasticsearch.InnerHits>? _innerHits;
		internal int? _maxConcurrentGroupSearches;
		public FieldCollapseDescriptor Field(string field) => Assign(field, (a, v) => a._field = v);
		public FieldCollapseDescriptor InnerHits(IEnumerable<Elastic.Clients.Elasticsearch.InnerHits>? innerHits) => Assign(innerHits, (a, v) => a._innerHits = v);
		public FieldCollapseDescriptor MaxConcurrentGroupSearches(int? maxConcurrentGroupSearches) => Assign(maxConcurrentGroupSearches, (a, v) => a._maxConcurrentGroupSearches = v);
	}

	internal sealed class FieldCollapseDescriptorConverter : JsonConverter<FieldCollapseDescriptor>
	{
		public override FieldCollapseDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, FieldCollapseDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("field");
			JsonSerializer.Serialize(writer, value._field, options);
			if (value._innerHits is not null)
			{
				writer.WritePropertyName("inner_hits");
				JsonSerializer.Serialize(writer, value._innerHits, options);
			}

			if (value._maxConcurrentGroupSearches.HasValue)
			{
				writer.WritePropertyName("max_concurrent_group_searches");
				writer.WriteNumberValue(value._maxConcurrentGroupSearches.Value);
			}

			writer.WriteEndObject();
		}
	}

	public partial class FielddataStats
	{
		[JsonInclude]
		[JsonPropertyName("evictions")]
		public object? Evictions { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_size")]
		public Elastic.Clients.Elasticsearch.ByteSize? MemorySize { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_size_in_bytes")]
		public object MemorySizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("fields")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.FieldMemoryUsage>? Fields { get; init; }
	}

	public partial class FieldMemoryUsage
	{
		[JsonInclude]
		[JsonPropertyName("memory_size")]
		public Elastic.Clients.Elasticsearch.ByteSize? MemorySize { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_size_in_bytes")]
		public object MemorySizeInBytes { get; init; }
	}

	public partial class FieldSizeUsage
	{
		[JsonInclude]
		[JsonPropertyName("size")]
		public Elastic.Clients.Elasticsearch.ByteSize? Size { get; init; }

		[JsonInclude]
		[JsonPropertyName("size_in_bytes")]
		public object SizeInBytes { get; init; }
	}

	public partial class FlushStats
	{
		[JsonInclude]
		[JsonPropertyName("periodic")]
		public object Periodic { get; init; }

		[JsonInclude]
		[JsonPropertyName("total")]
		public object Total { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time")]
		public string? TotalTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time_in_millis")]
		public object TotalTimeInMillis { get; init; }
	}

	public partial class GeoDistanceSort
	{
		[JsonInclude]
		[JsonPropertyName("mode")]
		public Elastic.Clients.Elasticsearch.SortMode? Mode { get; init; }

		[JsonInclude]
		[JsonPropertyName("distance_type")]
		public Elastic.Clients.Elasticsearch.GeoDistanceType? DistanceType { get; init; }

		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.SortOrder? Order { get; init; }

		[JsonInclude]
		[JsonPropertyName("unit")]
		public Elastic.Clients.Elasticsearch.DistanceUnit? Unit { get; init; }
	}

	public partial class GetStats
	{
		[JsonInclude]
		[JsonPropertyName("current")]
		public object Current { get; init; }

		[JsonInclude]
		[JsonPropertyName("exists_time")]
		public string? ExistsTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("exists_time_in_millis")]
		public object ExistsTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("exists_total")]
		public object ExistsTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("missing_time")]
		public string? MissingTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("missing_time_in_millis")]
		public object MissingTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("missing_total")]
		public object MissingTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("time")]
		public string? Time { get; init; }

		[JsonInclude]
		[JsonPropertyName("time_in_millis")]
		public object TimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("total")]
		public object Total { get; init; }
	}

	public partial class Highlight
	{
		[JsonInclude]
		[JsonPropertyName("fields")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.HighlightField> Fields { get; set; }

		[JsonInclude]
		[JsonPropertyName("type")]
		public Elastic.Clients.Elasticsearch.HighlighterType? Type { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_chars")]
		public string? BoundaryChars { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_max_scan")]
		public int? BoundaryMaxScan { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_scanner")]
		public Elastic.Clients.Elasticsearch.BoundaryScanner? BoundaryScanner { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_scanner_locale")]
		public string? BoundaryScannerLocale { get; set; }

		[JsonInclude]
		[JsonPropertyName("encoder")]
		public Elastic.Clients.Elasticsearch.HighlighterEncoder? Encoder { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragmenter")]
		public Elastic.Clients.Elasticsearch.HighlighterFragmenter? Fragmenter { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragment_offset")]
		public int? FragmentOffset { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragment_size")]
		public int? FragmentSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_fragment_length")]
		public int? MaxFragmentLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("no_match_size")]
		public int? NoMatchSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("number_of_fragments")]
		public int? NumberOfFragments { get; set; }

		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.HighlighterOrder? Order { get; set; }

		[JsonInclude]
		[JsonPropertyName("post_tags")]
		public IEnumerable<string>? PostTags { get; set; }

		[JsonInclude]
		[JsonPropertyName("pre_tags")]
		public IEnumerable<string>? PreTags { get; set; }

		[JsonInclude]
		[JsonPropertyName("require_field_match")]
		public bool? RequireFieldMatch { get; set; }

		[JsonInclude]
		[JsonPropertyName("tags_schema")]
		public Elastic.Clients.Elasticsearch.HighlighterTagsSchema? TagsSchema { get; set; }

		[JsonInclude]
		[JsonPropertyName("highlight_query")]
		public Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? HighlightQuery { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_analyzed_offset")]
		public Union<string?, int?>? MaxAnalyzedOffset { get; set; }
	}

	[JsonConverter(typeof(HighlightDescriptorConverter))]
	public partial class HighlightDescriptor : DescriptorBase<HighlightDescriptor>
	{
		internal Dictionary<string, Elastic.Clients.Elasticsearch.HighlightField> _fields;
		internal Elastic.Clients.Elasticsearch.HighlighterType? _type;
		internal string? _boundaryChars;
		internal int? _boundaryMaxScan;
		internal Elastic.Clients.Elasticsearch.BoundaryScanner? _boundaryScanner;
		internal string? _boundaryScannerLocale;
		internal Elastic.Clients.Elasticsearch.HighlighterEncoder? _encoder;
		internal Elastic.Clients.Elasticsearch.HighlighterFragmenter? _fragmenter;
		internal int? _fragmentOffset;
		internal int? _fragmentSize;
		internal int? _maxFragmentLength;
		internal int? _noMatchSize;
		internal int? _numberOfFragments;
		internal Elastic.Clients.Elasticsearch.HighlighterOrder? _order;
		internal IEnumerable<string>? _postTags;
		internal IEnumerable<string>? _preTags;
		internal bool? _requireFieldMatch;
		internal Elastic.Clients.Elasticsearch.HighlighterTagsSchema? _tagsSchema;
		internal Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? _highlightQuery;
		internal Union<string?, int?>? _maxAnalyzedOffset;
		public HighlightDescriptor Fields(Func<FluentDictionary<string, Elastic.Clients.Elasticsearch.HighlightField>, FluentDictionary<string, Elastic.Clients.Elasticsearch.HighlightField>> selector) => Assign(selector, (a, v) => a._fields = v?.Invoke(new FluentDictionary<string, Elastic.Clients.Elasticsearch.HighlightField>()));
		public HighlightDescriptor Type(Elastic.Clients.Elasticsearch.HighlighterType? type) => Assign(type, (a, v) => a._type = v);
		public HighlightDescriptor BoundaryChars(string? boundaryChars) => Assign(boundaryChars, (a, v) => a._boundaryChars = v);
		public HighlightDescriptor BoundaryMaxScan(int? boundaryMaxScan) => Assign(boundaryMaxScan, (a, v) => a._boundaryMaxScan = v);
		public HighlightDescriptor BoundaryScanner(Elastic.Clients.Elasticsearch.BoundaryScanner? boundaryScanner) => Assign(boundaryScanner, (a, v) => a._boundaryScanner = v);
		public HighlightDescriptor BoundaryScannerLocale(string? boundaryScannerLocale) => Assign(boundaryScannerLocale, (a, v) => a._boundaryScannerLocale = v);
		public HighlightDescriptor Encoder(Elastic.Clients.Elasticsearch.HighlighterEncoder? encoder) => Assign(encoder, (a, v) => a._encoder = v);
		public HighlightDescriptor Fragmenter(Elastic.Clients.Elasticsearch.HighlighterFragmenter? fragmenter) => Assign(fragmenter, (a, v) => a._fragmenter = v);
		public HighlightDescriptor FragmentOffset(int? fragmentOffset) => Assign(fragmentOffset, (a, v) => a._fragmentOffset = v);
		public HighlightDescriptor FragmentSize(int? fragmentSize) => Assign(fragmentSize, (a, v) => a._fragmentSize = v);
		public HighlightDescriptor MaxFragmentLength(int? maxFragmentLength) => Assign(maxFragmentLength, (a, v) => a._maxFragmentLength = v);
		public HighlightDescriptor NoMatchSize(int? noMatchSize) => Assign(noMatchSize, (a, v) => a._noMatchSize = v);
		public HighlightDescriptor NumberOfFragments(int? numberOfFragments) => Assign(numberOfFragments, (a, v) => a._numberOfFragments = v);
		public HighlightDescriptor Order(Elastic.Clients.Elasticsearch.HighlighterOrder? order) => Assign(order, (a, v) => a._order = v);
		public HighlightDescriptor PostTags(IEnumerable<string>? postTags) => Assign(postTags, (a, v) => a._postTags = v);
		public HighlightDescriptor PreTags(IEnumerable<string>? preTags) => Assign(preTags, (a, v) => a._preTags = v);
		public HighlightDescriptor RequireFieldMatch(bool? requireFieldMatch = true) => Assign(requireFieldMatch, (a, v) => a._requireFieldMatch = v);
		public HighlightDescriptor TagsSchema(Elastic.Clients.Elasticsearch.HighlighterTagsSchema? tagsSchema) => Assign(tagsSchema, (a, v) => a._tagsSchema = v);
		public HighlightDescriptor HighlightQuery(Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? highlightQuery) => Assign(highlightQuery, (a, v) => a._highlightQuery = v);
		public HighlightDescriptor MaxAnalyzedOffset(Union<string?, int?>? maxAnalyzedOffset) => Assign(maxAnalyzedOffset, (a, v) => a._maxAnalyzedOffset = v);
	}

	internal sealed class HighlightDescriptorConverter : JsonConverter<HighlightDescriptor>
	{
		public override HighlightDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, HighlightDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("fields");
			JsonSerializer.Serialize(writer, value._fields, options);
			if (value._type is not null)
			{
				writer.WritePropertyName("type");
				JsonSerializer.Serialize(writer, value._type, options);
			}

			if (!string.IsNullOrEmpty(value._boundaryChars))
			{
				writer.WritePropertyName("boundary_chars");
				writer.WriteStringValue(value._boundaryChars);
			}

			if (value._boundaryMaxScan.HasValue)
			{
				writer.WritePropertyName("boundary_max_scan");
				writer.WriteNumberValue(value._boundaryMaxScan.Value);
			}

			if (value._boundaryScanner is not null)
			{
				writer.WritePropertyName("boundary_scanner");
				JsonSerializer.Serialize(writer, value._boundaryScanner, options);
			}

			if (!string.IsNullOrEmpty(value._boundaryScannerLocale))
			{
				writer.WritePropertyName("boundary_scanner_locale");
				writer.WriteStringValue(value._boundaryScannerLocale);
			}

			if (value._encoder is not null)
			{
				writer.WritePropertyName("encoder");
				JsonSerializer.Serialize(writer, value._encoder, options);
			}

			if (value._fragmenter is not null)
			{
				writer.WritePropertyName("fragmenter");
				JsonSerializer.Serialize(writer, value._fragmenter, options);
			}

			if (value._fragmentOffset.HasValue)
			{
				writer.WritePropertyName("fragment_offset");
				writer.WriteNumberValue(value._fragmentOffset.Value);
			}

			if (value._fragmentSize.HasValue)
			{
				writer.WritePropertyName("fragment_size");
				writer.WriteNumberValue(value._fragmentSize.Value);
			}

			if (value._maxFragmentLength.HasValue)
			{
				writer.WritePropertyName("max_fragment_length");
				writer.WriteNumberValue(value._maxFragmentLength.Value);
			}

			if (value._noMatchSize.HasValue)
			{
				writer.WritePropertyName("no_match_size");
				writer.WriteNumberValue(value._noMatchSize.Value);
			}

			if (value._numberOfFragments.HasValue)
			{
				writer.WritePropertyName("number_of_fragments");
				writer.WriteNumberValue(value._numberOfFragments.Value);
			}

			if (value._order is not null)
			{
				writer.WritePropertyName("order");
				JsonSerializer.Serialize(writer, value._order, options);
			}

			if (value._postTags is not null)
			{
				writer.WritePropertyName("post_tags");
				JsonSerializer.Serialize(writer, value._postTags, options);
			}

			if (value._preTags is not null)
			{
				writer.WritePropertyName("pre_tags");
				JsonSerializer.Serialize(writer, value._preTags, options);
			}

			if (value._requireFieldMatch.HasValue)
			{
				writer.WritePropertyName("require_field_match");
				writer.WriteBooleanValue(value._requireFieldMatch.Value);
			}

			if (value._tagsSchema is not null)
			{
				writer.WritePropertyName("tags_schema");
				JsonSerializer.Serialize(writer, value._tagsSchema, options);
			}

			if (value._highlightQuery is not null)
			{
				writer.WritePropertyName("highlight_query");
				JsonSerializer.Serialize(writer, value._highlightQuery, options);
			}

			if (value._maxAnalyzedOffset is not null)
			{
				writer.WritePropertyName("max_analyzed_offset");
				JsonSerializer.Serialize(writer, value._maxAnalyzedOffset, options);
			}

			writer.WriteEndObject();
		}
	}

	public partial class HighlightField
	{
		[JsonInclude]
		[JsonPropertyName("boundary_chars")]
		public string? BoundaryChars { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_max_scan")]
		public int? BoundaryMaxScan { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_scanner")]
		public Elastic.Clients.Elasticsearch.BoundaryScanner? BoundaryScanner { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_scanner_locale")]
		public string? BoundaryScannerLocale { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("force_source")]
		public bool? ForceSource { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragmenter")]
		public Elastic.Clients.Elasticsearch.HighlighterFragmenter? Fragmenter { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragment_offset")]
		public int? FragmentOffset { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragment_size")]
		public int? FragmentSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("highlight_query")]
		public Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? HighlightQuery { get; set; }

		[JsonInclude]
		[JsonPropertyName("matched_fields")]
		public Elastic.Clients.Elasticsearch.Fields? MatchedFields { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_fragment_length")]
		public int? MaxFragmentLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("no_match_size")]
		public int? NoMatchSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("number_of_fragments")]
		public int? NumberOfFragments { get; set; }

		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.HighlighterOrder? Order { get; set; }

		[JsonInclude]
		[JsonPropertyName("phrase_limit")]
		public int? PhraseLimit { get; set; }

		[JsonInclude]
		[JsonPropertyName("post_tags")]
		public IEnumerable<string>? PostTags { get; set; }

		[JsonInclude]
		[JsonPropertyName("pre_tags")]
		public IEnumerable<string>? PreTags { get; set; }

		[JsonInclude]
		[JsonPropertyName("require_field_match")]
		public bool? RequireFieldMatch { get; set; }

		[JsonInclude]
		[JsonPropertyName("tags_schema")]
		public Elastic.Clients.Elasticsearch.HighlighterTagsSchema? TagsSchema { get; set; }

		[JsonInclude]
		[JsonPropertyName("type")]
		public Union<Elastic.Clients.Elasticsearch.HighlighterType?, string?>? Type { get; set; }
	}

	[JsonConverter(typeof(HighlightFieldDescriptorConverter))]
	public partial class HighlightFieldDescriptor : DescriptorBase<HighlightFieldDescriptor>
	{
		internal string? _boundaryChars;
		internal int? _boundaryMaxScan;
		internal Elastic.Clients.Elasticsearch.BoundaryScanner? _boundaryScanner;
		internal string? _boundaryScannerLocale;
		internal string? _field;
		internal bool? _forceSource;
		internal Elastic.Clients.Elasticsearch.HighlighterFragmenter? _fragmenter;
		internal int? _fragmentOffset;
		internal int? _fragmentSize;
		internal Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? _highlightQuery;
		internal Elastic.Clients.Elasticsearch.Fields? _matchedFields;
		internal int? _maxFragmentLength;
		internal int? _noMatchSize;
		internal int? _numberOfFragments;
		internal Elastic.Clients.Elasticsearch.HighlighterOrder? _order;
		internal int? _phraseLimit;
		internal IEnumerable<string>? _postTags;
		internal IEnumerable<string>? _preTags;
		internal bool? _requireFieldMatch;
		internal Elastic.Clients.Elasticsearch.HighlighterTagsSchema? _tagsSchema;
		internal Union<Elastic.Clients.Elasticsearch.HighlighterType?, string?>? _type;
		public HighlightFieldDescriptor BoundaryChars(string? boundaryChars) => Assign(boundaryChars, (a, v) => a._boundaryChars = v);
		public HighlightFieldDescriptor BoundaryMaxScan(int? boundaryMaxScan) => Assign(boundaryMaxScan, (a, v) => a._boundaryMaxScan = v);
		public HighlightFieldDescriptor BoundaryScanner(Elastic.Clients.Elasticsearch.BoundaryScanner? boundaryScanner) => Assign(boundaryScanner, (a, v) => a._boundaryScanner = v);
		public HighlightFieldDescriptor BoundaryScannerLocale(string? boundaryScannerLocale) => Assign(boundaryScannerLocale, (a, v) => a._boundaryScannerLocale = v);
		public HighlightFieldDescriptor Field(string? field) => Assign(field, (a, v) => a._field = v);
		public HighlightFieldDescriptor ForceSource(bool? forceSource = true) => Assign(forceSource, (a, v) => a._forceSource = v);
		public HighlightFieldDescriptor Fragmenter(Elastic.Clients.Elasticsearch.HighlighterFragmenter? fragmenter) => Assign(fragmenter, (a, v) => a._fragmenter = v);
		public HighlightFieldDescriptor FragmentOffset(int? fragmentOffset) => Assign(fragmentOffset, (a, v) => a._fragmentOffset = v);
		public HighlightFieldDescriptor FragmentSize(int? fragmentSize) => Assign(fragmentSize, (a, v) => a._fragmentSize = v);
		public HighlightFieldDescriptor HighlightQuery(Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? highlightQuery) => Assign(highlightQuery, (a, v) => a._highlightQuery = v);
		public HighlightFieldDescriptor MatchedFields(Elastic.Clients.Elasticsearch.Fields? matchedFields) => Assign(matchedFields, (a, v) => a._matchedFields = v);
		public HighlightFieldDescriptor MaxFragmentLength(int? maxFragmentLength) => Assign(maxFragmentLength, (a, v) => a._maxFragmentLength = v);
		public HighlightFieldDescriptor NoMatchSize(int? noMatchSize) => Assign(noMatchSize, (a, v) => a._noMatchSize = v);
		public HighlightFieldDescriptor NumberOfFragments(int? numberOfFragments) => Assign(numberOfFragments, (a, v) => a._numberOfFragments = v);
		public HighlightFieldDescriptor Order(Elastic.Clients.Elasticsearch.HighlighterOrder? order) => Assign(order, (a, v) => a._order = v);
		public HighlightFieldDescriptor PhraseLimit(int? phraseLimit) => Assign(phraseLimit, (a, v) => a._phraseLimit = v);
		public HighlightFieldDescriptor PostTags(IEnumerable<string>? postTags) => Assign(postTags, (a, v) => a._postTags = v);
		public HighlightFieldDescriptor PreTags(IEnumerable<string>? preTags) => Assign(preTags, (a, v) => a._preTags = v);
		public HighlightFieldDescriptor RequireFieldMatch(bool? requireFieldMatch = true) => Assign(requireFieldMatch, (a, v) => a._requireFieldMatch = v);
		public HighlightFieldDescriptor TagsSchema(Elastic.Clients.Elasticsearch.HighlighterTagsSchema? tagsSchema) => Assign(tagsSchema, (a, v) => a._tagsSchema = v);
		public HighlightFieldDescriptor Type(Union<Elastic.Clients.Elasticsearch.HighlighterType?, string?>? type) => Assign(type, (a, v) => a._type = v);
	}

	internal sealed class HighlightFieldDescriptorConverter : JsonConverter<HighlightFieldDescriptor>
	{
		public override HighlightFieldDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, HighlightFieldDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			if (!string.IsNullOrEmpty(value._boundaryChars))
			{
				writer.WritePropertyName("boundary_chars");
				writer.WriteStringValue(value._boundaryChars);
			}

			if (value._boundaryMaxScan.HasValue)
			{
				writer.WritePropertyName("boundary_max_scan");
				writer.WriteNumberValue(value._boundaryMaxScan.Value);
			}

			if (value._boundaryScanner is not null)
			{
				writer.WritePropertyName("boundary_scanner");
				JsonSerializer.Serialize(writer, value._boundaryScanner, options);
			}

			if (!string.IsNullOrEmpty(value._boundaryScannerLocale))
			{
				writer.WritePropertyName("boundary_scanner_locale");
				writer.WriteStringValue(value._boundaryScannerLocale);
			}

			if (value._field is not null)
			{
				writer.WritePropertyName("field");
				JsonSerializer.Serialize(writer, value._field, options);
			}

			if (value._forceSource.HasValue)
			{
				writer.WritePropertyName("force_source");
				writer.WriteBooleanValue(value._forceSource.Value);
			}

			if (value._fragmenter is not null)
			{
				writer.WritePropertyName("fragmenter");
				JsonSerializer.Serialize(writer, value._fragmenter, options);
			}

			if (value._fragmentOffset.HasValue)
			{
				writer.WritePropertyName("fragment_offset");
				writer.WriteNumberValue(value._fragmentOffset.Value);
			}

			if (value._fragmentSize.HasValue)
			{
				writer.WritePropertyName("fragment_size");
				writer.WriteNumberValue(value._fragmentSize.Value);
			}

			if (value._highlightQuery is not null)
			{
				writer.WritePropertyName("highlight_query");
				JsonSerializer.Serialize(writer, value._highlightQuery, options);
			}

			if (value._matchedFields is not null)
			{
				writer.WritePropertyName("matched_fields");
				JsonSerializer.Serialize(writer, value._matchedFields, options);
			}

			if (value._maxFragmentLength.HasValue)
			{
				writer.WritePropertyName("max_fragment_length");
				writer.WriteNumberValue(value._maxFragmentLength.Value);
			}

			if (value._noMatchSize.HasValue)
			{
				writer.WritePropertyName("no_match_size");
				writer.WriteNumberValue(value._noMatchSize.Value);
			}

			if (value._numberOfFragments.HasValue)
			{
				writer.WritePropertyName("number_of_fragments");
				writer.WriteNumberValue(value._numberOfFragments.Value);
			}

			if (value._order is not null)
			{
				writer.WritePropertyName("order");
				JsonSerializer.Serialize(writer, value._order, options);
			}

			if (value._phraseLimit.HasValue)
			{
				writer.WritePropertyName("phrase_limit");
				writer.WriteNumberValue(value._phraseLimit.Value);
			}

			if (value._postTags is not null)
			{
				writer.WritePropertyName("post_tags");
				JsonSerializer.Serialize(writer, value._postTags, options);
			}

			if (value._preTags is not null)
			{
				writer.WritePropertyName("pre_tags");
				JsonSerializer.Serialize(writer, value._preTags, options);
			}

			if (value._requireFieldMatch.HasValue)
			{
				writer.WritePropertyName("require_field_match");
				writer.WriteBooleanValue(value._requireFieldMatch.Value);
			}

			if (value._tagsSchema is not null)
			{
				writer.WritePropertyName("tags_schema");
				JsonSerializer.Serialize(writer, value._tagsSchema, options);
			}

			if (value._type is not null)
			{
				writer.WritePropertyName("type");
				JsonSerializer.Serialize(writer, value._type, options);
			}

			writer.WriteEndObject();
		}
	}

	public partial class IndexedScript : ScriptBase
	{
		[JsonInclude]
		[JsonPropertyName("id")]
		public string Id { get; init; }
	}

	public partial class IndexingStats
	{
		[JsonInclude]
		[JsonPropertyName("index_current")]
		public object IndexCurrent { get; init; }

		[JsonInclude]
		[JsonPropertyName("delete_current")]
		public object DeleteCurrent { get; init; }

		[JsonInclude]
		[JsonPropertyName("delete_time")]
		public string? DeleteTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("delete_time_in_millis")]
		public object DeleteTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("delete_total")]
		public object DeleteTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("is_throttled")]
		public bool IsThrottled { get; init; }

		[JsonInclude]
		[JsonPropertyName("noop_update_total")]
		public object NoopUpdateTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("throttle_time")]
		public string? ThrottleTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("throttle_time_in_millis")]
		public object ThrottleTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("index_time")]
		public string? IndexTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("index_time_in_millis")]
		public object IndexTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("index_total")]
		public object IndexTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("index_failed")]
		public object IndexFailed { get; init; }

		[JsonInclude]
		[JsonPropertyName("types")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.IndexingStats>? Types { get; init; }
	}

	public abstract partial class IndicesResponseBase : AcknowledgedResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("_shards")]
		public Elastic.Clients.Elasticsearch.ShardStatistics? Shards { get; init; }
	}

	public partial class InlineScript : ScriptBase
	{
		[JsonInclude]
		[JsonPropertyName("source")]
		public string Source { get; set; }
	}

	public partial class InnerHits
	{
		[JsonInclude]
		[JsonPropertyName("name")]
		public Elastic.Clients.Elasticsearch.Name? Name { get; set; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonInclude]
		[JsonPropertyName("from")]
		public int? From { get; set; }

		[JsonInclude]
		[JsonPropertyName("collapse")]
		public Elastic.Clients.Elasticsearch.FieldCollapse? Collapse { get; set; }

		[JsonInclude]
		[JsonPropertyName("docvalue_fields")]
		public IEnumerable<Elastic.Clients.Elasticsearch.FieldAndFormat>? DocvalueFields { get; set; }

		[JsonInclude]
		[JsonPropertyName("explain")]
		public bool? Explain { get; set; }

		[JsonInclude]
		[JsonPropertyName("highlight")]
		public Elastic.Clients.Elasticsearch.Highlight? Highlight { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_unmapped")]
		public bool? IgnoreUnmapped { get; set; }

		[JsonInclude]
		[JsonPropertyName("script_fields")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.ScriptField>? ScriptFields { get; set; }

		[JsonInclude]
		[JsonPropertyName("seq_no_primary_term")]
		public bool? SeqNoPrimaryTerm { get; set; }

		[JsonInclude]
		[JsonPropertyName("fields")]
		public Elastic.Clients.Elasticsearch.Fields? Fields { get; set; }

		[JsonInclude]
		[JsonPropertyName("sort")]
		public Elastic.Clients.Elasticsearch.Sort? Sort { get; set; }

		[JsonInclude]
		[JsonPropertyName("_source")]
		public Union<bool?, Elastic.Clients.Elasticsearch.SourceFilter?>? Source { get; set; }

		[JsonInclude]
		[JsonPropertyName("stored_field")]
		public Elastic.Clients.Elasticsearch.Fields? StoredField { get; set; }

		[JsonInclude]
		[JsonPropertyName("track_scores")]
		public bool? TrackScores { get; set; }

		[JsonInclude]
		[JsonPropertyName("version")]
		public bool? Version { get; set; }
	}

	[JsonConverter(typeof(InnerHitsDescriptorConverter))]
	public partial class InnerHitsDescriptor : DescriptorBase<InnerHitsDescriptor>
	{
		internal Elastic.Clients.Elasticsearch.Name? _name;
		internal int? _size;
		internal int? _from;
		internal Elastic.Clients.Elasticsearch.FieldCollapse? _collapse;
		internal IEnumerable<Elastic.Clients.Elasticsearch.FieldAndFormat>? _docvalueFields;
		internal bool? _explain;
		internal Elastic.Clients.Elasticsearch.Highlight? _highlight;
		internal bool? _ignoreUnmapped;
		internal Dictionary<string, Elastic.Clients.Elasticsearch.ScriptField>? _scriptFields;
		internal bool? _seqNoPrimaryTerm;
		internal Elastic.Clients.Elasticsearch.Fields? _fields;
		internal Elastic.Clients.Elasticsearch.Sort? _sort;
		internal Union<bool?, Elastic.Clients.Elasticsearch.SourceFilter?>? _source;
		internal Elastic.Clients.Elasticsearch.Fields? _storedField;
		internal bool? _trackScores;
		internal bool? _version;
		public InnerHitsDescriptor Name(Elastic.Clients.Elasticsearch.Name? name) => Assign(name, (a, v) => a._name = v);
		public InnerHitsDescriptor Size(int? size) => Assign(size, (a, v) => a._size = v);
		public InnerHitsDescriptor From(int? from) => Assign(from, (a, v) => a._from = v);
		public InnerHitsDescriptor Collapse(Elastic.Clients.Elasticsearch.FieldCollapse? collapse) => Assign(collapse, (a, v) => a._collapse = v);
		public InnerHitsDescriptor DocvalueFields(IEnumerable<Elastic.Clients.Elasticsearch.FieldAndFormat>? docvalueFields) => Assign(docvalueFields, (a, v) => a._docvalueFields = v);
		public InnerHitsDescriptor Explain(bool? explain = true) => Assign(explain, (a, v) => a._explain = v);
		public InnerHitsDescriptor Highlight(Elastic.Clients.Elasticsearch.Highlight? highlight) => Assign(highlight, (a, v) => a._highlight = v);
		public InnerHitsDescriptor IgnoreUnmapped(bool? ignoreUnmapped = true) => Assign(ignoreUnmapped, (a, v) => a._ignoreUnmapped = v);
		public InnerHitsDescriptor ScriptFields(Func<FluentDictionary<string?, Elastic.Clients.Elasticsearch.ScriptField?>, FluentDictionary<string?, Elastic.Clients.Elasticsearch.ScriptField?>> selector) => Assign(selector, (a, v) => a._scriptFields = v?.Invoke(new FluentDictionary<string?, Elastic.Clients.Elasticsearch.ScriptField?>()));
		public InnerHitsDescriptor SeqNoPrimaryTerm(bool? seqNoPrimaryTerm = true) => Assign(seqNoPrimaryTerm, (a, v) => a._seqNoPrimaryTerm = v);
		public InnerHitsDescriptor Fields(Elastic.Clients.Elasticsearch.Fields? fields) => Assign(fields, (a, v) => a._fields = v);
		public InnerHitsDescriptor Sort(Elastic.Clients.Elasticsearch.Sort? sort) => Assign(sort, (a, v) => a._sort = v);
		public InnerHitsDescriptor Source(Union<bool?, Elastic.Clients.Elasticsearch.SourceFilter?>? source) => Assign(source, (a, v) => a._source = v);
		public InnerHitsDescriptor StoredField(Elastic.Clients.Elasticsearch.Fields? storedField) => Assign(storedField, (a, v) => a._storedField = v);
		public InnerHitsDescriptor TrackScores(bool? trackScores = true) => Assign(trackScores, (a, v) => a._trackScores = v);
		public InnerHitsDescriptor Version(bool? version = true) => Assign(version, (a, v) => a._version = v);
	}

	internal sealed class InnerHitsDescriptorConverter : JsonConverter<InnerHitsDescriptor>
	{
		public override InnerHitsDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, InnerHitsDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			if (value._name is not null)
			{
				writer.WritePropertyName("name");
				JsonSerializer.Serialize(writer, value._name, options);
			}

			if (value._size.HasValue)
			{
				writer.WritePropertyName("size");
				writer.WriteNumberValue(value._size.Value);
			}

			if (value._from.HasValue)
			{
				writer.WritePropertyName("from");
				writer.WriteNumberValue(value._from.Value);
			}

			if (value._collapse is not null)
			{
				writer.WritePropertyName("collapse");
				JsonSerializer.Serialize(writer, value._collapse, options);
			}

			if (value._docvalueFields is not null)
			{
				writer.WritePropertyName("docvalue_fields");
				JsonSerializer.Serialize(writer, value._docvalueFields, options);
			}

			if (value._explain.HasValue)
			{
				writer.WritePropertyName("explain");
				writer.WriteBooleanValue(value._explain.Value);
			}

			if (value._highlight is not null)
			{
				writer.WritePropertyName("highlight");
				JsonSerializer.Serialize(writer, value._highlight, options);
			}

			if (value._ignoreUnmapped.HasValue)
			{
				writer.WritePropertyName("ignore_unmapped");
				writer.WriteBooleanValue(value._ignoreUnmapped.Value);
			}

			if (value._scriptFields is not null)
			{
				writer.WritePropertyName("script_fields");
				JsonSerializer.Serialize(writer, value._scriptFields, options);
			}

			if (value._seqNoPrimaryTerm.HasValue)
			{
				writer.WritePropertyName("seq_no_primary_term");
				writer.WriteBooleanValue(value._seqNoPrimaryTerm.Value);
			}

			if (value._fields is not null)
			{
				writer.WritePropertyName("fields");
				JsonSerializer.Serialize(writer, value._fields, options);
			}

			if (value._sort is not null)
			{
				writer.WritePropertyName("sort");
				JsonSerializer.Serialize(writer, value._sort, options);
			}

			if (value._source is not null)
			{
				writer.WritePropertyName("_source");
				JsonSerializer.Serialize(writer, value._source, options);
			}

			if (value._storedField is not null)
			{
				writer.WritePropertyName("stored_field");
				JsonSerializer.Serialize(writer, value._storedField, options);
			}

			if (value._trackScores.HasValue)
			{
				writer.WritePropertyName("track_scores");
				writer.WriteBooleanValue(value._trackScores.Value);
			}

			if (value._version.HasValue)
			{
				writer.WritePropertyName("version");
				writer.WriteBooleanValue(value._version.Value);
			}

			writer.WriteEndObject();
		}
	}

	public partial class LatLon
	{
		[JsonInclude]
		[JsonPropertyName("lat")]
		public double Lat { get; set; }

		[JsonInclude]
		[JsonPropertyName("lon")]
		public double Lon { get; set; }
	}

	public partial class MergesStats
	{
		[JsonInclude]
		[JsonPropertyName("current")]
		public object Current { get; init; }

		[JsonInclude]
		[JsonPropertyName("current_docs")]
		public object CurrentDocs { get; init; }

		[JsonInclude]
		[JsonPropertyName("current_size")]
		public string? CurrentSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("current_size_in_bytes")]
		public object CurrentSizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("total")]
		public object Total { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_auto_throttle")]
		public string? TotalAutoThrottle { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_auto_throttle_in_bytes")]
		public object TotalAutoThrottleInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_docs")]
		public object TotalDocs { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_size")]
		public string? TotalSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_size_in_bytes")]
		public object TotalSizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_stopped_time")]
		public string? TotalStoppedTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_stopped_time_in_millis")]
		public object TotalStoppedTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_throttled_time")]
		public string? TotalThrottledTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_throttled_time_in_millis")]
		public object TotalThrottledTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time")]
		public string? TotalTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time_in_millis")]
		public object TotalTimeInMillis { get; init; }
	}

	public partial class NodeStatistics
	{
		[JsonInclude]
		[JsonPropertyName("failures")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.ErrorCause>? Failures { get; init; }

		[JsonInclude]
		[JsonPropertyName("total")]
		public int Total { get; init; }

		[JsonInclude]
		[JsonPropertyName("successful")]
		public int Successful { get; init; }

		[JsonInclude]
		[JsonPropertyName("failed")]
		public int Failed { get; init; }
	}

	public partial class PluginStats
	{
		[JsonInclude]
		[JsonPropertyName("classname")]
		public string Classname { get; init; }

		[JsonInclude]
		[JsonPropertyName("description")]
		public string Description { get; init; }

		[JsonInclude]
		[JsonPropertyName("elasticsearch_version")]
		public string ElasticsearchVersion { get; init; }

		[JsonInclude]
		[JsonPropertyName("extended_plugins")]
		public IReadOnlyCollection<string> ExtendedPlugins { get; init; }

		[JsonInclude]
		[JsonPropertyName("has_native_controller")]
		public bool HasNativeController { get; init; }

		[JsonInclude]
		[JsonPropertyName("java_version")]
		public string JavaVersion { get; init; }

		[JsonInclude]
		[JsonPropertyName("name")]
		public Elastic.Clients.Elasticsearch.Name Name { get; init; }

		[JsonInclude]
		[JsonPropertyName("version")]
		public string Version { get; init; }

		[JsonInclude]
		[JsonPropertyName("licensed")]
		public bool Licensed { get; init; }

		[JsonInclude]
		[JsonPropertyName("type")]
		public string Type { get; init; }
	}

	public partial class QueryCacheStats
	{
		[JsonInclude]
		[JsonPropertyName("cache_count")]
		public int CacheCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("cache_size")]
		public int CacheSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("evictions")]
		public int Evictions { get; init; }

		[JsonInclude]
		[JsonPropertyName("hit_count")]
		public int HitCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_size")]
		public Elastic.Clients.Elasticsearch.ByteSize? MemorySize { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_size_in_bytes")]
		public int MemorySizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("miss_count")]
		public int MissCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_count")]
		public int TotalCount { get; init; }
	}

	public partial class RecoveryStats
	{
		[JsonInclude]
		[JsonPropertyName("current_as_source")]
		public object CurrentAsSource { get; init; }

		[JsonInclude]
		[JsonPropertyName("current_as_target")]
		public object CurrentAsTarget { get; init; }

		[JsonInclude]
		[JsonPropertyName("throttle_time")]
		public string? ThrottleTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("throttle_time_in_millis")]
		public object ThrottleTimeInMillis { get; init; }
	}

	public partial class RefreshStats
	{
		[JsonInclude]
		[JsonPropertyName("external_total")]
		public object ExternalTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("external_total_time_in_millis")]
		public object ExternalTotalTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("listeners")]
		public object Listeners { get; init; }

		[JsonInclude]
		[JsonPropertyName("total")]
		public object Total { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time")]
		public string? TotalTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time_in_millis")]
		public object TotalTimeInMillis { get; init; }
	}

	public abstract partial class RequestBase
	{
	}

	public partial class RequestCacheStats
	{
		[JsonInclude]
		[JsonPropertyName("evictions")]
		public object Evictions { get; init; }

		[JsonInclude]
		[JsonPropertyName("hit_count")]
		public object HitCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_size")]
		public string? MemorySize { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_size_in_bytes")]
		public object MemorySizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("miss_count")]
		public object MissCount { get; init; }
	}

	public partial class ScoreSort
	{
		[JsonInclude]
		[JsonPropertyName("mode")]
		public Elastic.Clients.Elasticsearch.SortMode? Mode { get; init; }

		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.SortOrder? Order { get; init; }
	}

	public abstract partial class ScriptBase
	{
		[JsonInclude]
		[JsonPropertyName("lang")]
		public Union<Elastic.Clients.Elasticsearch.ScriptLanguage?, string?>? Lang { get; set; }

		[JsonInclude]
		[JsonPropertyName("params")]
		public Dictionary<string, object>? Params { get; set; }
	}

	public partial class ScriptField
	{
		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script Script { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_failure")]
		public bool? IgnoreFailure { get; set; }
	}

	public partial class ScriptSort
	{
		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.SortOrder? Order { get; init; }

		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script Script { get; init; }

		[JsonInclude]
		[JsonPropertyName("type")]
		public string? Type { get; init; }
	}

	public partial class SearchStats
	{
		[JsonInclude]
		[JsonPropertyName("fetch_current")]
		public object FetchCurrent { get; init; }

		[JsonInclude]
		[JsonPropertyName("fetch_time_in_millis")]
		public object FetchTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("fetch_total")]
		public object FetchTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("open_contexts")]
		public object? OpenContexts { get; init; }

		[JsonInclude]
		[JsonPropertyName("query_current")]
		public object QueryCurrent { get; init; }

		[JsonInclude]
		[JsonPropertyName("query_time_in_millis")]
		public object QueryTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("query_total")]
		public object QueryTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("scroll_current")]
		public object ScrollCurrent { get; init; }

		[JsonInclude]
		[JsonPropertyName("scroll_time_in_millis")]
		public object ScrollTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("scroll_total")]
		public object ScrollTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("suggest_current")]
		public object SuggestCurrent { get; init; }

		[JsonInclude]
		[JsonPropertyName("suggest_time_in_millis")]
		public object SuggestTimeInMillis { get; init; }

		[JsonInclude]
		[JsonPropertyName("suggest_total")]
		public object SuggestTotal { get; init; }

		[JsonInclude]
		[JsonPropertyName("groups")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.SearchStats>? Groups { get; init; }
	}

	public partial class SegmentsStats
	{
		[JsonInclude]
		[JsonPropertyName("count")]
		public int Count { get; init; }

		[JsonInclude]
		[JsonPropertyName("doc_values_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? DocValuesMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("doc_values_memory_in_bytes")]
		public int DocValuesMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("file_sizes")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.IndexManagement.Stats.ShardFileSizeInfo> FileSizes { get; init; }

		[JsonInclude]
		[JsonPropertyName("fixed_bit_set")]
		public Elastic.Clients.Elasticsearch.ByteSize? FixedBitSet { get; init; }

		[JsonInclude]
		[JsonPropertyName("fixed_bit_set_memory_in_bytes")]
		public int FixedBitSetMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("index_writer_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? IndexWriterMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("index_writer_max_memory_in_bytes")]
		public int? IndexWriterMaxMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("index_writer_memory_in_bytes")]
		public int IndexWriterMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("max_unsafe_auto_id_timestamp")]
		public int MaxUnsafeAutoIdTimestamp { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? Memory { get; init; }

		[JsonInclude]
		[JsonPropertyName("memory_in_bytes")]
		public int MemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("norms_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? NormsMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("norms_memory_in_bytes")]
		public int NormsMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("points_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? PointsMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("points_memory_in_bytes")]
		public int PointsMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("stored_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? StoredMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("stored_fields_memory_in_bytes")]
		public int StoredFieldsMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("terms_memory_in_bytes")]
		public int TermsMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("terms_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? TermsMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("term_vectory_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? TermVectoryMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("term_vectors_memory_in_bytes")]
		public int TermVectorsMemoryInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("version_map_memory")]
		public Elastic.Clients.Elasticsearch.ByteSize? VersionMapMemory { get; init; }

		[JsonInclude]
		[JsonPropertyName("version_map_memory_in_bytes")]
		public int VersionMapMemoryInBytes { get; init; }
	}

	public partial class ShardFailure
	{
		[JsonInclude]
		[JsonPropertyName("index")]
		public Elastic.Clients.Elasticsearch.IndexName? Index { get; init; }

		[JsonInclude]
		[JsonPropertyName("node")]
		public string? Node { get; init; }

		[JsonInclude]
		[JsonPropertyName("reason")]
		public Elastic.Clients.Elasticsearch.ErrorCause Reason { get; init; }

		[JsonInclude]
		[JsonPropertyName("shard")]
		public int Shard { get; init; }

		[JsonInclude]
		[JsonPropertyName("status")]
		public string? Status { get; init; }
	}

	public abstract partial class ShardsOperationResponseBase : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("_shards")]
		public Elastic.Clients.Elasticsearch.ShardStatistics Shards { get; init; }
	}

	public partial class ShardStatistics
	{
		[JsonInclude]
		[JsonPropertyName("failed")]
		public int Failed { get; init; }

		[JsonInclude]
		[JsonPropertyName("successful")]
		public int Successful { get; init; }

		[JsonInclude]
		[JsonPropertyName("total")]
		public int Total { get; init; }

		[JsonInclude]
		[JsonPropertyName("failures")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.ShardFailure>? Failures { get; init; }

		[JsonInclude]
		[JsonPropertyName("skipped")]
		public int? Skipped { get; init; }
	}

	public partial class SortContainer
	{
		[JsonInclude]
		[JsonPropertyName("_score")]
		public Elastic.Clients.Elasticsearch.ScoreSort? Score { get; init; }

		[JsonInclude]
		[JsonPropertyName("_doc")]
		public Elastic.Clients.Elasticsearch.ScoreSort? Doc { get; init; }

		[JsonInclude]
		[JsonPropertyName("_geo_distance")]
		public Elastic.Clients.Elasticsearch.GeoDistanceSort? GeoDistance { get; init; }

		[JsonInclude]
		[JsonPropertyName("_script")]
		public Elastic.Clients.Elasticsearch.ScriptSort? Script { get; init; }
	}

	public partial class SourceFilter
	{
		[JsonInclude]
		[JsonPropertyName("excludes")]
		public Elastic.Clients.Elasticsearch.Fields? Excludes { get; set; }

		[JsonInclude]
		[JsonPropertyName("includes")]
		public Elastic.Clients.Elasticsearch.Fields? Includes { get; set; }

		[JsonInclude]
		[JsonPropertyName("exclude")]
		public Elastic.Clients.Elasticsearch.Fields? Exclude { get; set; }

		[JsonInclude]
		[JsonPropertyName("include")]
		public Elastic.Clients.Elasticsearch.Fields? Include { get; set; }
	}

	[JsonConverter(typeof(SourceFilterDescriptorConverter))]
	public partial class SourceFilterDescriptor : DescriptorBase<SourceFilterDescriptor>
	{
		internal Elastic.Clients.Elasticsearch.Fields? _excludes;
		internal Elastic.Clients.Elasticsearch.Fields? _includes;
		internal Elastic.Clients.Elasticsearch.Fields? _exclude;
		internal Elastic.Clients.Elasticsearch.Fields? _include;
		public SourceFilterDescriptor Excludes(Elastic.Clients.Elasticsearch.Fields? excludes) => Assign(excludes, (a, v) => a._excludes = v);
		public SourceFilterDescriptor Includes(Elastic.Clients.Elasticsearch.Fields? includes) => Assign(includes, (a, v) => a._includes = v);
		public SourceFilterDescriptor Exclude(Elastic.Clients.Elasticsearch.Fields? exclude) => Assign(exclude, (a, v) => a._exclude = v);
		public SourceFilterDescriptor Include(Elastic.Clients.Elasticsearch.Fields? include) => Assign(include, (a, v) => a._include = v);
	}

	internal sealed class SourceFilterDescriptorConverter : JsonConverter<SourceFilterDescriptor>
	{
		public override SourceFilterDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, SourceFilterDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			if (value._excludes is not null)
			{
				writer.WritePropertyName("excludes");
				JsonSerializer.Serialize(writer, value._excludes, options);
			}

			if (value._includes is not null)
			{
				writer.WritePropertyName("includes");
				JsonSerializer.Serialize(writer, value._includes, options);
			}

			if (value._exclude is not null)
			{
				writer.WritePropertyName("exclude");
				JsonSerializer.Serialize(writer, value._exclude, options);
			}

			if (value._include is not null)
			{
				writer.WritePropertyName("include");
				JsonSerializer.Serialize(writer, value._include, options);
			}

			writer.WriteEndObject();
		}
	}

	public partial class StoreStats
	{
		[JsonInclude]
		[JsonPropertyName("size")]
		public Elastic.Clients.Elasticsearch.ByteSize? Size { get; init; }

		[JsonInclude]
		[JsonPropertyName("size_in_bytes")]
		public int SizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("reserved")]
		public Elastic.Clients.Elasticsearch.ByteSize? Reserved { get; init; }

		[JsonInclude]
		[JsonPropertyName("reserved_in_bytes")]
		public int ReservedInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_data_set_size")]
		public Elastic.Clients.Elasticsearch.ByteSize? TotalDataSetSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_data_set_size_in_bytes")]
		public int? TotalDataSetSizeInBytes { get; init; }
	}

	public partial class TranslogStats
	{
		[JsonInclude]
		[JsonPropertyName("earliest_last_modified_age")]
		public object EarliestLastModifiedAge { get; init; }

		[JsonInclude]
		[JsonPropertyName("operations")]
		public object Operations { get; init; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public string? Size { get; init; }

		[JsonInclude]
		[JsonPropertyName("size_in_bytes")]
		public object SizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("uncommitted_operations")]
		public int UncommittedOperations { get; init; }

		[JsonInclude]
		[JsonPropertyName("uncommitted_size")]
		public string? UncommittedSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("uncommitted_size_in_bytes")]
		public object UncommittedSizeInBytes { get; init; }
	}

	public partial class WarmerStats
	{
		[JsonInclude]
		[JsonPropertyName("current")]
		public object Current { get; init; }

		[JsonInclude]
		[JsonPropertyName("total")]
		public object Total { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time")]
		public string? TotalTime { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_time_in_millis")]
		public object TotalTimeInMillis { get; init; }
	}
}
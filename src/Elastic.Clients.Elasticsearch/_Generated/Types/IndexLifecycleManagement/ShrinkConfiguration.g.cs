// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.IndexLifecycleManagement;

public sealed partial class ShrinkConfiguration
{
	[JsonInclude, JsonPropertyName("number_of_shards")]
	public int NumberOfShards { get; set; }
}

public sealed partial class ShrinkConfigurationDescriptor : SerializableDescriptor<ShrinkConfigurationDescriptor>
{
	internal ShrinkConfigurationDescriptor(Action<ShrinkConfigurationDescriptor> configure) => configure.Invoke(this);

	public ShrinkConfigurationDescriptor() : base()
	{
	}

	private int NumberOfShardsValue { get; set; }

	public ShrinkConfigurationDescriptor NumberOfShards(int numberOfShards)
	{
		NumberOfShardsValue = numberOfShards;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		writer.WritePropertyName("number_of_shards");
		writer.WriteNumberValue(NumberOfShardsValue);
		writer.WriteEndObject();
	}
}
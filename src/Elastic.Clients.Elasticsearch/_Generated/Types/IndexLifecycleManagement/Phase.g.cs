// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.IndexLifecycleManagement;

public sealed partial class Phase
{
	[JsonInclude, JsonPropertyName("actions")]
	public Elastic.Clients.Elasticsearch.IndexLifecycleManagement.Actions? Actions { get; set; }
	[JsonInclude, JsonPropertyName("min_age")]
	public Union<Elastic.Clients.Elasticsearch.Duration, long>? MinAge { get; set; }
}

public sealed partial class PhaseDescriptor : SerializableDescriptor<PhaseDescriptor>
{
	internal PhaseDescriptor(Action<PhaseDescriptor> configure) => configure.Invoke(this);

	public PhaseDescriptor() : base()
	{
	}

	private Elastic.Clients.Elasticsearch.IndexLifecycleManagement.Actions? ActionsValue { get; set; }
	private Elastic.Clients.Elasticsearch.IndexLifecycleManagement.ActionsDescriptor ActionsDescriptor { get; set; }
	private Action<Elastic.Clients.Elasticsearch.IndexLifecycleManagement.ActionsDescriptor> ActionsDescriptorAction { get; set; }
	private Union<Elastic.Clients.Elasticsearch.Duration, long>? MinAgeValue { get; set; }

	public PhaseDescriptor Actions(Elastic.Clients.Elasticsearch.IndexLifecycleManagement.Actions? actions)
	{
		ActionsDescriptor = null;
		ActionsDescriptorAction = null;
		ActionsValue = actions;
		return Self;
	}

	public PhaseDescriptor Actions(Elastic.Clients.Elasticsearch.IndexLifecycleManagement.ActionsDescriptor descriptor)
	{
		ActionsValue = null;
		ActionsDescriptorAction = null;
		ActionsDescriptor = descriptor;
		return Self;
	}

	public PhaseDescriptor Actions(Action<Elastic.Clients.Elasticsearch.IndexLifecycleManagement.ActionsDescriptor> configure)
	{
		ActionsValue = null;
		ActionsDescriptor = null;
		ActionsDescriptorAction = configure;
		return Self;
	}

	public PhaseDescriptor MinAge(Union<Elastic.Clients.Elasticsearch.Duration, long>? minAge)
	{
		MinAgeValue = minAge;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		if (ActionsDescriptor is not null)
		{
			writer.WritePropertyName("actions");
			JsonSerializer.Serialize(writer, ActionsDescriptor, options);
		}
		else if (ActionsDescriptorAction is not null)
		{
			writer.WritePropertyName("actions");
			JsonSerializer.Serialize(writer, new Elastic.Clients.Elasticsearch.IndexLifecycleManagement.ActionsDescriptor(ActionsDescriptorAction), options);
		}
		else if (ActionsValue is not null)
		{
			writer.WritePropertyName("actions");
			JsonSerializer.Serialize(writer, ActionsValue, options);
		}

		if (MinAgeValue is not null)
		{
			writer.WritePropertyName("min_age");
			JsonSerializer.Serialize(writer, MinAgeValue, options);
		}

		writer.WriteEndObject();
	}
}
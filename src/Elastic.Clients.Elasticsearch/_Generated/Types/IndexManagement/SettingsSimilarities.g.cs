// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Core;
using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.IndexManagement;

public partial class SettingsSimilarities : IsADictionary<string, ISettingsSimilarity>
{
	public SettingsSimilarities()
	{
	}

	public SettingsSimilarities(IDictionary<string, ISettingsSimilarity> container) : base(container)
	{
	}

	public void Add(string name, ISettingsSimilarity settingsSimilarity) => BackingDictionary.Add(Sanitize(name), settingsSimilarity);
	public bool TryGetSettingsSimilarity(string name, [NotNullWhen(returnValue: true)] out ISettingsSimilarity settingsSimilarity) => BackingDictionary.TryGetValue(Sanitize(name), out settingsSimilarity);

	public bool TryGetSettingsSimilarity<T>(string name, [NotNullWhen(returnValue: true)] out T? settingsSimilarity) where T : class, ISettingsSimilarity
	{
		if (BackingDictionary.TryGetValue(Sanitize(name), out var matchedValue) && matchedValue is T finalValue)
		{
			settingsSimilarity = finalValue;
			return true;
		}

		settingsSimilarity = null;
		return false;
	}
}

public sealed partial class SettingsSimilaritiesDescriptor : IsADictionaryDescriptor<SettingsSimilaritiesDescriptor, SettingsSimilarities, string, ISettingsSimilarity>
{
	public SettingsSimilaritiesDescriptor() : base(new SettingsSimilarities())
	{
	}

	public SettingsSimilaritiesDescriptor(SettingsSimilarities settingsSimilarities) : base(settingsSimilarities ?? new SettingsSimilarities())
	{
	}

	public SettingsSimilaritiesDescriptor Bm25(string settingsSimilarityName) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityBm25Descriptor, SettingsSimilarityBm25>(settingsSimilarityName, null);
	public SettingsSimilaritiesDescriptor Bm25(string settingsSimilarityName, Action<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityBm25Descriptor> configure) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityBm25Descriptor, SettingsSimilarityBm25>(settingsSimilarityName, configure);
	public SettingsSimilaritiesDescriptor Bm25(string settingsSimilarityName, SettingsSimilarityBm25 settingsSimilarityBm25) => AssignVariant(settingsSimilarityName, settingsSimilarityBm25);
	public SettingsSimilaritiesDescriptor Boolean(string settingsSimilarityName) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityBooleanDescriptor, SettingsSimilarityBoolean>(settingsSimilarityName, null);
	public SettingsSimilaritiesDescriptor Boolean(string settingsSimilarityName, Action<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityBooleanDescriptor> configure) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityBooleanDescriptor, SettingsSimilarityBoolean>(settingsSimilarityName, configure);
	public SettingsSimilaritiesDescriptor Boolean(string settingsSimilarityName, SettingsSimilarityBoolean settingsSimilarityBoolean) => AssignVariant(settingsSimilarityName, settingsSimilarityBoolean);
	public SettingsSimilaritiesDescriptor Dfi(string settingsSimilarityName) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityDfiDescriptor, SettingsSimilarityDfi>(settingsSimilarityName, null);
	public SettingsSimilaritiesDescriptor Dfi(string settingsSimilarityName, Action<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityDfiDescriptor> configure) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityDfiDescriptor, SettingsSimilarityDfi>(settingsSimilarityName, configure);
	public SettingsSimilaritiesDescriptor Dfi(string settingsSimilarityName, SettingsSimilarityDfi settingsSimilarityDfi) => AssignVariant(settingsSimilarityName, settingsSimilarityDfi);
	public SettingsSimilaritiesDescriptor Dfr(string settingsSimilarityName) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityDfrDescriptor, SettingsSimilarityDfr>(settingsSimilarityName, null);
	public SettingsSimilaritiesDescriptor Dfr(string settingsSimilarityName, Action<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityDfrDescriptor> configure) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityDfrDescriptor, SettingsSimilarityDfr>(settingsSimilarityName, configure);
	public SettingsSimilaritiesDescriptor Dfr(string settingsSimilarityName, SettingsSimilarityDfr settingsSimilarityDfr) => AssignVariant(settingsSimilarityName, settingsSimilarityDfr);
	public SettingsSimilaritiesDescriptor Ib(string settingsSimilarityName) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityIbDescriptor, SettingsSimilarityIb>(settingsSimilarityName, null);
	public SettingsSimilaritiesDescriptor Ib(string settingsSimilarityName, Action<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityIbDescriptor> configure) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityIbDescriptor, SettingsSimilarityIb>(settingsSimilarityName, configure);
	public SettingsSimilaritiesDescriptor Ib(string settingsSimilarityName, SettingsSimilarityIb settingsSimilarityIb) => AssignVariant(settingsSimilarityName, settingsSimilarityIb);
	public SettingsSimilaritiesDescriptor Lmd(string settingsSimilarityName) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityLmdDescriptor, SettingsSimilarityLmd>(settingsSimilarityName, null);
	public SettingsSimilaritiesDescriptor Lmd(string settingsSimilarityName, Action<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityLmdDescriptor> configure) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityLmdDescriptor, SettingsSimilarityLmd>(settingsSimilarityName, configure);
	public SettingsSimilaritiesDescriptor Lmd(string settingsSimilarityName, SettingsSimilarityLmd settingsSimilarityLmd) => AssignVariant(settingsSimilarityName, settingsSimilarityLmd);
	public SettingsSimilaritiesDescriptor Lmj(string settingsSimilarityName) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityLmjDescriptor, SettingsSimilarityLmj>(settingsSimilarityName, null);
	public SettingsSimilaritiesDescriptor Lmj(string settingsSimilarityName, Action<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityLmjDescriptor> configure) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityLmjDescriptor, SettingsSimilarityLmj>(settingsSimilarityName, configure);
	public SettingsSimilaritiesDescriptor Lmj(string settingsSimilarityName, SettingsSimilarityLmj settingsSimilarityLmj) => AssignVariant(settingsSimilarityName, settingsSimilarityLmj);
	public SettingsSimilaritiesDescriptor Scripted(string settingsSimilarityName) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityScriptedDescriptor, SettingsSimilarityScripted>(settingsSimilarityName, null);
	public SettingsSimilaritiesDescriptor Scripted(string settingsSimilarityName, Action<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityScriptedDescriptor> configure) => AssignVariant<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityScriptedDescriptor, SettingsSimilarityScripted>(settingsSimilarityName, configure);
	public SettingsSimilaritiesDescriptor Scripted(string settingsSimilarityName, SettingsSimilarityScripted settingsSimilarityScripted) => AssignVariant(settingsSimilarityName, settingsSimilarityScripted);
}

internal sealed partial class SettingsSimilarityInterfaceConverter : System.Text.Json.Serialization.JsonConverter<ISettingsSimilarity>
{
	private static readonly System.Text.Json.JsonEncodedText PropDiscriminator = System.Text.Json.JsonEncodedText.Encode("type");

	public override ISettingsSimilarity Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
	{
		reader.ValidateToken(System.Text.Json.JsonTokenType.StartObject);
		var readerSnapshot = reader;
		string? discriminator = null;
		while (reader.Read() && reader.TokenType is System.Text.Json.JsonTokenType.PropertyName)
		{
			if (reader.TryReadProperty(options, PropDiscriminator, ref discriminator, null))
			{
				break;
			}

			reader.Skip();
		}

		reader = readerSnapshot;
		return discriminator switch
		{
			"BM25" => reader.ReadValue<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityBm25>(options, null),
			"boolean" => reader.ReadValue<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityBoolean>(options, null),
			"DFI" => reader.ReadValue<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityDfi>(options, null),
			"DFR" => reader.ReadValue<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityDfr>(options, null),
			"IB" => reader.ReadValue<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityIb>(options, null),
			"LMDirichlet" => reader.ReadValue<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityLmd>(options, null),
			"LMJelinekMercer" => reader.ReadValue<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityLmj>(options, null),
			"scripted" => reader.ReadValue<Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityScripted>(options, null),
			_ => throw new System.Text.Json.JsonException($"Variant '{discriminator}' is not supported for type '{nameof(ISettingsSimilarity)}'.")
		};
	}

	public override void Write(System.Text.Json.Utf8JsonWriter writer, ISettingsSimilarity value, System.Text.Json.JsonSerializerOptions options)
	{
		switch (value.Type)
		{
			case "BM25":
				writer.WriteValue(options, (Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityBm25)value, null);
				break;
			case "boolean":
				writer.WriteValue(options, (Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityBoolean)value, null);
				break;
			case "DFI":
				writer.WriteValue(options, (Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityDfi)value, null);
				break;
			case "DFR":
				writer.WriteValue(options, (Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityDfr)value, null);
				break;
			case "IB":
				writer.WriteValue(options, (Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityIb)value, null);
				break;
			case "LMDirichlet":
				writer.WriteValue(options, (Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityLmd)value, null);
				break;
			case "LMJelinekMercer":
				writer.WriteValue(options, (Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityLmj)value, null);
				break;
			case "scripted":
				writer.WriteValue(options, (Elastic.Clients.Elasticsearch.IndexManagement.SettingsSimilarityScripted)value, null);
				break;
			default:
				throw new System.Text.Json.JsonException($"Variant '{value.Type}' is not supported for type '{nameof(ISettingsSimilarity)}'.");
		}
	}
}

[JsonConverter(typeof(SettingsSimilarityInterfaceConverter))]
public partial interface ISettingsSimilarity
{
	public string? Type { get; }
}
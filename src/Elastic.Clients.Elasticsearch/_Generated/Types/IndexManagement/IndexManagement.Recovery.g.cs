// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport.Products.Elasticsearch.Failures;
using OneOf;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.IndexManagement.Recovery
{
	public partial class FileDetails
	{
		[JsonPropertyName("length")]
		public long Length
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("name")]
		public string Name
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("recovered")]
		public long Recovered
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class RecoveryBytes
	{
		[JsonPropertyName("percent")]
		public Elastic.Clients.Elasticsearch.Percentage Percent
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("recovered")]
		public Elastic.Clients.Elasticsearch.ByteSize? Recovered
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("recovered_from_snapshot")]
		public Elastic.Clients.Elasticsearch.ByteSize? RecoveredFromSnapshot
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("recovered_from_snapshot_in_bytes")]
		public Elastic.Clients.Elasticsearch.ByteSize? RecoveredFromSnapshotInBytes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("recovered_in_bytes")]
		public Elastic.Clients.Elasticsearch.ByteSize RecoveredInBytes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("reused")]
		public Elastic.Clients.Elasticsearch.ByteSize? Reused
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("reused_in_bytes")]
		public Elastic.Clients.Elasticsearch.ByteSize ReusedInBytes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total")]
		public Elastic.Clients.Elasticsearch.ByteSize? Total
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total_in_bytes")]
		public Elastic.Clients.Elasticsearch.ByteSize TotalInBytes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class RecoveryFiles
	{
		[JsonPropertyName("details")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.IndexManagement.Recovery.FileDetails>? Details
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("percent")]
		public Elastic.Clients.Elasticsearch.Percentage Percent
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("recovered")]
		public long Recovered
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("reused")]
		public long Reused
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total")]
		public long Total
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class RecoveryIndexStatus
	{
		[JsonPropertyName("bytes")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Recovery.RecoveryBytes? Bytes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("files")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Recovery.RecoveryFiles Files
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("size")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Recovery.RecoveryBytes Size
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("source_throttle_time")]
		public Elastic.Clients.Elasticsearch.Time? SourceThrottleTime
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("source_throttle_time_in_millis")]
		public Elastic.Clients.Elasticsearch.EpochMillis SourceThrottleTimeInMillis
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("target_throttle_time")]
		public Elastic.Clients.Elasticsearch.Time? TargetThrottleTime
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("target_throttle_time_in_millis")]
		public Elastic.Clients.Elasticsearch.EpochMillis TargetThrottleTimeInMillis
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total_time")]
		public Elastic.Clients.Elasticsearch.Time? TotalTime
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total_time_in_millis")]
		public Elastic.Clients.Elasticsearch.EpochMillis TotalTimeInMillis
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class RecoveryOrigin
	{
		[JsonPropertyName("bootstrap_new_history_uuid")]
		public bool? BootstrapNewHistoryUuid
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("host")]
		public Elastic.Clients.Elasticsearch.Host? Host
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("hostname")]
		public string? Hostname
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("id")]
		public Elastic.Clients.Elasticsearch.Id? Id
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("index")]
		public Elastic.Clients.Elasticsearch.IndexName? Index
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("ip")]
		public Elastic.Clients.Elasticsearch.Ip? Ip
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("name")]
		public Elastic.Clients.Elasticsearch.Name? Name
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("repository")]
		public Elastic.Clients.Elasticsearch.Name? Repository
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("restoreUUID")]
		public Elastic.Clients.Elasticsearch.Uuid? Restoreuuid
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("snapshot")]
		public Elastic.Clients.Elasticsearch.Name? Snapshot
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("transport_address")]
		public Elastic.Clients.Elasticsearch.TransportAddress? TransportAddress
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("version")]
		public Elastic.Clients.Elasticsearch.VersionString? Version
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class RecoveryStartStatus
	{
		[JsonPropertyName("check_index_time")]
		public long CheckIndexTime
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total_time_in_millis")]
		public string TotalTimeInMillis
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class RecoveryStatus
	{
		[JsonPropertyName("shards")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.IndexManagement.Recovery.ShardRecovery> Shards
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ShardRecovery
	{
		[JsonPropertyName("id")]
		public long Id
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("index")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Recovery.RecoveryIndexStatus Index
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("primary")]
		public bool Primary
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("source")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Recovery.RecoveryOrigin Source
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("stage")]
		public string Stage
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("start")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Recovery.RecoveryStartStatus? Start
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("start_time")]
		public Elastic.Clients.Elasticsearch.DateString? StartTime
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("start_time_in_millis")]
		public Elastic.Clients.Elasticsearch.EpochMillis StartTimeInMillis
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("stop_time")]
		public Elastic.Clients.Elasticsearch.DateString? StopTime
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("stop_time_in_millis")]
		public Elastic.Clients.Elasticsearch.EpochMillis StopTimeInMillis
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("target")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Recovery.RecoveryOrigin Target
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total_time")]
		public Elastic.Clients.Elasticsearch.DateString? TotalTime
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total_time_in_millis")]
		public Elastic.Clients.Elasticsearch.EpochMillis TotalTimeInMillis
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("translog")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Recovery.TranslogStatus Translog
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("type")]
		public Elastic.Clients.Elasticsearch.DocType Type
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("verify_index")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Recovery.VerifyIndex VerifyIndex
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class TranslogStatus
	{
		[JsonPropertyName("percent")]
		public Elastic.Clients.Elasticsearch.Percentage Percent
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("recovered")]
		public long Recovered
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total")]
		public long Total
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total_on_start")]
		public long TotalOnStart
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total_time")]
		public string? TotalTime
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total_time_in_millis")]
		public Elastic.Clients.Elasticsearch.EpochMillis TotalTimeInMillis
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class VerifyIndex
	{
		[JsonPropertyName("check_index_time")]
		public Elastic.Clients.Elasticsearch.Time? CheckIndexTime
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("check_index_time_in_millis")]
		public Elastic.Clients.Elasticsearch.EpochMillis CheckIndexTimeInMillis
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total_time")]
		public Elastic.Clients.Elasticsearch.Time? TotalTime
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total_time_in_millis")]
		public Elastic.Clients.Elasticsearch.EpochMillis TotalTimeInMillis
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}
}
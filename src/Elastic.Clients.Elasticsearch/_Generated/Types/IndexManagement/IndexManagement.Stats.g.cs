// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport.Products.Elasticsearch.Failures;
using OneOf;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.IndexManagement.Stats
{
	public partial class IndexStats
	{
		[JsonPropertyName("bulk")]
		public Elastic.Clients.Elasticsearch.BulkStats? Bulk
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("completion")]
		public Elastic.Clients.Elasticsearch.CompletionStats? Completion
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("docs")]
		public Elastic.Clients.Elasticsearch.DocStats? Docs
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("fielddata")]
		public Elastic.Clients.Elasticsearch.FielddataStats? Fielddata
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("flush")]
		public Elastic.Clients.Elasticsearch.FlushStats? Flush
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("get")]
		public Elastic.Clients.Elasticsearch.GetStats? Get
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("indexing")]
		public Elastic.Clients.Elasticsearch.IndexingStats? Indexing
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("merges")]
		public Elastic.Clients.Elasticsearch.MergesStats? Merges
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("query_cache")]
		public Elastic.Clients.Elasticsearch.QueryCacheStats? QueryCache
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("recovery")]
		public Elastic.Clients.Elasticsearch.RecoveryStats? Recovery
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("refresh")]
		public Elastic.Clients.Elasticsearch.RefreshStats? Refresh
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("request_cache")]
		public Elastic.Clients.Elasticsearch.RequestCacheStats? RequestCache
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("search")]
		public Elastic.Clients.Elasticsearch.SearchStats? Search
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("segments")]
		public Elastic.Clients.Elasticsearch.SegmentsStats? Segments
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("store")]
		public Elastic.Clients.Elasticsearch.StoreStats? Store
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("translog")]
		public Elastic.Clients.Elasticsearch.TranslogStats? Translog
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("warmer")]
		public Elastic.Clients.Elasticsearch.WarmerStats? Warmer
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class IndicesStats
	{
		[JsonPropertyName("primaries")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Stats.IndexStats Primaries
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("shards")]
		public Dictionary<string, IReadOnlyCollection<Elastic.Clients.Elasticsearch.IndexManagement.Stats.ShardStats>>? Shards
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Stats.IndexStats Total
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("uuid")]
		public Elastic.Clients.Elasticsearch.Uuid? Uuid
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ShardCommit
	{
		[JsonPropertyName("generation")]
		public int Generation
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("id")]
		public Elastic.Clients.Elasticsearch.Id Id
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("num_docs")]
		public long NumDocs
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("user_data")]
		public Dictionary<string, string> UserData
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ShardFileSizeInfo
	{
		[JsonPropertyName("average_size_in_bytes")]
		public long? AverageSizeInBytes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("count")]
		public long? Count
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("description")]
		public string Description
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_size_in_bytes")]
		public long? MaxSizeInBytes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("min_size_in_bytes")]
		public long? MinSizeInBytes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("size_in_bytes")]
		public long SizeInBytes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ShardLease
	{
		[JsonPropertyName("id")]
		public Elastic.Clients.Elasticsearch.Id Id
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("retaining_seq_no")]
		public Elastic.Clients.Elasticsearch.SequenceNumber RetainingSeqNo
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("source")]
		public string Source
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("timestamp")]
		public long Timestamp
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ShardPath
	{
		[JsonPropertyName("data_path")]
		public string DataPath
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("is_custom_data_path")]
		public bool IsCustomDataPath
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("state_path")]
		public string StatePath
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ShardQueryCache
	{
		[JsonPropertyName("cache_count")]
		public long CacheCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("cache_size")]
		public long CacheSize
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("evictions")]
		public long Evictions
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("hit_count")]
		public long HitCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("memory_size_in_bytes")]
		public long MemorySizeInBytes
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("miss_count")]
		public long MissCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("total_count")]
		public long TotalCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ShardRetentionLeases
	{
		[JsonPropertyName("leases")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.IndexManagement.Stats.ShardLease> Leases
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("primary_term")]
		public long PrimaryTerm
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("version")]
		public Elastic.Clients.Elasticsearch.VersionNumber Version
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ShardRouting
	{
		[JsonPropertyName("node")]
		public string Node
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("primary")]
		public bool Primary
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("relocating_node")]
		public string? RelocatingNode
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("state")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Stats.ShardRoutingState State
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ShardSequenceNumber
	{
		[JsonPropertyName("global_checkpoint")]
		public long GlobalCheckpoint
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("local_checkpoint")]
		public long LocalCheckpoint
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_seq_no")]
		public Elastic.Clients.Elasticsearch.SequenceNumber MaxSeqNo
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ShardStats
	{
		[JsonPropertyName("bulk")]
		public Elastic.Clients.Elasticsearch.BulkStats? Bulk
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("commit")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Stats.ShardCommit Commit
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("completion")]
		public Elastic.Clients.Elasticsearch.CompletionStats Completion
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("docs")]
		public Elastic.Clients.Elasticsearch.DocStats Docs
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("fielddata")]
		public Elastic.Clients.Elasticsearch.FielddataStats Fielddata
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("flush")]
		public Elastic.Clients.Elasticsearch.FlushStats Flush
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("get")]
		public Elastic.Clients.Elasticsearch.GetStats Get
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("indexing")]
		public Elastic.Clients.Elasticsearch.IndexingStats Indexing
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("merges")]
		public Elastic.Clients.Elasticsearch.MergesStats Merges
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("query_cache")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Stats.ShardQueryCache QueryCache
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("recovery")]
		public Elastic.Clients.Elasticsearch.RecoveryStats Recovery
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("refresh")]
		public Elastic.Clients.Elasticsearch.RefreshStats Refresh
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("request_cache")]
		public Elastic.Clients.Elasticsearch.RequestCacheStats RequestCache
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("retention_leases")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Stats.ShardRetentionLeases RetentionLeases
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("routing")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Stats.ShardRouting Routing
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("search")]
		public Elastic.Clients.Elasticsearch.SearchStats Search
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("segments")]
		public Elastic.Clients.Elasticsearch.SegmentsStats Segments
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("seq_no")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Stats.ShardSequenceNumber SeqNo
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("shard_path")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Stats.ShardPath ShardPath
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("store")]
		public Elastic.Clients.Elasticsearch.StoreStats Store
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("translog")]
		public Elastic.Clients.Elasticsearch.TranslogStats Translog
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("warmer")]
		public Elastic.Clients.Elasticsearch.WarmerStats Warmer
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}
}
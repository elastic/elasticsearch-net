// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.IndexManagement.Rollover
{
	[InterfaceConverterAttribute(typeof(RolloverConditionsDescriptorConverter<RolloverConditions>))]
	public partial interface IRolloverConditions
	{
		Elastic.Clients.Elasticsearch.Time? MaxAge { get; set; }

		object? MaxDocs { get; set; }

		string? MaxSize { get; set; }

		Elastic.Clients.Elasticsearch.ByteSize? MaxPrimaryShardSize { get; set; }
	}

	public partial class RolloverConditions : IndexManagement.Rollover.IRolloverConditions
	{
		[JsonInclude]
		[JsonPropertyName("max_age")]
		public Elastic.Clients.Elasticsearch.Time? MaxAge { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_docs")]
		public object? MaxDocs { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_size")]
		public string? MaxSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_primary_shard_size")]
		public Elastic.Clients.Elasticsearch.ByteSize? MaxPrimaryShardSize { get; set; }
	}

	public partial class RolloverConditionsDescriptor : DescriptorBase<RolloverConditionsDescriptor, IRolloverConditions>, IRolloverConditions
	{
		Elastic.Clients.Elasticsearch.Time? IRolloverConditions.MaxAge { get; set; }

		object? IRolloverConditions.MaxDocs { get; set; }

		string? IRolloverConditions.MaxSize { get; set; }

		Elastic.Clients.Elasticsearch.ByteSize? IRolloverConditions.MaxPrimaryShardSize { get; set; }
	}

	internal sealed class RolloverConditionsDescriptorConverter<TReadAs> : JsonConverter<IRolloverConditions> where TReadAs : class, IRolloverConditions
	{
		public override IRolloverConditions Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => JsonSerializer.Deserialize<TReadAs>(ref reader, options);
		public override void Write(Utf8JsonWriter writer, IRolloverConditions value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			if (value.MaxAge is not null)
			{
				writer.WritePropertyName("max_age");
				JsonSerializer.Serialize(writer, value.MaxAge, options);
			}

			if (value.MaxDocs is not null)
			{
				writer.WritePropertyName("max_docs");
				JsonSerializer.Serialize(writer, value.MaxDocs, options);
			}

			if (!string.IsNullOrEmpty(value.MaxSize))
			{
				writer.WritePropertyName("max_size");
				writer.WriteStringValue(value.MaxSize);
			}

			if (value.MaxPrimaryShardSize is not null)
			{
				writer.WritePropertyName("max_primary_shard_size");
				JsonSerializer.Serialize(writer, value.MaxPrimaryShardSize, options);
			}

			writer.WriteEndObject();
		}
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using System;
using System.Linq;
using Elastic.Clients.Elasticsearch.Serialization;

namespace Elastic.Clients.Elasticsearch.IndexManagement;

internal sealed partial class IndexSegmentSortConverter : System.Text.Json.Serialization.JsonConverter<Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort>
{
	private static readonly System.Text.Json.JsonEncodedText PropField = System.Text.Json.JsonEncodedText.Encode("field");
	private static readonly System.Text.Json.JsonEncodedText PropMissing = System.Text.Json.JsonEncodedText.Encode("missing");
	private static readonly System.Text.Json.JsonEncodedText PropMode = System.Text.Json.JsonEncodedText.Encode("mode");
	private static readonly System.Text.Json.JsonEncodedText PropOrder = System.Text.Json.JsonEncodedText.Encode("order");

	public override Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
	{
		reader.ValidateToken(System.Text.Json.JsonTokenType.StartObject);
		LocalJsonValue<Elastic.Clients.Elasticsearch.Fields?> propField = default;
		LocalJsonValue<System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMissing>?> propMissing = default;
		LocalJsonValue<System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMode>?> propMode = default;
		LocalJsonValue<System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortOrder>?> propOrder = default;
		while (reader.Read() && reader.TokenType is System.Text.Json.JsonTokenType.PropertyName)
		{
			if (propField.TryReadProperty(ref reader, options, PropField, static Elastic.Clients.Elasticsearch.Fields? (ref System.Text.Json.Utf8JsonReader r, System.Text.Json.JsonSerializerOptions o) => r.ReadValueEx<Elastic.Clients.Elasticsearch.Fields?>(o, typeof(Elastic.Clients.Elasticsearch.Serialization.SingleOrManyFieldsMarker))))
			{
				continue;
			}

			if (propMissing.TryReadProperty(ref reader, options, PropMissing, static System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMissing>? (ref System.Text.Json.Utf8JsonReader r, System.Text.Json.JsonSerializerOptions o) => r.ReadSingleOrManyCollectionValue<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMissing>(o, null)))
			{
				continue;
			}

			if (propMode.TryReadProperty(ref reader, options, PropMode, static System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMode>? (ref System.Text.Json.Utf8JsonReader r, System.Text.Json.JsonSerializerOptions o) => r.ReadSingleOrManyCollectionValue<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMode>(o, null)))
			{
				continue;
			}

			if (propOrder.TryReadProperty(ref reader, options, PropOrder, static System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortOrder>? (ref System.Text.Json.Utf8JsonReader r, System.Text.Json.JsonSerializerOptions o) => r.ReadSingleOrManyCollectionValue<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortOrder>(o, null)))
			{
				continue;
			}

			if (options.UnmappedMemberHandling is System.Text.Json.Serialization.JsonUnmappedMemberHandling.Skip)
			{
				reader.Skip();
				continue;
			}

			throw new System.Text.Json.JsonException($"Unknown JSON property '{reader.GetString()}' for type '{typeToConvert.Name}'.");
		}

		reader.ValidateToken(System.Text.Json.JsonTokenType.EndObject);
		return new Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance)
		{
			Field = propField.Value,
			Missing = propMissing.Value,
			Mode = propMode.Value,
			Order = propOrder.Value
		};
	}

	public override void Write(System.Text.Json.Utf8JsonWriter writer, Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort value, System.Text.Json.JsonSerializerOptions options)
	{
		writer.WriteStartObject();
		writer.WriteProperty(options, PropField, value.Field, null, static (System.Text.Json.Utf8JsonWriter w, System.Text.Json.JsonSerializerOptions o, Elastic.Clients.Elasticsearch.Fields? v) => w.WriteValueEx<Elastic.Clients.Elasticsearch.Fields?>(o, v, typeof(Elastic.Clients.Elasticsearch.Serialization.SingleOrManyFieldsMarker)));
		writer.WriteProperty(options, PropMissing, value.Missing, null, static (System.Text.Json.Utf8JsonWriter w, System.Text.Json.JsonSerializerOptions o, System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMissing>? v) => w.WriteSingleOrManyCollectionValue<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMissing>(o, v, null));
		writer.WriteProperty(options, PropMode, value.Mode, null, static (System.Text.Json.Utf8JsonWriter w, System.Text.Json.JsonSerializerOptions o, System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMode>? v) => w.WriteSingleOrManyCollectionValue<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMode>(o, v, null));
		writer.WriteProperty(options, PropOrder, value.Order, null, static (System.Text.Json.Utf8JsonWriter w, System.Text.Json.JsonSerializerOptions o, System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortOrder>? v) => w.WriteSingleOrManyCollectionValue<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortOrder>(o, v, null));
		writer.WriteEndObject();
	}
}

[System.Text.Json.Serialization.JsonConverter(typeof(Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortConverter))]
public sealed partial class IndexSegmentSort
{
#if NET7_0_OR_GREATER
	public IndexSegmentSort()
	{
	}
#endif
#if !NET7_0_OR_GREATER
	public IndexSegmentSort()
	{
	}
#endif
	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	internal IndexSegmentSort(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel sentinel)
	{
		_ = sentinel;
	}

	public Elastic.Clients.Elasticsearch.Fields? Field { get; set; }
	public System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMissing>? Missing { get; set; }
	public System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMode>? Mode { get; set; }
	public System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortOrder>? Order { get; set; }
}

public readonly partial struct IndexSegmentSortDescriptor<TDocument>
{
	internal Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort Instance { get; init; }

	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public IndexSegmentSortDescriptor(Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort instance)
	{
		Instance = instance;
	}

	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public IndexSegmentSortDescriptor()
	{
		Instance = new Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance);
	}

	public static explicit operator Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor<TDocument>(Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort instance) => new Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor<TDocument>(instance);
	public static implicit operator Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort(Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor<TDocument> descriptor) => descriptor.Instance;

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor<TDocument> Field(Elastic.Clients.Elasticsearch.Fields? value)
	{
		Instance.Field = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor<TDocument> Field(params System.Linq.Expressions.Expression<System.Func<TDocument, object?>>[] value)
	{
		Instance.Field = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor<TDocument> Missing(System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMissing>? value)
	{
		Instance.Missing = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor<TDocument> Missing(params Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMissing[] values)
	{
		Instance.Missing = [.. values];
		return this;
	}

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor<TDocument> Mode(System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMode>? value)
	{
		Instance.Mode = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor<TDocument> Mode(params Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMode[] values)
	{
		Instance.Mode = [.. values];
		return this;
	}

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor<TDocument> Order(System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortOrder>? value)
	{
		Instance.Order = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor<TDocument> Order(params Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortOrder[] values)
	{
		Instance.Order = [.. values];
		return this;
	}

	[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	internal static Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort Build(System.Action<Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor<TDocument>>? action)
	{
		if (action is null)
		{
			return new Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance);
		}

		var builder = new Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor<TDocument>(new Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance));
		action.Invoke(builder);
		return builder.Instance;
	}
}

public readonly partial struct IndexSegmentSortDescriptor
{
	internal Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort Instance { get; init; }

	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public IndexSegmentSortDescriptor(Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort instance)
	{
		Instance = instance;
	}

	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public IndexSegmentSortDescriptor()
	{
		Instance = new Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance);
	}

	public static explicit operator Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor(Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort instance) => new Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor(instance);
	public static implicit operator Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort(Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor descriptor) => descriptor.Instance;

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor Field(Elastic.Clients.Elasticsearch.Fields? value)
	{
		Instance.Field = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor Field<T>(params System.Linq.Expressions.Expression<System.Func<T, object?>>[] value)
	{
		Instance.Field = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor Missing(System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMissing>? value)
	{
		Instance.Missing = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor Missing(params Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMissing[] values)
	{
		Instance.Missing = [.. values];
		return this;
	}

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor Mode(System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMode>? value)
	{
		Instance.Mode = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor Mode(params Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortMode[] values)
	{
		Instance.Mode = [.. values];
		return this;
	}

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor Order(System.Collections.Generic.ICollection<Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortOrder>? value)
	{
		Instance.Order = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor Order(params Elastic.Clients.Elasticsearch.IndexManagement.SegmentSortOrder[] values)
	{
		Instance.Order = [.. values];
		return this;
	}

	[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	internal static Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort Build(System.Action<Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor>? action)
	{
		if (action is null)
		{
			return new Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance);
		}

		var builder = new Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSortDescriptor(new Elastic.Clients.Elasticsearch.IndexManagement.IndexSegmentSort(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance));
		action.Invoke(builder);
		return builder.Instance;
	}
}
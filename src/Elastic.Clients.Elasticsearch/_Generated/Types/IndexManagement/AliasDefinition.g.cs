// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.IndexManagement;

public sealed partial class AliasDefinition
{
	/// <summary>
	/// <para>
	/// Query used to limit documents the alias can access.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("filter")]
	public Elastic.Clients.Elasticsearch.QueryDsl.Query? Filter { get; init; }

	/// <summary>
	/// <para>
	/// Value used to route indexing operations to a specific shard.
	/// If specified, this overwrites the <c>routing</c> value for indexing operations.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("index_routing")]
	public string? IndexRouting { get; init; }

	/// <summary>
	/// <para>
	/// If <c>true</c>, the alias is hidden.
	/// All indices for the alias must have the same <c>is_hidden</c> value.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("is_hidden")]
	public bool? IsHidden { get; init; }

	/// <summary>
	/// <para>
	/// If <c>true</c>, the index is the write index for the alias.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("is_write_index")]
	public bool? IsWriteIndex { get; init; }

	/// <summary>
	/// <para>
	/// Value used to route indexing and search operations to a specific shard.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("routing")]
	public string? Routing { get; init; }

	/// <summary>
	/// <para>
	/// Value used to route search operations to a specific shard.
	/// If specified, this overwrites the <c>routing</c> value for search operations.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("search_routing")]
	public string? SearchRouting { get; init; }
}
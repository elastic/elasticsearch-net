// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Ingest;

public sealed partial class InputConfig
{
	[JsonInclude, JsonPropertyName("input_field")]
	public string InputField { get; set; }
	[JsonInclude, JsonPropertyName("output_field")]
	public string OutputField { get; set; }
}

public sealed partial class InputConfigDescriptor : SerializableDescriptor<InputConfigDescriptor>
{
	internal InputConfigDescriptor(Action<InputConfigDescriptor> configure) => configure.Invoke(this);

	public InputConfigDescriptor() : base()
	{
	}

	private string InputFieldValue { get; set; }
	private string OutputFieldValue { get; set; }

	public InputConfigDescriptor InputField(string inputField)
	{
		InputFieldValue = inputField;
		return Self;
	}

	public InputConfigDescriptor OutputField(string outputField)
	{
		OutputFieldValue = outputField;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		writer.WritePropertyName("input_field");
		writer.WriteStringValue(InputFieldValue);
		writer.WritePropertyName("output_field");
		writer.WriteStringValue(OutputFieldValue);
		writer.WriteEndObject();
	}
}
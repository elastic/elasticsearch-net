// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch
{
	public partial class RemoteSource
	{
		[JsonInclude]
		[JsonPropertyName("connect_timeout")]
		public Elastic.Clients.Elasticsearch.Time ConnectTimeout { get; set; }

		[JsonInclude]
		[JsonPropertyName("host")]
		public string Host { get; set; }

		[JsonInclude]
		[JsonPropertyName("password")]
		public string Password { get; set; }

		[JsonInclude]
		[JsonPropertyName("socket_timeout")]
		public Elastic.Clients.Elasticsearch.Time SocketTimeout { get; set; }

		[JsonInclude]
		[JsonPropertyName("username")]
		public Elastic.Clients.Elasticsearch.Username Username { get; set; }
	}

	public sealed partial class RemoteSourceDescriptor : DescriptorBase<RemoteSourceDescriptor>
	{
		internal RemoteSourceDescriptor(Action<RemoteSourceDescriptor> configure) => configure.Invoke(this);
		public RemoteSourceDescriptor() : base()
		{
		}

		private Elastic.Clients.Elasticsearch.Time ConnectTimeoutValue { get; set; }

		private string HostValue { get; set; }

		private string PasswordValue { get; set; }

		private Elastic.Clients.Elasticsearch.Time SocketTimeoutValue { get; set; }

		private Elastic.Clients.Elasticsearch.Username UsernameValue { get; set; }

		public RemoteSourceDescriptor ConnectTimeout(Elastic.Clients.Elasticsearch.Time connectTimeout)
		{
			ConnectTimeoutValue = connectTimeout;
			return Self;
		}

		public RemoteSourceDescriptor Host(string host)
		{
			HostValue = host;
			return Self;
		}

		public RemoteSourceDescriptor Password(string password)
		{
			PasswordValue = password;
			return Self;
		}

		public RemoteSourceDescriptor SocketTimeout(Elastic.Clients.Elasticsearch.Time socketTimeout)
		{
			SocketTimeoutValue = socketTimeout;
			return Self;
		}

		public RemoteSourceDescriptor Username(Elastic.Clients.Elasticsearch.Username username)
		{
			UsernameValue = username;
			return Self;
		}

		protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("connect_timeout");
			JsonSerializer.Serialize(writer, ConnectTimeoutValue, options);
			writer.WritePropertyName("host");
			JsonSerializer.Serialize(writer, HostValue, options);
			writer.WritePropertyName("password");
			JsonSerializer.Serialize(writer, PasswordValue, options);
			writer.WritePropertyName("socket_timeout");
			JsonSerializer.Serialize(writer, SocketTimeoutValue, options);
			writer.WritePropertyName("username");
			JsonSerializer.Serialize(writer, UsernameValue, options);
			writer.WriteEndObject();
		}
	}
}
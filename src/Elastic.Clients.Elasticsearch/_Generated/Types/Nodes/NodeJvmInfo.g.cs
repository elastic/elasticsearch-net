// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using System;
using System.Linq;
using Elastic.Clients.Elasticsearch.Serialization;

namespace Elastic.Clients.Elasticsearch.Nodes;

[System.Text.Json.Serialization.JsonConverter(typeof(Elastic.Clients.Elasticsearch.Nodes.Json.NodeJvmInfoConverter))]
public sealed partial class NodeJvmInfo
{
	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public NodeJvmInfo(System.Collections.Generic.IReadOnlyCollection<string> gcCollectors, System.Collections.Generic.IReadOnlyCollection<string> inputArguments, Elastic.Clients.Elasticsearch.Nodes.NodeInfoJvmMemory mem, System.Collections.Generic.IReadOnlyCollection<string> memoryPools, int pid, System.DateTimeOffset startTimeInMillis, bool usingBundledJdk, string version, string vmName, string vmVendor, string vmVersion)
	{
		GcCollectors = gcCollectors;
		InputArguments = inputArguments;
		Mem = mem;
		MemoryPools = memoryPools;
		Pid = pid;
		StartTimeInMillis = startTimeInMillis;
		UsingBundledJdk = usingBundledJdk;
		Version = version;
		VmName = vmName;
		VmVendor = vmVendor;
		VmVersion = vmVersion;
	}
#if NET7_0_OR_GREATER
	public NodeJvmInfo()
	{
	}
#endif
#if !NET7_0_OR_GREATER
	[System.Obsolete("The type contains required properties that must be initialized. Please use an alternative constructor to ensure all required values are properly set.")]
	public NodeJvmInfo()
	{
	}
#endif
	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	internal NodeJvmInfo(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel sentinel)
	{
		_ = sentinel;
	}

	public
#if NET7_0_OR_GREATER
	required
#endif
	System.Collections.Generic.IReadOnlyCollection<string> GcCollectors { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	System.Collections.Generic.IReadOnlyCollection<string> InputArguments { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	Elastic.Clients.Elasticsearch.Nodes.NodeInfoJvmMemory Mem { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	System.Collections.Generic.IReadOnlyCollection<string> MemoryPools { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	int Pid { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	System.DateTimeOffset StartTimeInMillis { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	bool UsingBundledJdk { get; set; }
	public Elastic.Clients.Elasticsearch.Union<bool, string>? UsingCompressedOrdinaryObjectPointers { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	string Version { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	string VmName { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	string VmVendor { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	string VmVersion { get; set; }
}
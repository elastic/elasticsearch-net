// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Nodes
{
	public partial class Transport
	{
		[JsonInclude]
		[JsonPropertyName("inbound_handling_time_histogram")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Nodes.TransportHistogram>? InboundHandlingTimeHistogram { get; init; }

		[JsonInclude]
		[JsonPropertyName("outbound_handling_time_histogram")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Nodes.TransportHistogram>? OutboundHandlingTimeHistogram { get; init; }

		[JsonInclude]
		[JsonPropertyName("rx_count")]
		public long? RxCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("rx_size")]
		public string? RxSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("rx_size_in_bytes")]
		public long? RxSizeInBytes { get; init; }

		[JsonInclude]
		[JsonPropertyName("server_open")]
		public int? ServerOpen { get; init; }

		[JsonInclude]
		[JsonPropertyName("total_outbound_connections")]
		public long? TotalOutboundConnections { get; init; }

		[JsonInclude]
		[JsonPropertyName("tx_count")]
		public long? TxCount { get; init; }

		[JsonInclude]
		[JsonPropertyName("tx_size")]
		public string? TxSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("tx_size_in_bytes")]
		public long? TxSizeInBytes { get; init; }
	}
}
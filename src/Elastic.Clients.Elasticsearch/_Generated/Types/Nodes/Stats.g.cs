// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Nodes
{
	public sealed partial class Stats
	{
		[JsonInclude]
		[JsonPropertyName("adaptive_selection")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.Nodes.AdaptiveSelection>? AdaptiveSelection { get; init; }

		[JsonInclude]
		[JsonPropertyName("attributes")]
		public Dictionary<Elastic.Clients.Elasticsearch.Field, string>? Attributes { get; init; }

		[JsonInclude]
		[JsonPropertyName("breakers")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.Nodes.Breaker>? Breakers { get; init; }

		[JsonInclude]
		[JsonPropertyName("discovery")]
		public Elastic.Clients.Elasticsearch.Nodes.Discovery? Discovery { get; init; }

		[JsonInclude]
		[JsonPropertyName("fs")]
		public Elastic.Clients.Elasticsearch.Nodes.FileSystem? Fs { get; init; }

		[JsonInclude]
		[JsonPropertyName("host")]
		public string? Host { get; init; }

		[JsonInclude]
		[JsonPropertyName("http")]
		public Elastic.Clients.Elasticsearch.Nodes.Http? Http { get; init; }

		[JsonInclude]
		[JsonPropertyName("indexing_pressure")]
		public Elastic.Clients.Elasticsearch.Nodes.IndexingPressure? IndexingPressure { get; init; }

		[JsonInclude]
		[JsonPropertyName("indices")]
		public Elastic.Clients.Elasticsearch.IndexManagement.ShardStats? Indices { get; init; }

		[JsonInclude]
		[JsonPropertyName("ingest")]
		public Elastic.Clients.Elasticsearch.Nodes.Ingest? Ingest { get; init; }

		[JsonInclude]
		[JsonPropertyName("ip")]
		public IReadOnlyCollection<string>? Ip { get; init; }

		[JsonInclude]
		[JsonPropertyName("jvm")]
		public Elastic.Clients.Elasticsearch.Nodes.Jvm? Jvm { get; init; }

		[JsonInclude]
		[JsonPropertyName("name")]
		public string? Name { get; init; }

		[JsonInclude]
		[JsonPropertyName("os")]
		public Elastic.Clients.Elasticsearch.Nodes.OperatingSystem? Os { get; init; }

		[JsonInclude]
		[JsonPropertyName("process")]
		public Elastic.Clients.Elasticsearch.Nodes.Process? Process { get; init; }

		[JsonInclude]
		[JsonPropertyName("roles")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.NodeRole>? Roles { get; init; }

		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Nodes.Scripting? Script { get; init; }

		[JsonInclude]
		[JsonPropertyName("script_cache")]
		public Dictionary<string, IReadOnlyCollection<Elastic.Clients.Elasticsearch.Nodes.ScriptCache>>? ScriptCache { get; init; }

		[JsonInclude]
		[JsonPropertyName("thread_pool")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.Nodes.ThreadCount>? ThreadPool { get; init; }

		[JsonInclude]
		[JsonPropertyName("timestamp")]
		public long? Timestamp { get; init; }

		[JsonInclude]
		[JsonPropertyName("transport")]
		public Elastic.Clients.Elasticsearch.Nodes.Transport? Transport { get; init; }

		[JsonInclude]
		[JsonPropertyName("transport_address")]
		public string? TransportAddress { get; init; }
	}
}
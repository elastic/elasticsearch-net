// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System;
using System.Collections.Generic;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Mapping
{
	public interface IPropertiesVariant
	{
	}

	public interface IProperties : IIsADictionary<string, IPropertiesVariant>
	{
	}

	public class Properties : IsADictionaryBase<string, IPropertiesVariant>
	{
		public void Add(PropertyName name, IPropertiesVariant property) => BackingDictionary.Add(name.Name /*Sanitize(name)*/, property);

		//protected override string Sanitize(string key) => base.Sanitize(key);

		//protected override PropertyName Sanitize(PropertyName key) => _settings?.Inferrer.PropertyName(key) ?? key;
	}
}

// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using System;
using System.Linq;
using Elastic.Clients.Elasticsearch.Serialization;

namespace Elastic.Clients.Elasticsearch.Mapping;

[System.Text.Json.Serialization.JsonConverter(typeof(Elastic.Clients.Elasticsearch.Mapping.Json.IcuCollationPropertyConverter))]
public sealed partial class IcuCollationProperty : Elastic.Clients.Elasticsearch.Mapping.IProperty
{
#if NET7_0_OR_GREATER
	public IcuCollationProperty()
	{
	}
#endif
#if !NET7_0_OR_GREATER
	public IcuCollationProperty()
	{
	}
#endif
	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	internal IcuCollationProperty(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel sentinel)
	{
		_ = sentinel;
	}

	public Elastic.Clients.Elasticsearch.Analysis.IcuCollationAlternate? Alternate { get; set; }
	public Elastic.Clients.Elasticsearch.Analysis.IcuCollationCaseFirst? CaseFirst { get; set; }
	public bool? CaseLevel { get; set; }
	public Elastic.Clients.Elasticsearch.Fields? CopyTo { get; set; }
	public string? Country { get; set; }
	public Elastic.Clients.Elasticsearch.Analysis.IcuCollationDecomposition? Decomposition { get; set; }
	public bool? DocValues { get; set; }
	public Elastic.Clients.Elasticsearch.Mapping.DynamicMapping? Dynamic { get; set; }
	public Elastic.Clients.Elasticsearch.Mapping.Properties? Fields { get; set; }
	public bool? HiraganaQuaternaryMode { get; set; }
	public int? IgnoreAbove { get; set; }

	/// <summary>
	/// <para>
	/// Should the field be searchable?
	/// </para>
	/// </summary>
	public bool? Index { get; set; }
	public Elastic.Clients.Elasticsearch.Mapping.IndexOptions? IndexOptions { get; set; }
	public string? Language { get; set; }

	/// <summary>
	/// <para>
	/// Metadata about the field.
	/// </para>
	/// </summary>
	public System.Collections.Generic.IDictionary<string, string>? Meta { get; set; }
	public bool? Norms { get; set; }

	/// <summary>
	/// <para>
	/// Accepts a string value which is substituted for any explicit null values. Defaults to null, which means the field is treated as missing.
	/// </para>
	/// </summary>
	public string? NullValue { get; set; }
	public bool? Numeric { get; set; }
	public Elastic.Clients.Elasticsearch.Mapping.Properties? Properties { get; set; }
	public string? Rules { get; set; }
	public bool? Store { get; set; }
	public Elastic.Clients.Elasticsearch.Analysis.IcuCollationStrength? Strength { get; set; }
	public Elastic.Clients.Elasticsearch.Mapping.SyntheticSourceKeepEnum? SyntheticSourceKeep { get; set; }

	public string Type => "icu_collation_keyword";

	public string? VariableTop { get; set; }
	public string? Variant { get; set; }
}

public readonly partial struct IcuCollationPropertyDescriptor<TDocument>
{
	internal Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty Instance { get; init; }

	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public IcuCollationPropertyDescriptor(Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty instance)
	{
		Instance = instance;
	}

	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public IcuCollationPropertyDescriptor()
	{
		Instance = new Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance);
	}

	public static explicit operator Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument>(Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty instance) => new Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument>(instance);
	public static implicit operator Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty(Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> descriptor) => descriptor.Instance;

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Alternate(Elastic.Clients.Elasticsearch.Analysis.IcuCollationAlternate? value)
	{
		Instance.Alternate = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> CaseFirst(Elastic.Clients.Elasticsearch.Analysis.IcuCollationCaseFirst? value)
	{
		Instance.CaseFirst = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> CaseLevel(bool? value = true)
	{
		Instance.CaseLevel = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> CopyTo(Elastic.Clients.Elasticsearch.Fields? value)
	{
		Instance.CopyTo = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> CopyTo(params System.Linq.Expressions.Expression<System.Func<TDocument, object?>>[] value)
	{
		Instance.CopyTo = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Country(string? value)
	{
		Instance.Country = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Decomposition(Elastic.Clients.Elasticsearch.Analysis.IcuCollationDecomposition? value)
	{
		Instance.Decomposition = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> DocValues(bool? value = true)
	{
		Instance.DocValues = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Dynamic(Elastic.Clients.Elasticsearch.Mapping.DynamicMapping? value)
	{
		Instance.Dynamic = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Fields(Elastic.Clients.Elasticsearch.Mapping.Properties? value)
	{
		Instance.Fields = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Fields(System.Action<Elastic.Clients.Elasticsearch.Mapping.PropertiesDescriptor<TDocument>> action)
	{
		Instance.Fields = Elastic.Clients.Elasticsearch.Mapping.PropertiesDescriptor<TDocument>.Build(action);
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> HiraganaQuaternaryMode(bool? value = true)
	{
		Instance.HiraganaQuaternaryMode = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> IgnoreAbove(int? value)
	{
		Instance.IgnoreAbove = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Should the field be searchable?
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Index(bool? value = true)
	{
		Instance.Index = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> IndexOptions(Elastic.Clients.Elasticsearch.Mapping.IndexOptions? value)
	{
		Instance.IndexOptions = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Language(string? value)
	{
		Instance.Language = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Metadata about the field.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Meta(System.Collections.Generic.IDictionary<string, string>? value)
	{
		Instance.Meta = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Metadata about the field.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Meta()
	{
		Instance.Meta = Elastic.Clients.Elasticsearch.Fluent.FluentDictionaryOfStringString.Build(null);
		return this;
	}

	/// <summary>
	/// <para>
	/// Metadata about the field.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Meta(System.Action<Elastic.Clients.Elasticsearch.Fluent.FluentDictionaryOfStringString>? action)
	{
		Instance.Meta = Elastic.Clients.Elasticsearch.Fluent.FluentDictionaryOfStringString.Build(action);
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> AddMeta(string key, string value)
	{
		Instance.Meta ??= new System.Collections.Generic.Dictionary<string, string>();
		Instance.Meta.Add(key, value);
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Norms(bool? value = true)
	{
		Instance.Norms = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Accepts a string value which is substituted for any explicit null values. Defaults to null, which means the field is treated as missing.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> NullValue(string? value)
	{
		Instance.NullValue = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Numeric(bool? value = true)
	{
		Instance.Numeric = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Properties(Elastic.Clients.Elasticsearch.Mapping.Properties? value)
	{
		Instance.Properties = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Properties(System.Action<Elastic.Clients.Elasticsearch.Mapping.PropertiesDescriptor<TDocument>> action)
	{
		Instance.Properties = Elastic.Clients.Elasticsearch.Mapping.PropertiesDescriptor<TDocument>.Build(action);
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Rules(string? value)
	{
		Instance.Rules = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Store(bool? value = true)
	{
		Instance.Store = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Strength(Elastic.Clients.Elasticsearch.Analysis.IcuCollationStrength? value)
	{
		Instance.Strength = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> SyntheticSourceKeep(Elastic.Clients.Elasticsearch.Mapping.SyntheticSourceKeepEnum? value)
	{
		Instance.SyntheticSourceKeep = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> VariableTop(string? value)
	{
		Instance.VariableTop = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument> Variant(string? value)
	{
		Instance.Variant = value;
		return this;
	}

	[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	internal static Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty Build(System.Action<Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument>>? action)
	{
		if (action is null)
		{
			return new Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance);
		}

		var builder = new Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor<TDocument>(new Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance));
		action.Invoke(builder);
		return builder.Instance;
	}
}

public readonly partial struct IcuCollationPropertyDescriptor
{
	internal Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty Instance { get; init; }

	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public IcuCollationPropertyDescriptor(Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty instance)
	{
		Instance = instance;
	}

	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public IcuCollationPropertyDescriptor()
	{
		Instance = new Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance);
	}

	public static explicit operator Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor(Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty instance) => new Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor(instance);
	public static implicit operator Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty(Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor descriptor) => descriptor.Instance;

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Alternate(Elastic.Clients.Elasticsearch.Analysis.IcuCollationAlternate? value)
	{
		Instance.Alternate = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor CaseFirst(Elastic.Clients.Elasticsearch.Analysis.IcuCollationCaseFirst? value)
	{
		Instance.CaseFirst = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor CaseLevel(bool? value = true)
	{
		Instance.CaseLevel = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor CopyTo(Elastic.Clients.Elasticsearch.Fields? value)
	{
		Instance.CopyTo = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor CopyTo<T>(params System.Linq.Expressions.Expression<System.Func<T, object?>>[] value)
	{
		Instance.CopyTo = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Country(string? value)
	{
		Instance.Country = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Decomposition(Elastic.Clients.Elasticsearch.Analysis.IcuCollationDecomposition? value)
	{
		Instance.Decomposition = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor DocValues(bool? value = true)
	{
		Instance.DocValues = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Dynamic(Elastic.Clients.Elasticsearch.Mapping.DynamicMapping? value)
	{
		Instance.Dynamic = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Fields(Elastic.Clients.Elasticsearch.Mapping.Properties? value)
	{
		Instance.Fields = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Fields(System.Action<Elastic.Clients.Elasticsearch.Mapping.PropertiesDescriptor> action)
	{
		Instance.Fields = Elastic.Clients.Elasticsearch.Mapping.PropertiesDescriptor.Build(action);
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Fields<T>(System.Action<Elastic.Clients.Elasticsearch.Mapping.PropertiesDescriptor<T>> action)
	{
		Instance.Fields = Elastic.Clients.Elasticsearch.Mapping.PropertiesDescriptor<T>.Build(action);
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor HiraganaQuaternaryMode(bool? value = true)
	{
		Instance.HiraganaQuaternaryMode = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor IgnoreAbove(int? value)
	{
		Instance.IgnoreAbove = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Should the field be searchable?
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Index(bool? value = true)
	{
		Instance.Index = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor IndexOptions(Elastic.Clients.Elasticsearch.Mapping.IndexOptions? value)
	{
		Instance.IndexOptions = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Language(string? value)
	{
		Instance.Language = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Metadata about the field.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Meta(System.Collections.Generic.IDictionary<string, string>? value)
	{
		Instance.Meta = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Metadata about the field.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Meta()
	{
		Instance.Meta = Elastic.Clients.Elasticsearch.Fluent.FluentDictionaryOfStringString.Build(null);
		return this;
	}

	/// <summary>
	/// <para>
	/// Metadata about the field.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Meta(System.Action<Elastic.Clients.Elasticsearch.Fluent.FluentDictionaryOfStringString>? action)
	{
		Instance.Meta = Elastic.Clients.Elasticsearch.Fluent.FluentDictionaryOfStringString.Build(action);
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor AddMeta(string key, string value)
	{
		Instance.Meta ??= new System.Collections.Generic.Dictionary<string, string>();
		Instance.Meta.Add(key, value);
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Norms(bool? value = true)
	{
		Instance.Norms = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Accepts a string value which is substituted for any explicit null values. Defaults to null, which means the field is treated as missing.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor NullValue(string? value)
	{
		Instance.NullValue = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Numeric(bool? value = true)
	{
		Instance.Numeric = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Properties(Elastic.Clients.Elasticsearch.Mapping.Properties? value)
	{
		Instance.Properties = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Properties(System.Action<Elastic.Clients.Elasticsearch.Mapping.PropertiesDescriptor> action)
	{
		Instance.Properties = Elastic.Clients.Elasticsearch.Mapping.PropertiesDescriptor.Build(action);
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Properties<T>(System.Action<Elastic.Clients.Elasticsearch.Mapping.PropertiesDescriptor<T>> action)
	{
		Instance.Properties = Elastic.Clients.Elasticsearch.Mapping.PropertiesDescriptor<T>.Build(action);
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Rules(string? value)
	{
		Instance.Rules = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Store(bool? value = true)
	{
		Instance.Store = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Strength(Elastic.Clients.Elasticsearch.Analysis.IcuCollationStrength? value)
	{
		Instance.Strength = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor SyntheticSourceKeep(Elastic.Clients.Elasticsearch.Mapping.SyntheticSourceKeepEnum? value)
	{
		Instance.SyntheticSourceKeep = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor VariableTop(string? value)
	{
		Instance.VariableTop = value;
		return this;
	}

	public Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor Variant(string? value)
	{
		Instance.Variant = value;
		return this;
	}

	[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	internal static Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty Build(System.Action<Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor>? action)
	{
		if (action is null)
		{
			return new Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance);
		}

		var builder = new Elastic.Clients.Elasticsearch.Mapping.IcuCollationPropertyDescriptor(new Elastic.Clients.Elasticsearch.Mapping.IcuCollationProperty(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance));
		action.Invoke(builder);
		return builder.Instance;
	}
}
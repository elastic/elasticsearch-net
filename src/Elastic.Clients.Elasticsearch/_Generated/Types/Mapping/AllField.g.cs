// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Mapping
{
	public partial class AllField
	{
		[JsonInclude]
		[JsonPropertyName("analyzer")]
		public string Analyzer { get; set; }

		[JsonInclude]
		[JsonPropertyName("enabled")]
		public bool Enabled { get; set; }

		[JsonInclude]
		[JsonPropertyName("omit_norms")]
		public bool OmitNorms { get; set; }

		[JsonInclude]
		[JsonPropertyName("search_analyzer")]
		public string SearchAnalyzer { get; set; }

		[JsonInclude]
		[JsonPropertyName("similarity")]
		public string Similarity { get; set; }

		[JsonInclude]
		[JsonPropertyName("store")]
		public bool Store { get; set; }

		[JsonInclude]
		[JsonPropertyName("store_term_vector_offsets")]
		public bool StoreTermVectorOffsets { get; set; }

		[JsonInclude]
		[JsonPropertyName("store_term_vector_payloads")]
		public bool StoreTermVectorPayloads { get; set; }

		[JsonInclude]
		[JsonPropertyName("store_term_vector_positions")]
		public bool StoreTermVectorPositions { get; set; }

		[JsonInclude]
		[JsonPropertyName("store_term_vectors")]
		public bool StoreTermVectors { get; set; }
	}

	public sealed partial class AllFieldDescriptor : DescriptorBase<AllFieldDescriptor>
	{
		public AllFieldDescriptor()
		{
		}

		internal AllFieldDescriptor(Action<AllFieldDescriptor> configure) => configure.Invoke(this);
		internal string AnalyzerValue { get; private set; }

		internal bool EnabledValue { get; private set; }

		internal bool OmitNormsValue { get; private set; }

		internal string SearchAnalyzerValue { get; private set; }

		internal string SimilarityValue { get; private set; }

		internal bool StoreValue { get; private set; }

		internal bool StoreTermVectorOffsetsValue { get; private set; }

		internal bool StoreTermVectorPayloadsValue { get; private set; }

		internal bool StoreTermVectorPositionsValue { get; private set; }

		internal bool StoreTermVectorsValue { get; private set; }

		public AllFieldDescriptor Analyzer(string analyzer) => Assign(analyzer, (a, v) => a.AnalyzerValue = v);
		public AllFieldDescriptor Enabled(bool enabled = true) => Assign(enabled, (a, v) => a.EnabledValue = v);
		public AllFieldDescriptor OmitNorms(bool omitNorms = true) => Assign(omitNorms, (a, v) => a.OmitNormsValue = v);
		public AllFieldDescriptor SearchAnalyzer(string searchAnalyzer) => Assign(searchAnalyzer, (a, v) => a.SearchAnalyzerValue = v);
		public AllFieldDescriptor Similarity(string similarity) => Assign(similarity, (a, v) => a.SimilarityValue = v);
		public AllFieldDescriptor Store(bool store = true) => Assign(store, (a, v) => a.StoreValue = v);
		public AllFieldDescriptor StoreTermVectorOffsets(bool storeTermVectorOffsets = true) => Assign(storeTermVectorOffsets, (a, v) => a.StoreTermVectorOffsetsValue = v);
		public AllFieldDescriptor StoreTermVectorPayloads(bool storeTermVectorPayloads = true) => Assign(storeTermVectorPayloads, (a, v) => a.StoreTermVectorPayloadsValue = v);
		public AllFieldDescriptor StoreTermVectorPositions(bool storeTermVectorPositions = true) => Assign(storeTermVectorPositions, (a, v) => a.StoreTermVectorPositionsValue = v);
		public AllFieldDescriptor StoreTermVectors(bool storeTermVectors = true) => Assign(storeTermVectors, (a, v) => a.StoreTermVectorsValue = v);
		protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("analyzer");
			writer.WriteStringValue(AnalyzerValue);
			writer.WritePropertyName("enabled");
			writer.WriteBooleanValue(EnabledValue);
			writer.WritePropertyName("omit_norms");
			writer.WriteBooleanValue(OmitNormsValue);
			writer.WritePropertyName("search_analyzer");
			writer.WriteStringValue(SearchAnalyzerValue);
			writer.WritePropertyName("similarity");
			writer.WriteStringValue(SimilarityValue);
			writer.WritePropertyName("store");
			writer.WriteBooleanValue(StoreValue);
			writer.WritePropertyName("store_term_vector_offsets");
			writer.WriteBooleanValue(StoreTermVectorOffsetsValue);
			writer.WritePropertyName("store_term_vector_payloads");
			writer.WriteBooleanValue(StoreTermVectorPayloadsValue);
			writer.WritePropertyName("store_term_vector_positions");
			writer.WriteBooleanValue(StoreTermVectorPositionsValue);
			writer.WritePropertyName("store_term_vectors");
			writer.WriteBooleanValue(StoreTermVectorsValue);
			writer.WriteEndObject();
		}
	}
}
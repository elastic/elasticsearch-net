// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Inference;

public sealed partial class AzureOpenAITaskSettings
{
	/// <summary>
	/// <para>
	/// For a <c>completion</c> or <c>text_embedding</c> task, specify the user issuing the request.
	/// This information can be used for abuse detection.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("user")]
	public string? User { get; set; }
}

public sealed partial class AzureOpenAITaskSettingsDescriptor : SerializableDescriptor<AzureOpenAITaskSettingsDescriptor>
{
	internal AzureOpenAITaskSettingsDescriptor(Action<AzureOpenAITaskSettingsDescriptor> configure) => configure.Invoke(this);

	public AzureOpenAITaskSettingsDescriptor() : base()
	{
	}

	private string? UserValue { get; set; }

	/// <summary>
	/// <para>
	/// For a <c>completion</c> or <c>text_embedding</c> task, specify the user issuing the request.
	/// This information can be used for abuse detection.
	/// </para>
	/// </summary>
	public AzureOpenAITaskSettingsDescriptor User(string? user)
	{
		UserValue = user;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		if (!string.IsNullOrEmpty(UserValue))
		{
			writer.WritePropertyName("user");
			writer.WriteStringValue(UserValue);
		}

		writer.WriteEndObject();
	}
}
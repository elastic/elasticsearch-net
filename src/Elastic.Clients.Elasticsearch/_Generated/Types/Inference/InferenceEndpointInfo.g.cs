// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using System;
using System.Linq;
using Elastic.Clients.Elasticsearch.Serialization;

namespace Elastic.Clients.Elasticsearch.Inference;

/// <summary>
/// <para>
/// Represents an inference endpoint as returned by the GET API
/// </para>
/// </summary>
[System.Text.Json.Serialization.JsonConverter(typeof(Elastic.Clients.Elasticsearch.Inference.Json.InferenceEndpointInfoConverter))]
public sealed partial class InferenceEndpointInfo
{
	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public InferenceEndpointInfo(string inferenceId, string service, object serviceSettings, Elastic.Clients.Elasticsearch.Inference.TaskType taskType)
	{
		InferenceId = inferenceId;
		Service = service;
		ServiceSettings = serviceSettings;
		TaskType = taskType;
	}
#if NET7_0_OR_GREATER
	public InferenceEndpointInfo()
	{
	}
#endif
#if !NET7_0_OR_GREATER
	[System.Obsolete("The type contains required properties that must be initialized. Please use an alternative constructor to ensure all required values are properly set.")]
	public InferenceEndpointInfo()
	{
	}
#endif
	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	internal InferenceEndpointInfo(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel sentinel)
	{
		_ = sentinel;
	}

	/// <summary>
	/// <para>
	/// Chunking configuration object
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Inference.InferenceChunkingSettings? ChunkingSettings { get; set; }

	/// <summary>
	/// <para>
	/// The inference Id
	/// </para>
	/// </summary>
	public
#if NET7_0_OR_GREATER
	required
#endif
	string InferenceId { get; set; }

	/// <summary>
	/// <para>
	/// The service type
	/// </para>
	/// </summary>
	public
#if NET7_0_OR_GREATER
	required
#endif
	string Service { get; set; }

	/// <summary>
	/// <para>
	/// Settings specific to the service
	/// </para>
	/// </summary>
	public
#if NET7_0_OR_GREATER
	required
#endif
	object ServiceSettings { get; set; }

	/// <summary>
	/// <para>
	/// Task settings specific to the service and task type
	/// </para>
	/// </summary>
	public object? TaskSettings { get; set; }

	/// <summary>
	/// <para>
	/// The task type
	/// </para>
	/// </summary>
	public
#if NET7_0_OR_GREATER
	required
#endif
	Elastic.Clients.Elasticsearch.Inference.TaskType TaskType { get; set; }
}
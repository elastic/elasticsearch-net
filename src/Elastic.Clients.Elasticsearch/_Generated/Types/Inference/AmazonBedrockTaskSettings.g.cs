// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Inference;

public sealed partial class AmazonBedrockTaskSettings
{
	/// <summary>
	/// <para>
	/// For a <c>completion</c> task, it sets the maximum number for the output tokens to be generated.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("max_new_tokens")]
	public int? MaxNewTokens { get; set; }

	/// <summary>
	/// <para>
	/// For a <c>completion</c> task, it is a number between 0.0 and 1.0 that controls the apparent creativity of the results.
	/// At temperature 0.0 the model is most deterministic, at temperature 1.0 most random.
	/// It should not be used if <c>top_p</c> or <c>top_k</c> is specified.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("temperature")]
	public float? Temperature { get; set; }

	/// <summary>
	/// <para>
	/// For a <c>completion</c> task, it limits samples to the top-K most likely words, balancing coherence and variability.
	/// It is only available for anthropic, cohere, and mistral providers.
	/// It is an alternative to <c>temperature</c>; it should not be used if <c>temperature</c> is specified.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("top_k")]
	public float? TopK { get; set; }

	/// <summary>
	/// <para>
	/// For a <c>completion</c> task, it is a number in the range of 0.0 to 1.0, to eliminate low-probability tokens.
	/// Top-p uses nucleus sampling to select top tokens whose sum of likelihoods does not exceed a certain value, ensuring both variety and coherence.
	/// It is an alternative to <c>temperature</c>; it should not be used if <c>temperature</c> is specified.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("top_p")]
	public float? TopP { get; set; }
}

public sealed partial class AmazonBedrockTaskSettingsDescriptor : SerializableDescriptor<AmazonBedrockTaskSettingsDescriptor>
{
	internal AmazonBedrockTaskSettingsDescriptor(Action<AmazonBedrockTaskSettingsDescriptor> configure) => configure.Invoke(this);

	public AmazonBedrockTaskSettingsDescriptor() : base()
	{
	}

	private int? MaxNewTokensValue { get; set; }
	private float? TemperatureValue { get; set; }
	private float? TopKValue { get; set; }
	private float? TopPValue { get; set; }

	/// <summary>
	/// <para>
	/// For a <c>completion</c> task, it sets the maximum number for the output tokens to be generated.
	/// </para>
	/// </summary>
	public AmazonBedrockTaskSettingsDescriptor MaxNewTokens(int? maxNewTokens)
	{
		MaxNewTokensValue = maxNewTokens;
		return Self;
	}

	/// <summary>
	/// <para>
	/// For a <c>completion</c> task, it is a number between 0.0 and 1.0 that controls the apparent creativity of the results.
	/// At temperature 0.0 the model is most deterministic, at temperature 1.0 most random.
	/// It should not be used if <c>top_p</c> or <c>top_k</c> is specified.
	/// </para>
	/// </summary>
	public AmazonBedrockTaskSettingsDescriptor Temperature(float? temperature)
	{
		TemperatureValue = temperature;
		return Self;
	}

	/// <summary>
	/// <para>
	/// For a <c>completion</c> task, it limits samples to the top-K most likely words, balancing coherence and variability.
	/// It is only available for anthropic, cohere, and mistral providers.
	/// It is an alternative to <c>temperature</c>; it should not be used if <c>temperature</c> is specified.
	/// </para>
	/// </summary>
	public AmazonBedrockTaskSettingsDescriptor TopK(float? topK)
	{
		TopKValue = topK;
		return Self;
	}

	/// <summary>
	/// <para>
	/// For a <c>completion</c> task, it is a number in the range of 0.0 to 1.0, to eliminate low-probability tokens.
	/// Top-p uses nucleus sampling to select top tokens whose sum of likelihoods does not exceed a certain value, ensuring both variety and coherence.
	/// It is an alternative to <c>temperature</c>; it should not be used if <c>temperature</c> is specified.
	/// </para>
	/// </summary>
	public AmazonBedrockTaskSettingsDescriptor TopP(float? topP)
	{
		TopPValue = topP;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		if (MaxNewTokensValue.HasValue)
		{
			writer.WritePropertyName("max_new_tokens");
			writer.WriteNumberValue(MaxNewTokensValue.Value);
		}

		if (TemperatureValue.HasValue)
		{
			writer.WritePropertyName("temperature");
			writer.WriteNumberValue(TemperatureValue.Value);
		}

		if (TopKValue.HasValue)
		{
			writer.WritePropertyName("top_k");
			writer.WriteNumberValue(TopKValue.Value);
		}

		if (TopPValue.HasValue)
		{
			writer.WritePropertyName("top_p");
			writer.WriteNumberValue(TopPValue.Value);
		}

		writer.WriteEndObject();
	}
}
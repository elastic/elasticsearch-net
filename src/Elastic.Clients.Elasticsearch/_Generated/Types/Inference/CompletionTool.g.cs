// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Inference;

/// <summary>
/// <para>
/// A list of tools that the model can call.
/// </para>
/// </summary>
public sealed partial class CompletionTool
{
	/// <summary>
	/// <para>
	/// The function definition.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("function")]
	public Elastic.Clients.Elasticsearch.Inference.CompletionToolFunction Function { get; set; }

	/// <summary>
	/// <para>
	/// The type of tool.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("type")]
	public string Type { get; set; }
}

/// <summary>
/// <para>
/// A list of tools that the model can call.
/// </para>
/// </summary>
public sealed partial class CompletionToolDescriptor : SerializableDescriptor<CompletionToolDescriptor>
{
	internal CompletionToolDescriptor(Action<CompletionToolDescriptor> configure) => configure.Invoke(this);

	public CompletionToolDescriptor() : base()
	{
	}

	private Elastic.Clients.Elasticsearch.Inference.CompletionToolFunction FunctionValue { get; set; }
	private Elastic.Clients.Elasticsearch.Inference.CompletionToolFunctionDescriptor FunctionDescriptor { get; set; }
	private Action<Elastic.Clients.Elasticsearch.Inference.CompletionToolFunctionDescriptor> FunctionDescriptorAction { get; set; }
	private string TypeValue { get; set; }

	/// <summary>
	/// <para>
	/// The function definition.
	/// </para>
	/// </summary>
	public CompletionToolDescriptor Function(Elastic.Clients.Elasticsearch.Inference.CompletionToolFunction function)
	{
		FunctionDescriptor = null;
		FunctionDescriptorAction = null;
		FunctionValue = function;
		return Self;
	}

	public CompletionToolDescriptor Function(Elastic.Clients.Elasticsearch.Inference.CompletionToolFunctionDescriptor descriptor)
	{
		FunctionValue = null;
		FunctionDescriptorAction = null;
		FunctionDescriptor = descriptor;
		return Self;
	}

	public CompletionToolDescriptor Function(Action<Elastic.Clients.Elasticsearch.Inference.CompletionToolFunctionDescriptor> configure)
	{
		FunctionValue = null;
		FunctionDescriptor = null;
		FunctionDescriptorAction = configure;
		return Self;
	}

	/// <summary>
	/// <para>
	/// The type of tool.
	/// </para>
	/// </summary>
	public CompletionToolDescriptor Type(string type)
	{
		TypeValue = type;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		if (FunctionDescriptor is not null)
		{
			writer.WritePropertyName("function");
			JsonSerializer.Serialize(writer, FunctionDescriptor, options);
		}
		else if (FunctionDescriptorAction is not null)
		{
			writer.WritePropertyName("function");
			JsonSerializer.Serialize(writer, new Elastic.Clients.Elasticsearch.Inference.CompletionToolFunctionDescriptor(FunctionDescriptorAction), options);
		}
		else
		{
			writer.WritePropertyName("function");
			JsonSerializer.Serialize(writer, FunctionValue, options);
		}

		writer.WritePropertyName("type");
		writer.WriteStringValue(TypeValue);
		writer.WriteEndObject();
	}
}
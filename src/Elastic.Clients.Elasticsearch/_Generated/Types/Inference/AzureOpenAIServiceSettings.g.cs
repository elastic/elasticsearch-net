// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Inference;

public sealed partial class AzureOpenAIServiceSettings
{
	/// <summary>
	/// <para>
	/// A valid API key for your Azure OpenAI account.
	/// You must specify either <c>api_key</c> or <c>entra_id</c>.
	/// If you do not provide either or you provide both, you will receive an error when you try to create your model.
	/// </para>
	/// <para>
	/// IMPORTANT: You need to provide the API key only once, during the inference model creation.
	/// The get inference endpoint API does not retrieve your API key.
	/// After creating the inference model, you cannot change the associated API key.
	/// If you want to use a different API key, delete the inference model and recreate it with the same name and the updated API key.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("api_key")]
	public string? ApiKey { get; set; }

	/// <summary>
	/// <para>
	/// The Azure API version ID to use.
	/// It is recommended to use the latest supported non-preview version.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("api_version")]
	public string ApiVersion { get; set; }

	/// <summary>
	/// <para>
	/// The deployment name of your deployed models.
	/// Your Azure OpenAI deployments can be found though the Azure OpenAI Studio portal that is linked to your subscription.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("deployment_id")]
	public string DeploymentId { get; set; }

	/// <summary>
	/// <para>
	/// A valid Microsoft Entra token.
	/// You must specify either <c>api_key</c> or <c>entra_id</c>.
	/// If you do not provide either or you provide both, you will receive an error when you try to create your model.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("entra_id")]
	public string? EntraId { get; set; }

	/// <summary>
	/// <para>
	/// This setting helps to minimize the number of rate limit errors returned from Azure.
	/// The <c>azureopenai</c> service sets a default number of requests allowed per minute depending on the task type.
	/// For <c>text_embedding</c>, it is set to <c>1440</c>.
	/// For <c>completion</c>, it is set to <c>120</c>.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("rate_limit")]
	public Elastic.Clients.Elasticsearch.Inference.RateLimitSetting? RateLimit { get; set; }

	/// <summary>
	/// <para>
	/// The name of your Azure OpenAI resource.
	/// You can find this from the list of resources in the Azure Portal for your subscription.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("resource_name")]
	public string ResourceName { get; set; }
}

public sealed partial class AzureOpenAIServiceSettingsDescriptor : SerializableDescriptor<AzureOpenAIServiceSettingsDescriptor>
{
	internal AzureOpenAIServiceSettingsDescriptor(Action<AzureOpenAIServiceSettingsDescriptor> configure) => configure.Invoke(this);

	public AzureOpenAIServiceSettingsDescriptor() : base()
	{
	}

	private string? ApiKeyValue { get; set; }
	private string ApiVersionValue { get; set; }
	private string DeploymentIdValue { get; set; }
	private string? EntraIdValue { get; set; }
	private Elastic.Clients.Elasticsearch.Inference.RateLimitSetting? RateLimitValue { get; set; }
	private Elastic.Clients.Elasticsearch.Inference.RateLimitSettingDescriptor RateLimitDescriptor { get; set; }
	private Action<Elastic.Clients.Elasticsearch.Inference.RateLimitSettingDescriptor> RateLimitDescriptorAction { get; set; }
	private string ResourceNameValue { get; set; }

	/// <summary>
	/// <para>
	/// A valid API key for your Azure OpenAI account.
	/// You must specify either <c>api_key</c> or <c>entra_id</c>.
	/// If you do not provide either or you provide both, you will receive an error when you try to create your model.
	/// </para>
	/// <para>
	/// IMPORTANT: You need to provide the API key only once, during the inference model creation.
	/// The get inference endpoint API does not retrieve your API key.
	/// After creating the inference model, you cannot change the associated API key.
	/// If you want to use a different API key, delete the inference model and recreate it with the same name and the updated API key.
	/// </para>
	/// </summary>
	public AzureOpenAIServiceSettingsDescriptor ApiKey(string? apiKey)
	{
		ApiKeyValue = apiKey;
		return Self;
	}

	/// <summary>
	/// <para>
	/// The Azure API version ID to use.
	/// It is recommended to use the latest supported non-preview version.
	/// </para>
	/// </summary>
	public AzureOpenAIServiceSettingsDescriptor ApiVersion(string apiVersion)
	{
		ApiVersionValue = apiVersion;
		return Self;
	}

	/// <summary>
	/// <para>
	/// The deployment name of your deployed models.
	/// Your Azure OpenAI deployments can be found though the Azure OpenAI Studio portal that is linked to your subscription.
	/// </para>
	/// </summary>
	public AzureOpenAIServiceSettingsDescriptor DeploymentId(string deploymentId)
	{
		DeploymentIdValue = deploymentId;
		return Self;
	}

	/// <summary>
	/// <para>
	/// A valid Microsoft Entra token.
	/// You must specify either <c>api_key</c> or <c>entra_id</c>.
	/// If you do not provide either or you provide both, you will receive an error when you try to create your model.
	/// </para>
	/// </summary>
	public AzureOpenAIServiceSettingsDescriptor EntraId(string? entraId)
	{
		EntraIdValue = entraId;
		return Self;
	}

	/// <summary>
	/// <para>
	/// This setting helps to minimize the number of rate limit errors returned from Azure.
	/// The <c>azureopenai</c> service sets a default number of requests allowed per minute depending on the task type.
	/// For <c>text_embedding</c>, it is set to <c>1440</c>.
	/// For <c>completion</c>, it is set to <c>120</c>.
	/// </para>
	/// </summary>
	public AzureOpenAIServiceSettingsDescriptor RateLimit(Elastic.Clients.Elasticsearch.Inference.RateLimitSetting? rateLimit)
	{
		RateLimitDescriptor = null;
		RateLimitDescriptorAction = null;
		RateLimitValue = rateLimit;
		return Self;
	}

	public AzureOpenAIServiceSettingsDescriptor RateLimit(Elastic.Clients.Elasticsearch.Inference.RateLimitSettingDescriptor descriptor)
	{
		RateLimitValue = null;
		RateLimitDescriptorAction = null;
		RateLimitDescriptor = descriptor;
		return Self;
	}

	public AzureOpenAIServiceSettingsDescriptor RateLimit(Action<Elastic.Clients.Elasticsearch.Inference.RateLimitSettingDescriptor> configure)
	{
		RateLimitValue = null;
		RateLimitDescriptor = null;
		RateLimitDescriptorAction = configure;
		return Self;
	}

	/// <summary>
	/// <para>
	/// The name of your Azure OpenAI resource.
	/// You can find this from the list of resources in the Azure Portal for your subscription.
	/// </para>
	/// </summary>
	public AzureOpenAIServiceSettingsDescriptor ResourceName(string resourceName)
	{
		ResourceNameValue = resourceName;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		if (!string.IsNullOrEmpty(ApiKeyValue))
		{
			writer.WritePropertyName("api_key");
			writer.WriteStringValue(ApiKeyValue);
		}

		writer.WritePropertyName("api_version");
		writer.WriteStringValue(ApiVersionValue);
		writer.WritePropertyName("deployment_id");
		writer.WriteStringValue(DeploymentIdValue);
		if (!string.IsNullOrEmpty(EntraIdValue))
		{
			writer.WritePropertyName("entra_id");
			writer.WriteStringValue(EntraIdValue);
		}

		if (RateLimitDescriptor is not null)
		{
			writer.WritePropertyName("rate_limit");
			JsonSerializer.Serialize(writer, RateLimitDescriptor, options);
		}
		else if (RateLimitDescriptorAction is not null)
		{
			writer.WritePropertyName("rate_limit");
			JsonSerializer.Serialize(writer, new Elastic.Clients.Elasticsearch.Inference.RateLimitSettingDescriptor(RateLimitDescriptorAction), options);
		}
		else if (RateLimitValue is not null)
		{
			writer.WritePropertyName("rate_limit");
			JsonSerializer.Serialize(writer, RateLimitValue, options);
		}

		writer.WritePropertyName("resource_name");
		writer.WriteStringValue(ResourceNameValue);
		writer.WriteEndObject();
	}
}
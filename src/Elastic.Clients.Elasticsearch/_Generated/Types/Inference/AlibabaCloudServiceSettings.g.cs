// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Inference;

public sealed partial class AlibabaCloudServiceSettings
{
	/// <summary>
	/// <para>
	/// A valid API key for the AlibabaCloud AI Search API.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("api_key")]
	public string ApiKey { get; set; }

	/// <summary>
	/// <para>
	/// The name of the host address used for the inference task.
	/// You can find the host address in the API keys section of the documentation.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("host")]
	public string Host { get; set; }

	/// <summary>
	/// <para>
	/// This setting helps to minimize the number of rate limit errors returned from AlibabaCloud AI Search.
	/// By default, the <c>alibabacloud-ai-search</c> service sets the number of requests allowed per minute to <c>1000</c>.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("rate_limit")]
	public Elastic.Clients.Elasticsearch.Inference.RateLimitSetting? RateLimit { get; set; }

	/// <summary>
	/// <para>
	/// The name of the model service to use for the inference task.
	/// The following service IDs are available for the <c>completion</c> task:
	/// </para>
	/// <list type="bullet">
	/// <item>
	/// <para>
	/// <c>ops-qwen-turbo</c>
	/// </para>
	/// </item>
	/// <item>
	/// <para>
	/// <c>qwen-turbo</c>
	/// </para>
	/// </item>
	/// <item>
	/// <para>
	/// <c>qwen-plus</c>
	/// </para>
	/// </item>
	/// <item>
	/// <para>
	/// <c>qwen-max ÷ qwen-max-longcontext</c>
	/// </para>
	/// </item>
	/// </list>
	/// <para>
	/// The following service ID is available for the <c>rerank</c> task:
	/// </para>
	/// <list type="bullet">
	/// <item>
	/// <para>
	/// <c>ops-bge-reranker-larger</c>
	/// </para>
	/// </item>
	/// </list>
	/// <para>
	/// The following service ID is available for the <c>sparse_embedding</c> task:
	/// </para>
	/// <list type="bullet">
	/// <item>
	/// <para>
	/// <c>ops-text-sparse-embedding-001</c>
	/// </para>
	/// </item>
	/// </list>
	/// <para>
	/// The following service IDs are available for the <c>text_embedding</c> task:
	/// </para>
	/// <para>
	/// <c>ops-text-embedding-001</c>
	/// <c>ops-text-embedding-zh-001</c>
	/// <c>ops-text-embedding-en-001</c>
	/// <c>ops-text-embedding-002</c>
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("service_id")]
	public string ServiceId { get; set; }

	/// <summary>
	/// <para>
	/// The name of the workspace used for the inference task.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("workspace")]
	public string Workspace { get; set; }
}

public sealed partial class AlibabaCloudServiceSettingsDescriptor : SerializableDescriptor<AlibabaCloudServiceSettingsDescriptor>
{
	internal AlibabaCloudServiceSettingsDescriptor(Action<AlibabaCloudServiceSettingsDescriptor> configure) => configure.Invoke(this);

	public AlibabaCloudServiceSettingsDescriptor() : base()
	{
	}

	private string ApiKeyValue { get; set; }
	private string HostValue { get; set; }
	private Elastic.Clients.Elasticsearch.Inference.RateLimitSetting? RateLimitValue { get; set; }
	private Elastic.Clients.Elasticsearch.Inference.RateLimitSettingDescriptor RateLimitDescriptor { get; set; }
	private Action<Elastic.Clients.Elasticsearch.Inference.RateLimitSettingDescriptor> RateLimitDescriptorAction { get; set; }
	private string ServiceIdValue { get; set; }
	private string WorkspaceValue { get; set; }

	/// <summary>
	/// <para>
	/// A valid API key for the AlibabaCloud AI Search API.
	/// </para>
	/// </summary>
	public AlibabaCloudServiceSettingsDescriptor ApiKey(string apiKey)
	{
		ApiKeyValue = apiKey;
		return Self;
	}

	/// <summary>
	/// <para>
	/// The name of the host address used for the inference task.
	/// You can find the host address in the API keys section of the documentation.
	/// </para>
	/// </summary>
	public AlibabaCloudServiceSettingsDescriptor Host(string host)
	{
		HostValue = host;
		return Self;
	}

	/// <summary>
	/// <para>
	/// This setting helps to minimize the number of rate limit errors returned from AlibabaCloud AI Search.
	/// By default, the <c>alibabacloud-ai-search</c> service sets the number of requests allowed per minute to <c>1000</c>.
	/// </para>
	/// </summary>
	public AlibabaCloudServiceSettingsDescriptor RateLimit(Elastic.Clients.Elasticsearch.Inference.RateLimitSetting? rateLimit)
	{
		RateLimitDescriptor = null;
		RateLimitDescriptorAction = null;
		RateLimitValue = rateLimit;
		return Self;
	}

	public AlibabaCloudServiceSettingsDescriptor RateLimit(Elastic.Clients.Elasticsearch.Inference.RateLimitSettingDescriptor descriptor)
	{
		RateLimitValue = null;
		RateLimitDescriptorAction = null;
		RateLimitDescriptor = descriptor;
		return Self;
	}

	public AlibabaCloudServiceSettingsDescriptor RateLimit(Action<Elastic.Clients.Elasticsearch.Inference.RateLimitSettingDescriptor> configure)
	{
		RateLimitValue = null;
		RateLimitDescriptor = null;
		RateLimitDescriptorAction = configure;
		return Self;
	}

	/// <summary>
	/// <para>
	/// The name of the model service to use for the inference task.
	/// The following service IDs are available for the <c>completion</c> task:
	/// </para>
	/// <list type="bullet">
	/// <item>
	/// <para>
	/// <c>ops-qwen-turbo</c>
	/// </para>
	/// </item>
	/// <item>
	/// <para>
	/// <c>qwen-turbo</c>
	/// </para>
	/// </item>
	/// <item>
	/// <para>
	/// <c>qwen-plus</c>
	/// </para>
	/// </item>
	/// <item>
	/// <para>
	/// <c>qwen-max ÷ qwen-max-longcontext</c>
	/// </para>
	/// </item>
	/// </list>
	/// <para>
	/// The following service ID is available for the <c>rerank</c> task:
	/// </para>
	/// <list type="bullet">
	/// <item>
	/// <para>
	/// <c>ops-bge-reranker-larger</c>
	/// </para>
	/// </item>
	/// </list>
	/// <para>
	/// The following service ID is available for the <c>sparse_embedding</c> task:
	/// </para>
	/// <list type="bullet">
	/// <item>
	/// <para>
	/// <c>ops-text-sparse-embedding-001</c>
	/// </para>
	/// </item>
	/// </list>
	/// <para>
	/// The following service IDs are available for the <c>text_embedding</c> task:
	/// </para>
	/// <para>
	/// <c>ops-text-embedding-001</c>
	/// <c>ops-text-embedding-zh-001</c>
	/// <c>ops-text-embedding-en-001</c>
	/// <c>ops-text-embedding-002</c>
	/// </para>
	/// </summary>
	public AlibabaCloudServiceSettingsDescriptor ServiceId(string serviceId)
	{
		ServiceIdValue = serviceId;
		return Self;
	}

	/// <summary>
	/// <para>
	/// The name of the workspace used for the inference task.
	/// </para>
	/// </summary>
	public AlibabaCloudServiceSettingsDescriptor Workspace(string workspace)
	{
		WorkspaceValue = workspace;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		writer.WritePropertyName("api_key");
		writer.WriteStringValue(ApiKeyValue);
		writer.WritePropertyName("host");
		writer.WriteStringValue(HostValue);
		if (RateLimitDescriptor is not null)
		{
			writer.WritePropertyName("rate_limit");
			JsonSerializer.Serialize(writer, RateLimitDescriptor, options);
		}
		else if (RateLimitDescriptorAction is not null)
		{
			writer.WritePropertyName("rate_limit");
			JsonSerializer.Serialize(writer, new Elastic.Clients.Elasticsearch.Inference.RateLimitSettingDescriptor(RateLimitDescriptorAction), options);
		}
		else if (RateLimitValue is not null)
		{
			writer.WritePropertyName("rate_limit");
			JsonSerializer.Serialize(writer, RateLimitValue, options);
		}

		writer.WritePropertyName("service_id");
		writer.WriteStringValue(ServiceIdValue);
		writer.WritePropertyName("workspace");
		writer.WriteStringValue(WorkspaceValue);
		writer.WriteEndObject();
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using System;
using System.Linq;
using Elastic.Clients.Elasticsearch.Serialization;

namespace Elastic.Clients.Elasticsearch.LicenseManagement;

[System.Text.Json.Serialization.JsonConverter(typeof(Elastic.Clients.Elasticsearch.LicenseManagement.Json.LicenseInformationConverter))]
public sealed partial class LicenseInformation
{
	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public LicenseInformation(System.DateTimeOffset issueDate, System.DateTimeOffset issueDateInMillis, string issuedTo, string issuer, long? maxNodes, System.DateTimeOffset startDateInMillis, Elastic.Clients.Elasticsearch.LicenseManagement.LicenseStatus status, Elastic.Clients.Elasticsearch.LicenseManagement.LicenseType type, string uid)
	{
		IssueDate = issueDate;
		IssueDateInMillis = issueDateInMillis;
		IssuedTo = issuedTo;
		Issuer = issuer;
		MaxNodes = maxNodes;
		StartDateInMillis = startDateInMillis;
		Status = status;
		Type = type;
		Uid = uid;
	}
#if NET7_0_OR_GREATER
	public LicenseInformation()
	{
	}
#endif
#if !NET7_0_OR_GREATER
	[System.Obsolete("The type contains required properties that must be initialized. Please use an alternative constructor to ensure all required values are properly set.")]
	public LicenseInformation()
	{
	}
#endif
	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	internal LicenseInformation(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel sentinel)
	{
		_ = sentinel;
	}

	public System.DateTimeOffset? ExpiryDate { get; set; }
	public System.DateTimeOffset? ExpiryDateInMillis { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	System.DateTimeOffset IssueDate { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	System.DateTimeOffset IssueDateInMillis { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	string IssuedTo { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	string Issuer { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	long? MaxNodes { get; set; }
	public int? MaxResourceUnits { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	System.DateTimeOffset StartDateInMillis { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	Elastic.Clients.Elasticsearch.LicenseManagement.LicenseStatus Status { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	Elastic.Clients.Elasticsearch.LicenseManagement.LicenseType Type { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	string Uid { get; set; }
}
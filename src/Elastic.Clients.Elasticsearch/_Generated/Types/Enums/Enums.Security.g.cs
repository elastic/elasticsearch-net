// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System.Text.Json.Serialization;
using System.Runtime.Serialization;
using Elastic.Transport;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Security
{
	public enum ClusterPrivilege
	{
		[EnumMember(Value = "transport_client")]
		TransportClient,
		[EnumMember(Value = "read_slm")]
		ReadSlm,
		[EnumMember(Value = "read_pipeline")]
		ReadPipeline,
		[EnumMember(Value = "read_ilm")]
		ReadIlm,
		[EnumMember(Value = "read_ccr")]
		ReadCcr,
		[EnumMember(Value = "monitor_watcher")]
		MonitorWatcher,
		[EnumMember(Value = "monitor_transform")]
		MonitorTransform,
		[EnumMember(Value = "monitor_text_structure")]
		MonitorTextStructure,
		[EnumMember(Value = "monitor_snapshot")]
		MonitorSnapshot,
		[EnumMember(Value = "monitor_rollup")]
		MonitorRollup,
		[EnumMember(Value = "monitor_ml")]
		MonitorMl,
		[EnumMember(Value = "monitor")]
		Monitor,
		[EnumMember(Value = "manage_watcher")]
		ManageWatcher,
		[EnumMember(Value = "manage_transform")]
		ManageTransform,
		[EnumMember(Value = "manage_token")]
		ManageToken,
		[EnumMember(Value = "manage_slm")]
		ManageSlm,
		[EnumMember(Value = "manage_service_account")]
		ManageServiceAccount,
		[EnumMember(Value = "manage_security")]
		ManageSecurity,
		[EnumMember(Value = "manage_saml")]
		ManageSaml,
		[EnumMember(Value = "manage_rollup")]
		ManageRollup,
		[EnumMember(Value = "manage_pipeline")]
		ManagePipeline,
		[EnumMember(Value = "manage_own_api_key")]
		ManageOwnApiKey,
		[EnumMember(Value = "manage_oidc")]
		ManageOidc,
		[EnumMember(Value = "manage_ml")]
		ManageMl,
		[EnumMember(Value = "manage_logstash_pipelines")]
		ManageLogstashPipelines,
		[EnumMember(Value = "manage_ingest_pipelines")]
		ManageIngestPipelines,
		[EnumMember(Value = "manage_index_templates")]
		ManageIndexTemplates,
		[EnumMember(Value = "manage_ilm")]
		ManageIlm,
		[EnumMember(Value = "manage_ccr")]
		ManageCcr,
		[EnumMember(Value = "manage_api_key")]
		ManageApiKey,
		[EnumMember(Value = "manage")]
		Manage,
		[EnumMember(Value = "grant_api_key")]
		GrantApiKey,
		[EnumMember(Value = "create_snapshot")]
		CreateSnapshot,
		[EnumMember(Value = "cancel_task")]
		CancelTask,
		[EnumMember(Value = "all")]
		All
	}

	public enum IndexPrivilege
	{
		[EnumMember(Value = "write")]
		Write,
		[EnumMember(Value = "view_index_metadata")]
		ViewIndexMetadata,
		[EnumMember(Value = "read_cross_cluster")]
		ReadCrossCluster,
		[EnumMember(Value = "read")]
		Read,
		[EnumMember(Value = "monitor")]
		Monitor,
		[EnumMember(Value = "manage_leader_index")]
		ManageLeaderIndex,
		[EnumMember(Value = "manage_ilm")]
		ManageIlm,
		[EnumMember(Value = "manage_follow_index")]
		ManageFollowIndex,
		[EnumMember(Value = "manage")]
		Manage,
		[EnumMember(Value = "maintenance")]
		Maintenance,
		[EnumMember(Value = "index")]
		Index,
		[EnumMember(Value = "delete_index")]
		DeleteIndex,
		[EnumMember(Value = "delete")]
		Delete,
		[EnumMember(Value = "create_index")]
		CreateIndex,
		[EnumMember(Value = "create_doc")]
		CreateDoc,
		[EnumMember(Value = "create")]
		Create,
		[EnumMember(Value = "auto_configure")]
		AutoConfigure,
		[EnumMember(Value = "all")]
		All
	}
}
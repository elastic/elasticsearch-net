// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System.Text.Json.Serialization;
using System.Runtime.Serialization;
using Elastic.Transport;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Watcher
{
	public enum AcknowledgementOptions
	{
		[EnumMember(Value = "awaits_successful_execution")]
		AwaitsSuccessfulExecution,
		[EnumMember(Value = "acked")]
		Acked,
		[EnumMember(Value = "ackable")]
		Ackable
	}

	public enum ActionExecutionMode
	{
		[EnumMember(Value = "skip")]
		Skip,
		[EnumMember(Value = "simulate")]
		Simulate,
		[EnumMember(Value = "force_simulate")]
		ForceSimulate,
		[EnumMember(Value = "force_execute")]
		ForceExecute,
		[EnumMember(Value = "execute")]
		Execute
	}

	public enum ActionStatusOptions
	{
		[EnumMember(Value = "throttled")]
		Throttled,
		[EnumMember(Value = "success")]
		Success,
		[EnumMember(Value = "simulated")]
		Simulated,
		[EnumMember(Value = "failure")]
		Failure
	}

	public enum ActionType
	{
		[EnumMember(Value = "webhook")]
		Webhook,
		[EnumMember(Value = "slack")]
		Slack,
		[EnumMember(Value = "pagerduty")]
		Pagerduty,
		[EnumMember(Value = "logging")]
		Logging,
		[EnumMember(Value = "index")]
		Index,
		[EnumMember(Value = "email")]
		Email
	}

	public enum ConditionType
	{
		[EnumMember(Value = "script")]
		Script,
		[EnumMember(Value = "never")]
		Never,
		[EnumMember(Value = "compare")]
		Compare,
		[EnumMember(Value = "array_compare")]
		ArrayCompare,
		[EnumMember(Value = "always")]
		Always
	}

	public enum ConnectionScheme
	{
		[EnumMember(Value = "https")]
		Https,
		[EnumMember(Value = "http")]
		Http
	}

	public enum Day
	{
		[EnumMember(Value = "wednesday")]
		Wednesday,
		[EnumMember(Value = "tuesday")]
		Tuesday,
		[EnumMember(Value = "thursday")]
		Thursday,
		[EnumMember(Value = "sunday")]
		Sunday,
		[EnumMember(Value = "saturday")]
		Saturday,
		[EnumMember(Value = "monday")]
		Monday,
		[EnumMember(Value = "friday")]
		Friday
	}

	public enum ExecutionPhase
	{
		[EnumMember(Value = "watch_transform")]
		WatchTransform,
		[EnumMember(Value = "started")]
		Started,
		[EnumMember(Value = "input")]
		Input,
		[EnumMember(Value = "finished")]
		Finished,
		[EnumMember(Value = "condition")]
		Condition,
		[EnumMember(Value = "awaits_execution")]
		AwaitsExecution,
		[EnumMember(Value = "actions")]
		Actions,
		[EnumMember(Value = "aborted")]
		Aborted
	}

	public enum ExecutionStatus
	{
		[EnumMember(Value = "throttled")]
		Throttled,
		[EnumMember(Value = "not_executed_already_queued")]
		NotExecutedAlreadyQueued,
		[EnumMember(Value = "failed")]
		Failed,
		[EnumMember(Value = "execution_not_needed")]
		ExecutionNotNeeded,
		[EnumMember(Value = "executed")]
		Executed,
		[EnumMember(Value = "deleted_while_queued")]
		DeletedWhileQueued,
		[EnumMember(Value = "checking")]
		Checking,
		[EnumMember(Value = "awaits_execution")]
		AwaitsExecution
	}

	public enum HttpInputMethod
	{
		[EnumMember(Value = "put")]
		Put,
		[EnumMember(Value = "post")]
		Post,
		[EnumMember(Value = "head")]
		Head,
		[EnumMember(Value = "get")]
		Get,
		[EnumMember(Value = "delete")]
		Delete
	}

	public enum InputType
	{
		[EnumMember(Value = "simple")]
		Simple,
		[EnumMember(Value = "search")]
		Search,
		[EnumMember(Value = "http")]
		Http
	}

	public enum Month
	{
		[EnumMember(Value = "september")]
		September,
		[EnumMember(Value = "october")]
		October,
		[EnumMember(Value = "november")]
		November,
		[EnumMember(Value = "may")]
		May,
		[EnumMember(Value = "march")]
		March,
		[EnumMember(Value = "june")]
		June,
		[EnumMember(Value = "july")]
		July,
		[EnumMember(Value = "january")]
		January,
		[EnumMember(Value = "february")]
		February,
		[EnumMember(Value = "december")]
		December,
		[EnumMember(Value = "august")]
		August,
		[EnumMember(Value = "april")]
		April
	}

	public enum PagerDutyContextType
	{
		[EnumMember(Value = "link")]
		Link,
		[EnumMember(Value = "image")]
		Image
	}

	public enum PagerDutyEventType
	{
		[EnumMember(Value = "trigger")]
		Trigger,
		[EnumMember(Value = "resolve")]
		Resolve,
		[EnumMember(Value = "acknowledge")]
		Acknowledge
	}

	public enum Quantifier
	{
		[EnumMember(Value = "some")]
		Some,
		[EnumMember(Value = "all")]
		All
	}

	public enum ResponseContentType
	{
		[EnumMember(Value = "yaml")]
		Yaml,
		[EnumMember(Value = "text")]
		Text,
		[EnumMember(Value = "json")]
		Json
	}
}
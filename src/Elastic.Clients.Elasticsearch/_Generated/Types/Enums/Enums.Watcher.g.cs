// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using System;
using System.Linq;
using Elastic.Clients.Elasticsearch.Serialization;

namespace Elastic.Clients.Elasticsearch.Watcher;

internal sealed partial class ActionStatusOptionsConverter : System.Text.Json.Serialization.JsonConverter<Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions>
{
	private static readonly System.Text.Json.JsonEncodedText MemberSuccess = System.Text.Json.JsonEncodedText.Encode("success");
	private static readonly System.Text.Json.JsonEncodedText MemberFailure = System.Text.Json.JsonEncodedText.Encode("failure");
	private static readonly System.Text.Json.JsonEncodedText MemberSimulated = System.Text.Json.JsonEncodedText.Encode("simulated");
	private static readonly System.Text.Json.JsonEncodedText MemberThrottled = System.Text.Json.JsonEncodedText.Encode("throttled");

	public override Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
	{
		if (reader.ValueTextEquals(MemberSuccess))
		{
			return Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions.Success;
		}

		if (reader.ValueTextEquals(MemberFailure))
		{
			return Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions.Failure;
		}

		if (reader.ValueTextEquals(MemberSimulated))
		{
			return Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions.Simulated;
		}

		if (reader.ValueTextEquals(MemberThrottled))
		{
			return Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions.Throttled;
		}

		var value = reader.GetString()!;
		if (string.Equals(value, MemberSuccess.Value, System.StringComparison.OrdinalIgnoreCase))
		{
			return Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions.Success;
		}

		if (string.Equals(value, MemberFailure.Value, System.StringComparison.OrdinalIgnoreCase))
		{
			return Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions.Failure;
		}

		if (string.Equals(value, MemberSimulated.Value, System.StringComparison.OrdinalIgnoreCase))
		{
			return Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions.Simulated;
		}

		if (string.Equals(value, MemberThrottled.Value, System.StringComparison.OrdinalIgnoreCase))
		{
			return Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions.Throttled;
		}

		throw new System.Text.Json.JsonException($"Unknown member '{value}' for enum '{nameof(Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions)}'.");
	}

	public override void Write(System.Text.Json.Utf8JsonWriter writer, Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions value, System.Text.Json.JsonSerializerOptions options)
	{
		switch (value)
		{
			case Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions.Success:
				writer.WriteStringValue(MemberSuccess);
				break;
			case Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions.Failure:
				writer.WriteStringValue(MemberFailure);
				break;
			case Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions.Simulated:
				writer.WriteStringValue(MemberSimulated);
				break;
			case Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions.Throttled:
				writer.WriteStringValue(MemberThrottled);
				break;
			default:
				throw new System.Text.Json.JsonException($"Invalid value '{value}' for enum '{nameof(Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions)}'.");
		}
	}

	public override Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions ReadAsPropertyName(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
	{
		return Read(ref reader, typeToConvert, options);
	}

	public override void WriteAsPropertyName(System.Text.Json.Utf8JsonWriter writer, Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptions value, System.Text.Json.JsonSerializerOptions options)
	{
		Write(writer, value, options);
	}
}

[System.Text.Json.Serialization.JsonConverter(typeof(Elastic.Clients.Elasticsearch.Watcher.ActionStatusOptionsConverter))]
public enum ActionStatusOptions
{
	[System.Runtime.Serialization.EnumMember(Value = "success")]
	Success,
	[System.Runtime.Serialization.EnumMember(Value = "failure")]
	Failure,
	[System.Runtime.Serialization.EnumMember(Value = "simulated")]
	Simulated,
	[System.Runtime.Serialization.EnumMember(Value = "throttled")]
	Throttled
}
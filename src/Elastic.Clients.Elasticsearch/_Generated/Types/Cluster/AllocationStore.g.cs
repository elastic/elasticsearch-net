// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using System;
using System.Linq;
using Elastic.Clients.Elasticsearch.Serialization;

namespace Elastic.Clients.Elasticsearch.Cluster;

[System.Text.Json.Serialization.JsonConverter(typeof(Elastic.Clients.Elasticsearch.Cluster.Json.AllocationStoreConverter))]
public sealed partial class AllocationStore
{
	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public AllocationStore(string allocationId, bool found, bool inSync, long matchingSizeInBytes, bool matchingSyncId, string storeException)
	{
		AllocationId = allocationId;
		Found = found;
		InSync = inSync;
		MatchingSizeInBytes = matchingSizeInBytes;
		MatchingSyncId = matchingSyncId;
		StoreException = storeException;
	}
#if NET7_0_OR_GREATER
	public AllocationStore()
	{
	}
#endif
#if !NET7_0_OR_GREATER
	[System.Obsolete("The type contains required properties that must be initialized. Please use an alternative constructor to ensure all required values are properly set.")]
	public AllocationStore()
	{
	}
#endif
	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	internal AllocationStore(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel sentinel)
	{
		_ = sentinel;
	}

	public
#if NET7_0_OR_GREATER
	required
#endif
	string AllocationId { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	bool Found { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	bool InSync { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	long MatchingSizeInBytes { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	bool MatchingSyncId { get; set; }
	public
#if NET7_0_OR_GREATER
	required
#endif
	string StoreException { get; set; }
}
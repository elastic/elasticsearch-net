// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Cluster
{
	public partial class ComponentTemplate
	{
		[JsonInclude]
		[JsonPropertyName("name")]
		public Elastic.Clients.Elasticsearch.Name Name { get; init; }

		[JsonInclude]
		[JsonPropertyName("component_template")]
		public Elastic.Clients.Elasticsearch.Cluster.ComponentTemplateNode ComponentTemplateTemp { get; init; }
	}

	public partial class ComponentTemplateNode
	{
		[JsonInclude]
		[JsonPropertyName("template")]
		public Elastic.Clients.Elasticsearch.Cluster.ComponentTemplateSummary Template { get; init; }

		[JsonInclude]
		[JsonPropertyName("version")]
		public object? Version { get; init; }

		[JsonInclude]
		[JsonPropertyName("_meta")]
		public Dictionary<string, object>? Meta { get; init; }
	}

	public partial class ComponentTemplateSummary
	{
		[JsonInclude]
		[JsonPropertyName("_meta")]
		public Dictionary<string, object>? Meta { get; init; }

		[JsonInclude]
		[JsonPropertyName("version")]
		public object? Version { get; init; }

		[JsonInclude]
		[JsonPropertyName("settings")]
		public Dictionary<Elastic.Clients.Elasticsearch.IndexName, IndexManagement.IIndexSettings> Settings { get; init; }

		[JsonInclude]
		[JsonPropertyName("mappings")]
		public Mapping.ITypeMapping? Mappings { get; init; }

		[JsonInclude]
		[JsonPropertyName("aliases")]
		public Dictionary<string, IndexManagement.IAliasDefinition>? Aliases { get; init; }
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch
{
	public partial class Query
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("k")]
		public long k { get; set; }

		[JsonInclude]
		[JsonPropertyName("num_candidates")]
		public long NumCandidates { get; set; }

		[JsonInclude]
		[JsonPropertyName("query_vector")]
		public IEnumerable<double> QueryVector { get; set; }
	}

	public sealed partial class QueryDescriptor<TDocument> : DescriptorBase<QueryDescriptor<TDocument>>
	{
		internal QueryDescriptor(Action<QueryDescriptor<TDocument>> configure) => configure.Invoke(this);
		public QueryDescriptor() : base()
		{
		}

		private Elastic.Clients.Elasticsearch.Field FieldValue { get; set; }

		private long kValue { get; set; }

		private long NumCandidatesValue { get; set; }

		private IEnumerable<double> QueryVectorValue { get; set; }

		public QueryDescriptor<TDocument> Field(Elastic.Clients.Elasticsearch.Field field)
		{
			FieldValue = field;
			return Self;
		}

		public QueryDescriptor<TDocument> Field<TValue>(Expression<Func<TDocument, TValue>> field)
		{
			FieldValue = field;
			return Self;
		}

		public QueryDescriptor<TDocument> k(long k)
		{
			kValue = k;
			return Self;
		}

		public QueryDescriptor<TDocument> NumCandidates(long numCandidates)
		{
			NumCandidatesValue = numCandidates;
			return Self;
		}

		public QueryDescriptor<TDocument> QueryVector(IEnumerable<double> queryVector)
		{
			QueryVectorValue = queryVector;
			return Self;
		}

		protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("field");
			JsonSerializer.Serialize(writer, FieldValue, options);
			writer.WritePropertyName("k");
			writer.WriteNumberValue(kValue);
			writer.WritePropertyName("num_candidates");
			writer.WriteNumberValue(NumCandidatesValue);
			writer.WritePropertyName("query_vector");
			JsonSerializer.Serialize(writer, QueryVectorValue, options);
			writer.WriteEndObject();
		}
	}

	public sealed partial class QueryDescriptor : DescriptorBase<QueryDescriptor>
	{
		internal QueryDescriptor(Action<QueryDescriptor> configure) => configure.Invoke(this);
		public QueryDescriptor() : base()
		{
		}

		private Elastic.Clients.Elasticsearch.Field FieldValue { get; set; }

		private long kValue { get; set; }

		private long NumCandidatesValue { get; set; }

		private IEnumerable<double> QueryVectorValue { get; set; }

		public QueryDescriptor Field(Elastic.Clients.Elasticsearch.Field field)
		{
			FieldValue = field;
			return Self;
		}

		public QueryDescriptor Field<TDocument, TValue>(Expression<Func<TDocument, TValue>> field)
		{
			FieldValue = field;
			return Self;
		}

		public QueryDescriptor Field<TDocument>(Expression<Func<TDocument, object>> field)
		{
			FieldValue = field;
			return Self;
		}

		public QueryDescriptor k(long k)
		{
			kValue = k;
			return Self;
		}

		public QueryDescriptor NumCandidates(long numCandidates)
		{
			NumCandidatesValue = numCandidates;
			return Self;
		}

		public QueryDescriptor QueryVector(IEnumerable<double> queryVector)
		{
			QueryVectorValue = queryVector;
			return Self;
		}

		protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("field");
			JsonSerializer.Serialize(writer, FieldValue, options);
			writer.WritePropertyName("k");
			writer.WriteNumberValue(kValue);
			writer.WritePropertyName("num_candidates");
			writer.WriteNumberValue(NumCandidatesValue);
			writer.WritePropertyName("query_vector");
			JsonSerializer.Serialize(writer, QueryVectorValue, options);
			writer.WriteEndObject();
		}
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Analysis
{
	public partial class PathHierarchyTokenizer : Analysis.TokenizerBase, ITokenizerDefinition
	{
		[JsonInclude]
		[JsonPropertyName("buffer_size")]
		public int BufferSize { get; init; }

		[JsonInclude]
		[JsonPropertyName("delimiter")]
		public string Delimiter { get; init; }

		[JsonInclude]
		[JsonPropertyName("replacement")]
		public string Replacement { get; init; }

		[JsonInclude]
		[JsonPropertyName("reverse")]
		public bool Reverse { get; init; }

		[JsonInclude]
		[JsonPropertyName("skip")]
		public int Skip { get; init; }

		[JsonInclude]
		[JsonPropertyName("type")]
		public string Type => "path_hierarchy";
	}
}
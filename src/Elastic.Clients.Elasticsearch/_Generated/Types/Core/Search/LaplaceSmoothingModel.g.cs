// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Core.Search;

public sealed partial class LaplaceSmoothingModel
{
	/// <summary>
	/// <para>A constant that is added to all counts to balance weights.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("alpha")]
	public double Alpha { get; set; }

	public static implicit operator Elastic.Clients.Elasticsearch.Core.Search.SmoothingModel(LaplaceSmoothingModel laplaceSmoothingModel) => Elastic.Clients.Elasticsearch.Core.Search.SmoothingModel.Laplace(laplaceSmoothingModel);
}

public sealed partial class LaplaceSmoothingModelDescriptor : SerializableDescriptor<LaplaceSmoothingModelDescriptor>
{
	internal LaplaceSmoothingModelDescriptor(Action<LaplaceSmoothingModelDescriptor> configure) => configure.Invoke(this);

	public LaplaceSmoothingModelDescriptor() : base()
	{
	}

	private double AlphaValue { get; set; }

	/// <summary>
	/// <para>A constant that is added to all counts to balance weights.</para>
	/// </summary>
	public LaplaceSmoothingModelDescriptor Alpha(double alpha)
	{
		AlphaValue = alpha;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		writer.WritePropertyName("alpha");
		writer.WriteNumberValue(AlphaValue);
		writer.WriteEndObject();
	}
}
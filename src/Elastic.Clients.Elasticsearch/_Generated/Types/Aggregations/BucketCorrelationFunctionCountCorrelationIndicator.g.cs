// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Aggregations
{
	public partial class BucketCorrelationFunctionCountCorrelationIndicator
	{
		[JsonInclude]
		[JsonPropertyName("doc_count")]
		public int DocCount { get; set; }

		[JsonInclude]
		[JsonPropertyName("expectations")]
		public IEnumerable<double> Expectations { get; set; }

		[JsonInclude]
		[JsonPropertyName("fractions")]
		public IEnumerable<double>? Fractions { get; set; }
	}

	public sealed partial class BucketCorrelationFunctionCountCorrelationIndicatorDescriptor : DescriptorBase<BucketCorrelationFunctionCountCorrelationIndicatorDescriptor>
	{
		public BucketCorrelationFunctionCountCorrelationIndicatorDescriptor()
		{
		}

		internal BucketCorrelationFunctionCountCorrelationIndicatorDescriptor(Action<BucketCorrelationFunctionCountCorrelationIndicatorDescriptor> configure) => configure.Invoke(this);
		internal int DocCountValue { get; private set; }

		internal IEnumerable<double> ExpectationsValue { get; private set; }

		internal IEnumerable<double>? FractionsValue { get; private set; }

		public BucketCorrelationFunctionCountCorrelationIndicatorDescriptor DocCount(int docCount) => Assign(docCount, (a, v) => a.DocCountValue = v);
		public BucketCorrelationFunctionCountCorrelationIndicatorDescriptor Expectations(IEnumerable<double> expectations) => Assign(expectations, (a, v) => a.ExpectationsValue = v);
		public BucketCorrelationFunctionCountCorrelationIndicatorDescriptor Fractions(IEnumerable<double>? fractions) => Assign(fractions, (a, v) => a.FractionsValue = v);
		protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("doc_count");
			writer.WriteNumberValue(DocCountValue);
			writer.WritePropertyName("expectations");
			JsonSerializer.Serialize(writer, ExpectationsValue, options);
			if (FractionsValue is not null)
			{
				writer.WritePropertyName("fractions");
				JsonSerializer.Serialize(writer, FractionsValue, options);
			}

			writer.WriteEndObject();
		}
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using System;
using System.Linq;
using Elastic.Clients.Elasticsearch.Serialization;

namespace Elastic.Clients.Elasticsearch.Aggregations;

[System.Text.Json.Serialization.JsonConverter(typeof(Elastic.Clients.Elasticsearch.Aggregations.Json.CategorizeTextAnalyzerConverter))]
public sealed partial class CategorizeTextAnalyzer : Elastic.Clients.Elasticsearch.Union<string, Elastic.Clients.Elasticsearch.Aggregations.CustomCategorizeTextAnalyzer>
{
	public CategorizeTextAnalyzer(string value) : base(value)
	{
	}

	public CategorizeTextAnalyzer(Elastic.Clients.Elasticsearch.Aggregations.CustomCategorizeTextAnalyzer value) : base(value)
	{
	}

	public static implicit operator Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzer(string value) => new Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzer(value);
	public static implicit operator Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzer(Elastic.Clients.Elasticsearch.Aggregations.CustomCategorizeTextAnalyzer value) => new Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzer(value);
}

public readonly partial struct CategorizeTextAnalyzerFactory
{
	public Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzer Builtin(string value)
	{
		return new Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzer(value);
	}

	public Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzer Custom(Elastic.Clients.Elasticsearch.Aggregations.CustomCategorizeTextAnalyzer value)
	{
		return new Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzer(value);
	}

	public Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzer Custom()
	{
		return new Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzer(Elastic.Clients.Elasticsearch.Aggregations.CustomCategorizeTextAnalyzerDescriptor.Build(null));
	}

	public Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzer Custom(System.Action<Elastic.Clients.Elasticsearch.Aggregations.CustomCategorizeTextAnalyzerDescriptor>? action)
	{
		return new Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzer(Elastic.Clients.Elasticsearch.Aggregations.CustomCategorizeTextAnalyzerDescriptor.Build(action));
	}

	[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	internal static Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzer Build(System.Func<Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzerFactory, Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzer> action)
	{
		var builder = new Elastic.Clients.Elasticsearch.Aggregations.CategorizeTextAnalyzerFactory();
		return action.Invoke(builder);
	}
}
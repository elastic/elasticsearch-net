// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport.Products.Elasticsearch.Failures;
using OneOf;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Aggregations
{
	public partial class AdjacencyMatrixAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("filters")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer>? Filters { get; set; }
	}

	public partial class AggregateBase
	{
		[JsonPropertyName("meta")]
		public Dictionary<string, object>? Meta
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class Aggregation
	{
		[JsonPropertyName("meta")]
		public Dictionary<string, object>? Meta { get; set; }

		[JsonPropertyName("name")]
		public string? Name { get; set; }
	}

	public partial class AggregationContainer
	{
		[JsonPropertyName("adjacency_matrix")]
		public Elastic.Clients.Elasticsearch.Aggregations.AdjacencyMatrixAggregation? AdjacencyMatrix { get; set; }

		[JsonPropertyName("aggregations")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.Aggregations.AggregationContainer>? Aggregations { get; set; }

		[JsonPropertyName("aggs")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.Aggregations.AggregationContainer>? Aggs { get; set; }

		[JsonPropertyName("auto_date_histogram")]
		public Elastic.Clients.Elasticsearch.Aggregations.AutoDateHistogramAggregation? AutoDateHistogram { get; set; }

		[JsonPropertyName("avg")]
		public Elastic.Clients.Elasticsearch.Aggregations.AverageAggregation? Avg { get; set; }

		[JsonPropertyName("avg_bucket")]
		public Elastic.Clients.Elasticsearch.Aggregations.AverageBucketAggregation? AvgBucket { get; set; }

		[JsonPropertyName("boxplot")]
		public Elastic.Clients.Elasticsearch.Aggregations.BoxplotAggregation? Boxplot { get; set; }

		[JsonPropertyName("bucket_script")]
		public Elastic.Clients.Elasticsearch.Aggregations.BucketScriptAggregation? BucketScript { get; set; }

		[JsonPropertyName("bucket_selector")]
		public Elastic.Clients.Elasticsearch.Aggregations.BucketSelectorAggregation? BucketSelector { get; set; }

		[JsonPropertyName("bucket_sort")]
		public Elastic.Clients.Elasticsearch.Aggregations.BucketSortAggregation? BucketSort { get; set; }

		[JsonPropertyName("cardinality")]
		public Elastic.Clients.Elasticsearch.Aggregations.CardinalityAggregation? Cardinality { get; set; }

		[JsonPropertyName("children")]
		public Elastic.Clients.Elasticsearch.Aggregations.ChildrenAggregation? Children { get; set; }

		[JsonPropertyName("composite")]
		public Elastic.Clients.Elasticsearch.Aggregations.CompositeAggregation? Composite { get; set; }

		[JsonPropertyName("cumulative_cardinality")]
		public Elastic.Clients.Elasticsearch.Aggregations.CumulativeCardinalityAggregation? CumulativeCardinality { get; set; }

		[JsonPropertyName("cumulative_sum")]
		public Elastic.Clients.Elasticsearch.Aggregations.CumulativeSumAggregation? CumulativeSum { get; set; }

		[JsonPropertyName("date_histogram")]
		public Elastic.Clients.Elasticsearch.Aggregations.DateHistogramAggregation? DateHistogram { get; set; }

		[JsonPropertyName("date_range")]
		public Elastic.Clients.Elasticsearch.Aggregations.DateRangeAggregation? DateRange { get; set; }

		[JsonPropertyName("derivative")]
		public Elastic.Clients.Elasticsearch.Aggregations.DerivativeAggregation? Derivative { get; set; }

		[JsonPropertyName("diversified_sampler")]
		public Elastic.Clients.Elasticsearch.Aggregations.DiversifiedSamplerAggregation? DiversifiedSampler { get; set; }

		[JsonPropertyName("extended_stats")]
		public Elastic.Clients.Elasticsearch.Aggregations.ExtendedStatsAggregation? ExtendedStats { get; set; }

		[JsonPropertyName("extended_stats_bucket")]
		public Elastic.Clients.Elasticsearch.Aggregations.ExtendedStatsBucketAggregation? ExtendedStatsBucket { get; set; }

		[JsonPropertyName("filter")]
		public Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? Filter { get; set; }

		[JsonPropertyName("filters")]
		public Elastic.Clients.Elasticsearch.Aggregations.FiltersAggregation? Filters { get; set; }

		[JsonPropertyName("geo_bounds")]
		public Elastic.Clients.Elasticsearch.Aggregations.GeoBoundsAggregation? GeoBounds { get; set; }

		[JsonPropertyName("geo_centroid")]
		public Elastic.Clients.Elasticsearch.Aggregations.GeoCentroidAggregation? GeoCentroid { get; set; }

		[JsonPropertyName("geo_distance")]
		public Elastic.Clients.Elasticsearch.Aggregations.GeoDistanceAggregation? GeoDistance { get; set; }

		[JsonPropertyName("geohash_grid")]
		public Elastic.Clients.Elasticsearch.Aggregations.GeoHashGridAggregation? GeohashGrid { get; set; }

		[JsonPropertyName("geo_line")]
		public Elastic.Clients.Elasticsearch.Aggregations.GeoLineAggregation? GeoLine { get; set; }

		[JsonPropertyName("geotile_grid")]
		public Elastic.Clients.Elasticsearch.Aggregations.GeoTileGridAggregation? GeotileGrid { get; set; }

		[JsonPropertyName("global")]
		public Elastic.Clients.Elasticsearch.Aggregations.GlobalAggregation? Global { get; set; }

		[JsonPropertyName("histogram")]
		public Elastic.Clients.Elasticsearch.Aggregations.HistogramAggregation? Histogram { get; set; }

		[JsonPropertyName("inference")]
		public Elastic.Clients.Elasticsearch.Aggregations.InferenceAggregation? Inference { get; set; }

		[JsonPropertyName("ip_range")]
		public Elastic.Clients.Elasticsearch.Aggregations.IpRangeAggregation? IpRange { get; set; }

		[JsonPropertyName("line")]
		public Elastic.Clients.Elasticsearch.Aggregations.GeoLineAggregation? Line { get; set; }

		[JsonPropertyName("matrix_stats")]
		public Elastic.Clients.Elasticsearch.Aggregations.MatrixStatsAggregation? MatrixStats { get; set; }

		[JsonPropertyName("max")]
		public Elastic.Clients.Elasticsearch.Aggregations.MaxAggregation? Max { get; set; }

		[JsonPropertyName("max_bucket")]
		public Elastic.Clients.Elasticsearch.Aggregations.MaxBucketAggregation? MaxBucket { get; set; }

		[JsonPropertyName("median_absolute_deviation")]
		public Elastic.Clients.Elasticsearch.Aggregations.MedianAbsoluteDeviationAggregation? MedianAbsoluteDeviation { get; set; }

		[JsonPropertyName("meta")]
		public Dictionary<string, object>? Meta { get; set; }

		[JsonPropertyName("min")]
		public Elastic.Clients.Elasticsearch.Aggregations.MinAggregation? Min { get; set; }

		[JsonPropertyName("min_bucket")]
		public Elastic.Clients.Elasticsearch.Aggregations.MinBucketAggregation? MinBucket { get; set; }

		[JsonPropertyName("missing")]
		public Elastic.Clients.Elasticsearch.Aggregations.MissingAggregation? Missing { get; set; }

		[JsonPropertyName("moving_avg")]
		public Elastic.Clients.Elasticsearch.Aggregations.MovingAverageAggregation? MovingAvg { get; set; }

		[JsonPropertyName("moving_fn")]
		public Elastic.Clients.Elasticsearch.Aggregations.MovingFunctionAggregation? MovingFn { get; set; }

		[JsonPropertyName("moving_percentiles")]
		public Elastic.Clients.Elasticsearch.Aggregations.MovingPercentilesAggregation? MovingPercentiles { get; set; }

		[JsonPropertyName("multi_terms")]
		public Elastic.Clients.Elasticsearch.Aggregations.MultiTermsAggregation? MultiTerms { get; set; }

		[JsonPropertyName("nested")]
		public Elastic.Clients.Elasticsearch.Aggregations.NestedAggregation? Nested { get; set; }

		[JsonPropertyName("normalize")]
		public Elastic.Clients.Elasticsearch.Aggregations.NormalizeAggregation? Normalize { get; set; }

		[JsonPropertyName("parent")]
		public Elastic.Clients.Elasticsearch.Aggregations.ParentAggregation? Parent { get; set; }

		[JsonPropertyName("percentile_ranks")]
		public Elastic.Clients.Elasticsearch.Aggregations.PercentileRanksAggregation? PercentileRanks { get; set; }

		[JsonPropertyName("percentiles")]
		public Elastic.Clients.Elasticsearch.Aggregations.PercentilesAggregation? Percentiles { get; set; }

		[JsonPropertyName("percentiles_bucket")]
		public Elastic.Clients.Elasticsearch.Aggregations.PercentilesBucketAggregation? PercentilesBucket { get; set; }

		[JsonPropertyName("range")]
		public Elastic.Clients.Elasticsearch.Aggregations.RangeAggregation? Range { get; set; }

		[JsonPropertyName("rare_terms")]
		public Elastic.Clients.Elasticsearch.Aggregations.RareTermsAggregation? RareTerms { get; set; }

		[JsonPropertyName("rate")]
		public Elastic.Clients.Elasticsearch.Aggregations.RateAggregation? Rate { get; set; }

		[JsonPropertyName("reverse_nested")]
		public Elastic.Clients.Elasticsearch.Aggregations.ReverseNestedAggregation? ReverseNested { get; set; }

		[JsonPropertyName("sampler")]
		public Elastic.Clients.Elasticsearch.Aggregations.SamplerAggregation? Sampler { get; set; }

		[JsonPropertyName("scripted_metric")]
		public Elastic.Clients.Elasticsearch.Aggregations.ScriptedMetricAggregation? ScriptedMetric { get; set; }

		[JsonPropertyName("serial_diff")]
		public Elastic.Clients.Elasticsearch.Aggregations.SerialDifferencingAggregation? SerialDiff { get; set; }

		[JsonPropertyName("significant_terms")]
		public Elastic.Clients.Elasticsearch.Aggregations.SignificantTermsAggregation? SignificantTerms { get; set; }

		[JsonPropertyName("significant_text")]
		public Elastic.Clients.Elasticsearch.Aggregations.SignificantTextAggregation? SignificantText { get; set; }

		[JsonPropertyName("stats")]
		public Elastic.Clients.Elasticsearch.Aggregations.StatsAggregation? Stats { get; set; }

		[JsonPropertyName("stats_bucket")]
		public Elastic.Clients.Elasticsearch.Aggregations.StatsBucketAggregation? StatsBucket { get; set; }

		[JsonPropertyName("string_stats")]
		public Elastic.Clients.Elasticsearch.Aggregations.StringStatsAggregation? StringStats { get; set; }

		[JsonPropertyName("sum")]
		public Elastic.Clients.Elasticsearch.Aggregations.SumAggregation? Sum { get; set; }

		[JsonPropertyName("sum_bucket")]
		public Elastic.Clients.Elasticsearch.Aggregations.SumBucketAggregation? SumBucket { get; set; }

		[JsonPropertyName("terms")]
		public Elastic.Clients.Elasticsearch.Aggregations.TermsAggregation? Terms { get; set; }

		[JsonPropertyName("top_hits")]
		public Elastic.Clients.Elasticsearch.Aggregations.TopHitsAggregation? TopHits { get; set; }

		[JsonPropertyName("top_metrics")]
		public Elastic.Clients.Elasticsearch.Aggregations.TopMetricsAggregation? TopMetrics { get; set; }

		[JsonPropertyName("t_test")]
		public Elastic.Clients.Elasticsearch.Aggregations.TTestAggregation? TTest { get; set; }

		[JsonPropertyName("value_count")]
		public Elastic.Clients.Elasticsearch.Aggregations.ValueCountAggregation? ValueCount { get; set; }

		[JsonPropertyName("variable_width_histogram")]
		public Elastic.Clients.Elasticsearch.Aggregations.VariableWidthHistogramAggregation? VariableWidthHistogram { get; set; }

		[JsonPropertyName("weighted_avg")]
		public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation? WeightedAvg { get; set; }
	}

	public partial class AggregationRange
	{
		[JsonPropertyName("from")]
		public Union<double, string>? From { get; set; }

		[JsonPropertyName("key")]
		public string? Key { get; set; }

		[JsonPropertyName("to")]
		public Union<double, string>? To { get; set; }
	}

	public partial class AutoDateHistogramAggregate<TBucket> : Aggregations.MultiBucketAggregate<TBucket>
	{
		[JsonPropertyName("interval")]
		public Elastic.Clients.Elasticsearch.DateMathTime Interval
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class AutoDateHistogramAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("buckets")]
		public int? Buckets { get; set; }

		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonPropertyName("minimum_interval")]
		public Elastic.Clients.Elasticsearch.Aggregations.MinimumInterval? MinimumInterval { get; set; }

		[JsonPropertyName("missing")]
		public Elastic.Clients.Elasticsearch.DateString? Missing { get; set; }

		[JsonPropertyName("offset")]
		public string? Offset { get; set; }

		[JsonPropertyName("params")]
		public Dictionary<string, object>? Params { get; set; }

		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		[JsonPropertyName("time_zone")]
		public string? TimeZone { get; set; }
	}

	public partial class AverageAggregation : Aggregations.FormatMetricAggregationBase
	{
	}

	public partial class AverageBucketAggregation : Aggregations.PipelineAggregationBase
	{
	}

	public partial class BoxPlotAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("max")]
		public double Max
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("min")]
		public double Min
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("q1")]
		public double Q1
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("q2")]
		public double Q2
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("q3")]
		public double Q3
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class BoxplotAggregation : Aggregations.MetricAggregationBase
	{
		[JsonPropertyName("compression")]
		public double? Compression { get; set; }
	}

	public partial class BucketAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("after_key")]
		public Dictionary<string, object> AfterKey
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("bg_count")]
		public long BgCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("doc_count")]
		public long DocCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("doc_count_error_upper_bound")]
		public long DocCountErrorUpperBound
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("interval")]
		public Elastic.Clients.Elasticsearch.DateMathTime Interval
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("items")]
		public Elastic.Clients.Elasticsearch.Aggregations.Bucket Items
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("sum_other_doc_count")]
		public long SumOtherDocCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class BucketAggregationBase : Aggregations.Aggregation
	{
		[JsonPropertyName("aggregations")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.Aggregations.AggregationContainer>? Aggregations { get; set; }
	}

	public partial class BucketScriptAggregation : Aggregations.PipelineAggregationBase
	{
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }
	}

	public partial class BucketSelectorAggregation : Aggregations.PipelineAggregationBase
	{
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }
	}

	public partial class BucketSortAggregation : Aggregations.Aggregation
	{
		[JsonPropertyName("from")]
		public int? From { get; set; }

		[JsonPropertyName("gap_policy")]
		public Elastic.Clients.Elasticsearch.Aggregations.GapPolicy? GapPolicy { get; set; }

		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonPropertyName("sort")]
		public Elastic.Clients.Elasticsearch.Global.Search.Sort? Sort { get; set; }
	}

	public partial class BucketsPath
	{
	}

	public partial class CardinalityAggregation : Aggregations.MetricAggregationBase
	{
		[JsonPropertyName("precision_threshold")]
		public int? PrecisionThreshold { get; set; }

		[JsonPropertyName("rehash")]
		public bool? Rehash { get; set; }
	}

	public partial class ChiSquareHeuristic
	{
		[JsonPropertyName("background_is_superset")]
		public bool BackgroundIsSuperset { get; set; }

		[JsonPropertyName("include_negatives")]
		public bool IncludeNegatives { get; set; }
	}

	public partial class ChildrenAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("type")]
		public Elastic.Clients.Elasticsearch.RelationName? Type { get; set; }
	}

	public partial class ClassificationInferenceOptions
	{
		[JsonPropertyName("num_top_classes")]
		public int? NumTopClasses { get; set; }

		[JsonPropertyName("num_top_feature_importance_values")]
		public int? NumTopFeatureImportanceValues { get; set; }

		[JsonPropertyName("prediction_field_type")]
		public string? PredictionFieldType { get; set; }

		[JsonPropertyName("results_field")]
		public string? ResultsField { get; set; }

		[JsonPropertyName("top_classes_results_field")]
		public string? TopClassesResultsField { get; set; }
	}

	public partial class CompositeAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonPropertyName("sources")]
		public IEnumerable<Dictionary<string, Elastic.Clients.Elasticsearch.Aggregations.CompositeAggregationSource>>? Sources { get; set; }
	}

	public partial class CompositeAggregationSource
	{
		[JsonPropertyName("date_histogram")]
		public Elastic.Clients.Elasticsearch.Aggregations.DateHistogramAggregation? DateHistogram { get; set; }

		[JsonPropertyName("geotile_grid")]
		public Elastic.Clients.Elasticsearch.Aggregations.GeoTileGridAggregation? GeotileGrid { get; set; }

		[JsonPropertyName("histogram")]
		public Elastic.Clients.Elasticsearch.Aggregations.HistogramAggregation? Histogram { get; set; }

		[JsonPropertyName("terms")]
		public Elastic.Clients.Elasticsearch.Aggregations.TermsAggregation? Terms { get; set; }
	}

	public partial class CompositeBucket
	{
	}

	public partial class CompositeBucketAggregate<TBucket> : Aggregations.MultiBucketAggregate<TBucket>
	{
		[JsonPropertyName("after_key")]
		public Dictionary<string, object> AfterKey
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class CumulativeCardinalityAggregation : Aggregations.PipelineAggregationBase
	{
	}

	public partial class CumulativeSumAggregation : Aggregations.PipelineAggregationBase
	{
	}

	public partial class DateHistogramAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("calendar_interval")]
		public Union<Elastic.Clients.Elasticsearch.Aggregations.DateInterval, Elastic.Clients.Elasticsearch.Time>? CalendarInterval { get; set; }

		[JsonPropertyName("extended_bounds")]
		public Elastic.Clients.Elasticsearch.Aggregations.ExtendedBounds<Union<Elastic.Clients.Elasticsearch.DateMath, long>>? ExtendedBounds { get; set; }

		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("fixed_interval")]
		public Union<Elastic.Clients.Elasticsearch.Aggregations.DateInterval, Elastic.Clients.Elasticsearch.Time>? FixedInterval { get; set; }

		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonPropertyName("hard_bounds")]
		public Elastic.Clients.Elasticsearch.Aggregations.ExtendedBounds<Union<Elastic.Clients.Elasticsearch.DateMath, long>>? HardBounds { get; set; }

		[JsonPropertyName("interval")]
		public Union<Elastic.Clients.Elasticsearch.Aggregations.DateInterval, Elastic.Clients.Elasticsearch.Time>? Interval { get; set; }

		[JsonPropertyName("keyed")]
		public bool? Keyed { get; set; }

		[JsonPropertyName("min_doc_count")]
		public int? MinDocCount { get; set; }

		[JsonPropertyName("missing")]
		public Elastic.Clients.Elasticsearch.DateString? Missing { get; set; }

		[JsonPropertyName("offset")]
		public Elastic.Clients.Elasticsearch.Time? Offset { get; set; }

		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.Aggregations.HistogramOrder? Order { get; set; }

		[JsonPropertyName("params")]
		public Dictionary<string, object>? Params { get; set; }

		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		[JsonPropertyName("time_zone")]
		public string? TimeZone { get; set; }
	}

	public partial class DateHistogramBucket
	{
	}

	public partial class DateRangeAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonPropertyName("keyed")]
		public bool? Keyed { get; set; }

		[JsonPropertyName("missing")]
		public Elastic.Clients.Elasticsearch.Aggregations.Missing? Missing { get; set; }

		[JsonPropertyName("ranges")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Aggregations.DateRangeExpression>? Ranges { get; set; }

		[JsonPropertyName("time_zone")]
		public string? TimeZone { get; set; }
	}

	public partial class DateRangeExpression
	{
		[JsonPropertyName("doc_count")]
		public long? DocCount { get; set; }

		[JsonPropertyName("from")]
		public Union<Elastic.Clients.Elasticsearch.DateMath, float>? From { get; set; }

		[JsonPropertyName("from_as_string")]
		public string? FromAsString { get; set; }

		[JsonPropertyName("key")]
		public string? Key { get; set; }

		[JsonPropertyName("to")]
		public Union<Elastic.Clients.Elasticsearch.DateMath, float>? To { get; set; }

		[JsonPropertyName("to_as_string")]
		public string? ToAsString { get; set; }
	}

	public partial class DerivativeAggregation : Aggregations.PipelineAggregationBase
	{
	}

	public partial class DiversifiedSamplerAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("execution_hint")]
		public Elastic.Clients.Elasticsearch.Aggregations.SamplerAggregationExecutionHint? ExecutionHint { get; set; }

		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("max_docs_per_value")]
		public int? MaxDocsPerValue { get; set; }

		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }
	}

	public partial class EwmaModelSettings
	{
		[JsonPropertyName("alpha")]
		public float? Alpha
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ExtendedBounds<T>
	{
		[JsonPropertyName("max")]
		public T Max { get; set; }

		[JsonPropertyName("min")]
		public T Min { get; set; }
	}

	public partial class ExtendedStatsAggregate : Aggregations.StatsAggregate
	{
		[JsonPropertyName("std_deviation")]
		public double? StdDeviation
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("std_deviation_bounds")]
		public Elastic.Clients.Elasticsearch.Aggregations.StandardDeviationBounds StdDeviationBounds
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("std_deviation_population")]
		public double? StdDeviationPopulation
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("std_deviation_sampling")]
		public double? StdDeviationSampling
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("sum_of_squares")]
		public double? SumOfSquares
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("variance")]
		public double? Variance
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("variance_population")]
		public double? VariancePopulation
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("variance_sampling")]
		public double? VarianceSampling
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ExtendedStatsAggregation : Aggregations.FormatMetricAggregationBase
	{
		[JsonPropertyName("sigma")]
		public double? Sigma { get; set; }
	}

	public partial class ExtendedStatsBucketAggregation : Aggregations.PipelineAggregationBase
	{
		[JsonPropertyName("sigma")]
		public double? Sigma { get; set; }
	}

	public partial class FiltersAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("buckets")]
		public Union<IReadOnlyCollection<Elastic.Clients.Elasticsearch.Aggregations.FiltersBucketItem>, Dictionary<string, Elastic.Clients.Elasticsearch.Aggregations.FiltersBucketItem>> Buckets
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class FiltersAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("filters")]
		public Union<Dictionary<string, Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer>, IEnumerable<Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer>>? Filters { get; set; }

		[JsonPropertyName("keyed")]
		public bool? Keyed { get; set; }

		[JsonPropertyName("other_bucket")]
		public bool? OtherBucket { get; set; }

		[JsonPropertyName("other_bucket_key")]
		public string? OtherBucketKey { get; set; }
	}

	public partial class FiltersBucketItem
	{
		[JsonPropertyName("doc_count")]
		public long DocCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class FormatMetricAggregationBase : Aggregations.MetricAggregationBase
	{
		[JsonPropertyName("format")]
		public string? Format { get; set; }
	}

	public partial class FormattableMetricAggregation : Aggregations.MetricAggregationBase
	{
		[JsonPropertyName("format")]
		public string? Format { get; set; }
	}

	public partial class GeoBounds
	{
		[JsonPropertyName("bottom_right")]
		public Elastic.Clients.Elasticsearch.LatLon BottomRight { get; set; }

		[JsonPropertyName("top_left")]
		public Elastic.Clients.Elasticsearch.LatLon TopLeft { get; set; }
	}

	public partial class GeoBoundsAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("bounds")]
		public Elastic.Clients.Elasticsearch.Aggregations.GeoBounds Bounds
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GeoBoundsAggregation : Aggregations.MetricAggregationBase
	{
		[JsonPropertyName("wrap_longitude")]
		public bool? WrapLongitude { get; set; }
	}

	public partial class GeoCentroidAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("count")]
		public long Count
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("location")]
		public Elastic.Clients.Elasticsearch.QueryDsl.GeoLocation Location
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GeoCentroidAggregation : Aggregations.MetricAggregationBase
	{
		[JsonPropertyName("count")]
		public long? Count { get; set; }

		[JsonPropertyName("location")]
		public Elastic.Clients.Elasticsearch.QueryDsl.GeoLocation? Location { get; set; }
	}

	public partial class GeoDistanceAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("distance_type")]
		public Elastic.Clients.Elasticsearch.GeoDistanceType? DistanceType { get; set; }

		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("origin")]
		public Union<Elastic.Clients.Elasticsearch.QueryDsl.GeoLocation, string>? Origin { get; set; }

		[JsonPropertyName("ranges")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Aggregations.AggregationRange>? Ranges { get; set; }

		[JsonPropertyName("unit")]
		public Elastic.Clients.Elasticsearch.DistanceUnit? Unit { get; set; }
	}

	public partial class GeoHashGridAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("bounds")]
		public Elastic.Clients.Elasticsearch.QueryDsl.BoundingBox? Bounds { get; set; }

		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("precision")]
		public Elastic.Clients.Elasticsearch.GeoHashPrecision? Precision { get; set; }

		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonPropertyName("size")]
		public int? Size { get; set; }
	}

	public partial class GeoLineAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("geometry")]
		public Elastic.Clients.Elasticsearch.Aggregations.LineStringGeoShape Geometry
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("properties")]
		public Elastic.Clients.Elasticsearch.Aggregations.GeoLineProperties Properties
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("type")]
		public string Type
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GeoLineAggregation
	{
		[JsonPropertyName("include_sort")]
		public bool? IncludeSort { get; set; }

		[JsonPropertyName("point")]
		public Elastic.Clients.Elasticsearch.Aggregations.GeoLinePoint Point { get; set; }

		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonPropertyName("sort")]
		public Elastic.Clients.Elasticsearch.Aggregations.GeoLineSort Sort { get; set; }

		[JsonPropertyName("sort_order")]
		public Elastic.Clients.Elasticsearch.Global.Search.SortOrder? SortOrder { get; set; }
	}

	public partial class GeoLinePoint
	{
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }
	}

	public partial class GeoLineProperties
	{
		[JsonPropertyName("complete")]
		public bool Complete
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("sort_values")]
		public IReadOnlyCollection<double> SortValues
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GeoLineSort
	{
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }
	}

	public partial class GeoTileGridAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("bounds")]
		public Elastic.Clients.Elasticsearch.Aggregations.GeoBounds? Bounds { get; set; }

		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("precision")]
		public Elastic.Clients.Elasticsearch.GeoTilePrecision? Precision { get; set; }

		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonPropertyName("size")]
		public int? Size { get; set; }
	}

	public partial class GlobalAggregation : Aggregations.BucketAggregationBase
	{
	}

	public partial class GoogleNormalizedDistanceHeuristic
	{
		[JsonPropertyName("background_is_superset")]
		public bool BackgroundIsSuperset { get; set; }
	}

	public partial class HdrMethod
	{
		[JsonPropertyName("number_of_significant_value_digits")]
		public int? NumberOfSignificantValueDigits { get; set; }
	}

	public partial class HdrPercentileItem
	{
		[JsonPropertyName("key")]
		public double Key
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("value")]
		public double Value
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class HdrPercentilesAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("values")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Aggregations.HdrPercentileItem> Values
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class HistogramAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("extended_bounds")]
		public Elastic.Clients.Elasticsearch.Aggregations.ExtendedBounds<double>? ExtendedBounds { get; set; }

		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonPropertyName("hard_bounds")]
		public Elastic.Clients.Elasticsearch.Aggregations.ExtendedBounds<double>? HardBounds { get; set; }

		[JsonPropertyName("interval")]
		public double? Interval { get; set; }

		[JsonPropertyName("keyed")]
		public bool? Keyed { get; set; }

		[JsonPropertyName("min_doc_count")]
		public int? MinDocCount { get; set; }

		[JsonPropertyName("missing")]
		public double? Missing { get; set; }

		[JsonPropertyName("offset")]
		public double? Offset { get; set; }

		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.Aggregations.HistogramOrder? Order { get; set; }

		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }
	}

	public partial class HistogramOrder
	{
		[JsonPropertyName("_count")]
		public Elastic.Clients.Elasticsearch.Global.Search.SortOrder? Count { get; set; }

		[JsonPropertyName("_key")]
		public Elastic.Clients.Elasticsearch.Global.Search.SortOrder? Key { get; set; }
	}

	public partial class HoltLinearModelSettings
	{
		[JsonPropertyName("alpha")]
		public float? Alpha
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("beta")]
		public float? Beta
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class HoltWintersModelSettings
	{
		[JsonPropertyName("alpha")]
		public float? Alpha
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("beta")]
		public float? Beta
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("gamma")]
		public float? Gamma
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("pad")]
		public bool? Pad
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("period")]
		public int? Period
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("type")]
		public Elastic.Clients.Elasticsearch.Aggregations.HoltWintersType? Type
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class InferenceAggregation : Aggregations.PipelineAggregationBase
	{
		[JsonPropertyName("inference_config")]
		public Elastic.Clients.Elasticsearch.Aggregations.InferenceConfigContainer? InferenceConfig { get; set; }

		[JsonPropertyName("model_id")]
		public Elastic.Clients.Elasticsearch.Name ModelId { get; set; }
	}

	public partial class InferenceConfigContainer
	{
		[JsonPropertyName("classification")]
		public Elastic.Clients.Elasticsearch.Aggregations.ClassificationInferenceOptions? Classification { get; set; }

		[JsonPropertyName("regression")]
		public Elastic.Clients.Elasticsearch.Aggregations.RegressionInferenceOptions? Regression { get; set; }
	}

	public partial class IpRangeAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("ranges")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Aggregations.IpRangeAggregationRange>? Ranges { get; set; }
	}

	public partial class IpRangeAggregationRange
	{
		[JsonPropertyName("from")]
		public string? From { get; set; }

		[JsonPropertyName("mask")]
		public string? Mask { get; set; }

		[JsonPropertyName("to")]
		public string? To { get; set; }
	}

	public partial class IpRangeBucket
	{
	}

	public partial class KeyedBucket<TKey>
	{
		[JsonPropertyName("doc_count")]
		public long DocCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("key")]
		public TKey Key
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("key_as_string")]
		public string KeyAsString
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class KeyedValueAggregate : Aggregations.ValueAggregate
	{
		[JsonPropertyName("keys")]
		public IReadOnlyCollection<string> Keys
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class LineStringGeoShape
	{
		[JsonPropertyName("coordinates")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.QueryDsl.GeoCoordinate> Coordinates
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class MatrixAggregation : Aggregations.Aggregation
	{
		[JsonPropertyName("fields")]
		public Elastic.Clients.Elasticsearch.Fields? Fields { get; set; }

		[JsonPropertyName("missing")]
		public Dictionary<Elastic.Clients.Elasticsearch.Field, double>? Missing { get; set; }
	}

	public partial class MatrixStatsAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("correlation")]
		public Dictionary<string, double> Correlation
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("count")]
		public int Count
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("covariance")]
		public Dictionary<string, double> Covariance
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("kurtosis")]
		public double Kurtosis
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("mean")]
		public double Mean
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("name")]
		public string Name
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("skewness")]
		public double Skewness
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("variance")]
		public double Variance
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class MatrixStatsAggregation : Aggregations.MatrixAggregation
	{
		[JsonPropertyName("mode")]
		public Elastic.Clients.Elasticsearch.Aggregations.MatrixStatsMode? Mode { get; set; }
	}

	public partial class MaxAggregation : Aggregations.FormatMetricAggregationBase
	{
	}

	public partial class MaxBucketAggregation : Aggregations.PipelineAggregationBase
	{
	}

	public partial class MedianAbsoluteDeviationAggregation : Aggregations.FormatMetricAggregationBase
	{
		[JsonPropertyName("compression")]
		public double? Compression { get; set; }
	}

	public partial class MetricAggregationBase
	{
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("missing")]
		public Elastic.Clients.Elasticsearch.Aggregations.Missing? Missing { get; set; }

		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }
	}

	public partial class MinAggregation : Aggregations.FormatMetricAggregationBase
	{
	}

	public partial class MinBucketAggregation : Aggregations.PipelineAggregationBase
	{
	}

	public partial class MissingAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("missing")]
		public Elastic.Clients.Elasticsearch.Aggregations.Missing? Missing { get; set; }
	}

	public partial class MovingAverageAggregation : Aggregations.PipelineAggregationBase
	{
		[JsonPropertyName("minimize")]
		public bool? Minimize { get; set; }

		[JsonPropertyName("model")]
		public Elastic.Clients.Elasticsearch.Aggregations.MovingAverageModel? Model { get; set; }

		[JsonPropertyName("predict")]
		public int? Predict { get; set; }

		[JsonPropertyName("settings")]
		public Elastic.Clients.Elasticsearch.Aggregations.MovingAverageSettings Settings { get; set; }

		[JsonPropertyName("window")]
		public int? Window { get; set; }
	}

	public partial class MovingFunctionAggregation : Aggregations.PipelineAggregationBase
	{
		[JsonPropertyName("script")]
		public string? Script { get; set; }

		[JsonPropertyName("shift")]
		public int? Shift { get; set; }

		[JsonPropertyName("window")]
		public int? Window { get; set; }
	}

	public partial class MovingPercentilesAggregation : Aggregations.PipelineAggregationBase
	{
		[JsonPropertyName("keyed")]
		public bool? Keyed { get; set; }

		[JsonPropertyName("shift")]
		public int? Shift { get; set; }

		[JsonPropertyName("window")]
		public int? Window { get; set; }
	}

	public partial class MultiBucketAggregate<TBucket> : Aggregations.AggregateBase
	{
		[JsonPropertyName("buckets")]
		public IReadOnlyCollection<TBucket> Buckets
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class MultiTermLookup
	{
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }
	}

	public partial class MultiTermsAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("terms")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Aggregations.MultiTermLookup> Terms { get; set; }
	}

	public partial class MutualInformationHeuristic
	{
		[JsonPropertyName("background_is_superset")]
		public bool BackgroundIsSuperset { get; set; }

		[JsonPropertyName("include_negatives")]
		public bool IncludeNegatives { get; set; }
	}

	public partial class NestedAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("path")]
		public Elastic.Clients.Elasticsearch.Field? Path { get; set; }
	}

	public partial class NormalizeAggregation : Aggregations.PipelineAggregationBase
	{
		[JsonPropertyName("method")]
		public Elastic.Clients.Elasticsearch.Aggregations.NormalizeMethod? Method { get; set; }
	}

	public partial class ParentAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("type")]
		public Elastic.Clients.Elasticsearch.RelationName? Type { get; set; }
	}

	public partial class PercentageScoreHeuristic
	{
	}

	public partial class PercentileItem
	{
		[JsonPropertyName("percentile")]
		public double Percentile
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("value")]
		public double Value
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class PercentileRanksAggregation : Aggregations.FormatMetricAggregationBase
	{
		[JsonPropertyName("hdr")]
		public Elastic.Clients.Elasticsearch.Aggregations.HdrMethod? Hdr { get; set; }

		[JsonPropertyName("keyed")]
		public bool? Keyed { get; set; }

		[JsonPropertyName("tdigest")]
		public Elastic.Clients.Elasticsearch.Aggregations.TDigest? Tdigest { get; set; }

		[JsonPropertyName("values")]
		public IEnumerable<double>? Values { get; set; }
	}

	public partial class PercentilesAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("items")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Aggregations.PercentileItem> Items
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class PercentilesAggregation : Aggregations.FormatMetricAggregationBase
	{
		[JsonPropertyName("hdr")]
		public Elastic.Clients.Elasticsearch.Aggregations.HdrMethod? Hdr { get; set; }

		[JsonPropertyName("keyed")]
		public bool? Keyed { get; set; }

		[JsonPropertyName("percents")]
		public IEnumerable<double>? Percents { get; set; }

		[JsonPropertyName("tdigest")]
		public Elastic.Clients.Elasticsearch.Aggregations.TDigest? Tdigest { get; set; }
	}

	public partial class PercentilesBucketAggregation : Aggregations.PipelineAggregationBase
	{
		[JsonPropertyName("percents")]
		public IEnumerable<double>? Percents { get; set; }
	}

	public partial class PipelineAggregationBase : Aggregations.Aggregation
	{
		[JsonPropertyName("buckets_path")]
		public Elastic.Clients.Elasticsearch.Aggregations.BucketsPath? BucketsPath { get; set; }

		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonPropertyName("gap_policy")]
		public Elastic.Clients.Elasticsearch.Aggregations.GapPolicy? GapPolicy { get; set; }
	}

	public partial class RangeAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("keyed")]
		public bool? Keyed { get; set; }

		[JsonPropertyName("ranges")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Aggregations.AggregationRange>? Ranges { get; set; }

		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }
	}

	public partial class RangeBucket
	{
	}

	public partial class RareTermsAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("exclude")]
		public Union<string, IEnumerable<string>>? Exclude { get; set; }

		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("include")]
		public OneOf<string, IReadOnlyCollection<string>, Aggregations.TermsInclude>? Include { get; set; }

		[JsonPropertyName("max_doc_count")]
		public long? MaxDocCount { get; set; }

		[JsonPropertyName("missing")]
		public Elastic.Clients.Elasticsearch.Aggregations.Missing? Missing { get; set; }

		[JsonPropertyName("precision")]
		public double? Precision { get; set; }

		[JsonPropertyName("value_type")]
		public string? ValueType { get; set; }
	}

	public partial class RareTermsBucket<TKey>
	{
	}

	public partial class RateAggregation : Aggregations.FormatMetricAggregationBase
	{
		[JsonPropertyName("mode")]
		public Elastic.Clients.Elasticsearch.Aggregations.RateMode? Mode { get; set; }

		[JsonPropertyName("unit")]
		public Elastic.Clients.Elasticsearch.Aggregations.DateInterval? Unit { get; set; }
	}

	public partial class RegressionInferenceOptions
	{
		[JsonPropertyName("num_top_feature_importance_values")]
		public int? NumTopFeatureImportanceValues { get; set; }

		[JsonPropertyName("results_field")]
		public Elastic.Clients.Elasticsearch.Field? ResultsField { get; set; }
	}

	public partial class ReverseNestedAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("path")]
		public Elastic.Clients.Elasticsearch.Field? Path { get; set; }
	}

	public partial class SamplerAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }
	}

	public partial class ScriptedHeuristic
	{
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script Script { get; set; }
	}

	public partial class ScriptedMetricAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("value")]
		public object Value
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ScriptedMetricAggregation : Aggregations.MetricAggregationBase
	{
		[JsonPropertyName("combine_script")]
		public Elastic.Clients.Elasticsearch.Script? CombineScript { get; set; }

		[JsonPropertyName("init_script")]
		public Elastic.Clients.Elasticsearch.Script? InitScript { get; set; }

		[JsonPropertyName("map_script")]
		public Elastic.Clients.Elasticsearch.Script? MapScript { get; set; }

		[JsonPropertyName("params")]
		public Dictionary<string, object>? Params { get; set; }

		[JsonPropertyName("reduce_script")]
		public Elastic.Clients.Elasticsearch.Script? ReduceScript { get; set; }
	}

	public partial class SerialDifferencingAggregation : Aggregations.PipelineAggregationBase
	{
		[JsonPropertyName("lag")]
		public int? Lag { get; set; }
	}

	public partial class SignificantTermsAggregate<TKey, TBucket> : Aggregations.MultiBucketAggregate<TBucket>
	{
		[JsonPropertyName("bg_count")]
		public long BgCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("doc_count")]
		public long DocCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class SignificantTermsAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("background_filter")]
		public Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? BackgroundFilter { get; set; }

		[JsonPropertyName("chi_square")]
		public Elastic.Clients.Elasticsearch.Aggregations.ChiSquareHeuristic? ChiSquare { get; set; }

		[JsonPropertyName("exclude")]
		public Union<string, IEnumerable<string>>? Exclude { get; set; }

		[JsonPropertyName("execution_hint")]
		public Elastic.Clients.Elasticsearch.Aggregations.TermsAggregationExecutionHint? ExecutionHint { get; set; }

		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("gnd")]
		public Elastic.Clients.Elasticsearch.Aggregations.GoogleNormalizedDistanceHeuristic? Gnd { get; set; }

		[JsonPropertyName("include")]
		public Union<string, IEnumerable<string>>? Include { get; set; }

		[JsonPropertyName("min_doc_count")]
		public long? MinDocCount { get; set; }

		[JsonPropertyName("mutual_information")]
		public Elastic.Clients.Elasticsearch.Aggregations.MutualInformationHeuristic? MutualInformation { get; set; }

		[JsonPropertyName("percentage")]
		public Elastic.Clients.Elasticsearch.Aggregations.PercentageScoreHeuristic? Percentage { get; set; }

		[JsonPropertyName("script_heuristic")]
		public Elastic.Clients.Elasticsearch.Aggregations.ScriptedHeuristic? ScriptHeuristic { get; set; }

		[JsonPropertyName("shard_min_doc_count")]
		public long? ShardMinDocCount { get; set; }

		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonPropertyName("size")]
		public int? Size { get; set; }
	}

	public partial class SignificantTermsBucket<TKey>
	{
	}

	public partial class SignificantTextAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("background_filter")]
		public Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? BackgroundFilter { get; set; }

		[JsonPropertyName("chi_square")]
		public Elastic.Clients.Elasticsearch.Aggregations.ChiSquareHeuristic? ChiSquare { get; set; }

		[JsonPropertyName("exclude")]
		public Union<string, IEnumerable<string>>? Exclude { get; set; }

		[JsonPropertyName("execution_hint")]
		public Elastic.Clients.Elasticsearch.Aggregations.TermsAggregationExecutionHint? ExecutionHint { get; set; }

		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("filter_duplicate_text")]
		public bool? FilterDuplicateText { get; set; }

		[JsonPropertyName("gnd")]
		public Elastic.Clients.Elasticsearch.Aggregations.GoogleNormalizedDistanceHeuristic? Gnd { get; set; }

		[JsonPropertyName("include")]
		public Union<string, IEnumerable<string>>? Include { get; set; }

		[JsonPropertyName("min_doc_count")]
		public long? MinDocCount { get; set; }

		[JsonPropertyName("mutual_information")]
		public Elastic.Clients.Elasticsearch.Aggregations.MutualInformationHeuristic? MutualInformation { get; set; }

		[JsonPropertyName("percentage")]
		public Elastic.Clients.Elasticsearch.Aggregations.PercentageScoreHeuristic? Percentage { get; set; }

		[JsonPropertyName("script_heuristic")]
		public Elastic.Clients.Elasticsearch.Aggregations.ScriptedHeuristic? ScriptHeuristic { get; set; }

		[JsonPropertyName("shard_min_doc_count")]
		public long? ShardMinDocCount { get; set; }

		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonPropertyName("source_fields")]
		public Elastic.Clients.Elasticsearch.Fields? SourceFields { get; set; }
	}

	public partial class SingleBucketAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("doc_count")]
		public double DocCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class StatsAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("avg")]
		public double? Avg
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("count")]
		public double Count
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max")]
		public double? Max
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("min")]
		public double? Min
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("sum")]
		public double Sum
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class StatsAggregation : Aggregations.FormatMetricAggregationBase
	{
	}

	public partial class StatsBucketAggregation : Aggregations.PipelineAggregationBase
	{
	}

	public partial class StringStatsAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("avg_length")]
		public double AvgLength
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("count")]
		public long Count
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("distribution")]
		public Dictionary<string, double>? Distribution
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("entropy")]
		public double Entropy
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("max_length")]
		public int MaxLength
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("min_length")]
		public int MinLength
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class StringStatsAggregation : Aggregations.MetricAggregationBase
	{
		[JsonPropertyName("show_distribution")]
		public bool? ShowDistribution { get; set; }
	}

	public partial class SumAggregation : Aggregations.FormatMetricAggregationBase
	{
	}

	public partial class SumBucketAggregation : Aggregations.PipelineAggregationBase
	{
	}

	public partial class TDigest
	{
		[JsonPropertyName("compression")]
		public int? Compression { get; set; }
	}

	public partial class TDigestPercentilesAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("values")]
		public Dictionary<string, double> Values
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class TTestAggregation : Aggregations.Aggregation
	{
		[JsonPropertyName("a")]
		public Elastic.Clients.Elasticsearch.Aggregations.TestPopulation? a { get; set; }

		[JsonPropertyName("b")]
		public Elastic.Clients.Elasticsearch.Aggregations.TestPopulation? b { get; set; }

		[JsonPropertyName("type")]
		public Elastic.Clients.Elasticsearch.Aggregations.TTestType? Type { get; set; }
	}

	public partial class TermsAggregate<TKey, TBucket> : Aggregations.MultiBucketAggregate<TBucket>
	{
		[JsonPropertyName("doc_count_error_upper_bound")]
		public long DocCountErrorUpperBound
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("sum_other_doc_count")]
		public long SumOtherDocCount
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class TermsAggregation : Aggregations.BucketAggregationBase
	{
		[JsonPropertyName("collect_mode")]
		public Elastic.Clients.Elasticsearch.Aggregations.TermsAggregationCollectMode? CollectMode { get; set; }

		[JsonPropertyName("exclude")]
		public Union<string, IEnumerable<string>>? Exclude { get; set; }

		[JsonPropertyName("execution_hint")]
		public Elastic.Clients.Elasticsearch.Aggregations.TermsAggregationExecutionHint? ExecutionHint { get; set; }

		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("include")]
		public OneOf<string, IReadOnlyCollection<string>, Aggregations.TermsInclude>? Include { get; set; }

		[JsonPropertyName("min_doc_count")]
		public int? MinDocCount { get; set; }

		[JsonPropertyName("missing")]
		public Elastic.Clients.Elasticsearch.Aggregations.Missing? Missing { get; set; }

		[JsonPropertyName("missing_bucket")]
		public bool? MissingBucket { get; set; }

		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.Aggregations.TermsAggregationOrder? Order { get; set; }

		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonPropertyName("show_term_doc_count_error")]
		public bool? ShowTermDocCountError { get; set; }

		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonPropertyName("value_type")]
		public string? ValueType { get; set; }
	}

	public partial class TermsInclude
	{
		[JsonPropertyName("num_partitions")]
		public long NumPartitions { get; set; }

		[JsonPropertyName("partition")]
		public long Partition { get; set; }
	}

	public partial class TestPopulation
	{
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonPropertyName("filter")]
		public Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? Filter { get; set; }

		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }
	}

	public partial class TopHitsAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("hits")]
		public Elastic.Clients.Elasticsearch.Global.Search.HitsMetadata<Dictionary<string, object>> Hits
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class TopHitsAggregation : Aggregations.MetricAggregationBase
	{
		[JsonPropertyName("docvalue_fields")]
		public Elastic.Clients.Elasticsearch.Fields? DocvalueFields { get; set; }

		[JsonPropertyName("explain")]
		public bool? Explain { get; set; }

		[JsonPropertyName("from")]
		public int? From { get; set; }

		[JsonPropertyName("highlight")]
		public Elastic.Clients.Elasticsearch.Global.Search.Highlight? Highlight { get; set; }

		[JsonPropertyName("script_fields")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.ScriptField>? ScriptFields { get; set; }

		[JsonPropertyName("seq_no_primary_term")]
		public bool? SeqNoPrimaryTerm { get; set; }

		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonPropertyName("sort")]
		public Elastic.Clients.Elasticsearch.Global.Search.Sort? Sort { get; set; }

		[JsonPropertyName("_source")]
		public OneOf<bool, Global.Search.SourceFilter, Fields>? Source { get; set; }

		[JsonPropertyName("stored_fields")]
		public Elastic.Clients.Elasticsearch.Fields? StoredFields { get; set; }

		[JsonPropertyName("track_scores")]
		public bool? TrackScores { get; set; }

		[JsonPropertyName("version")]
		public bool? Version { get; set; }
	}

	public partial class TopMetrics
	{
		[JsonPropertyName("metrics")]
		public Dictionary<string, Union<double, string>> Metrics
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("sort")]
		public IReadOnlyCollection<Union<double, string>> Sort
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class TopMetricsAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("top")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Aggregations.TopMetrics> Top
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class TopMetricsAggregation : Aggregations.MetricAggregationBase
	{
		[JsonPropertyName("metrics")]
		public Union<Elastic.Clients.Elasticsearch.Aggregations.TopMetricsValue, IEnumerable<Elastic.Clients.Elasticsearch.Aggregations.TopMetricsValue>>? Metrics { get; set; }

		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonPropertyName("sort")]
		public Elastic.Clients.Elasticsearch.Global.Search.Sort? Sort { get; set; }
	}

	public partial class TopMetricsValue
	{
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }
	}

	public partial class ValueAggregate : Aggregations.AggregateBase
	{
		[JsonPropertyName("value")]
		public double Value
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("value_as_string")]
		public string? ValueAsString
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ValueCountAggregation : Aggregations.FormattableMetricAggregation
	{
	}

	public partial class VariableWidthHistogramAggregation
	{
		[JsonPropertyName("buckets")]
		public int? Buckets { get; set; }

		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("initial_buffer")]
		public int? InitialBuffer { get; set; }

		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }
	}

	public partial class WeightedAverageAggregation : Aggregations.Aggregation
	{
		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonPropertyName("value")]
		public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValue? Value { get; set; }

		[JsonPropertyName("value_type")]
		public Elastic.Clients.Elasticsearch.Aggregations.ValueType? ValueType { get; set; }

		[JsonPropertyName("weight")]
		public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValue? Weight { get; set; }
	}

	public partial class WeightedAverageValue
	{
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonPropertyName("missing")]
		public double? Missing { get; set; }

		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }
	}
}
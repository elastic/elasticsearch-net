// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Aggregations
{
	public partial class HdrPercentilesAggregate
	{
		[JsonInclude]
		[JsonPropertyName("values")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Aggregations.HdrPercentileItem> Values
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class HdrPercentileItem
	{
		[JsonInclude]
		[JsonPropertyName("key")]
		public double Key
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("value")]
		public double Value
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public abstract partial class AggregateBase
	{
	}

	public partial class TDigestPercentilesAggregate
	{
		[JsonInclude]
		[JsonPropertyName("values")]
		public Dictionary<string, double> Values
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ExtendedStatsAggregate
	{
		[JsonInclude]
		[JsonPropertyName("std_deviation_bounds")]
		public Elastic.Clients.Elasticsearch.Aggregations.StandardDeviationBounds StdDeviationBounds
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("sum_of_squares")]
		public double? SumOfSquares
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("variance")]
		public double? Variance
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("variance_population")]
		public double? VariancePopulation
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("variance_sampling")]
		public double? VarianceSampling
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("std_deviation")]
		public double? StdDeviation
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("std_deviation_population")]
		public double? StdDeviationPopulation
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("std_deviation_sampling")]
		public double? StdDeviationSampling
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class StandardDeviationBounds
	{
		[JsonInclude]
		[JsonPropertyName("lower")]
		public double? Lower
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("upper")]
		public double? Upper
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("lower_population")]
		public double? LowerPopulation
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("upper_population")]
		public double? UpperPopulation
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("lower_sampling")]
		public double? LowerSampling
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("upper_sampling")]
		public double? UpperSampling
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class StatsAggregate
	{
		[JsonInclude]
		[JsonPropertyName("count")]
		public double Count
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("sum")]
		public double Sum
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("avg")]
		public double? Avg
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("max")]
		public double? Max
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("min")]
		public double? Min
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class TopMetricsAggregate
	{
		[JsonInclude]
		[JsonPropertyName("top")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Aggregations.TopMetrics> Top
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class TopMetrics
	{
	}

	public partial class TopHitsAggregate
	{
	}

	public partial class StringStatsAggregate
	{
		[JsonInclude]
		[JsonPropertyName("count")]
		public long Count
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("min_length")]
		public int MinLength
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("max_length")]
		public int MaxLength
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("avg_length")]
		public double AvgLength
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("entropy")]
		public double Entropy
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("distribution")]
		public Dictionary<string, double>? Distribution
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ScriptedMetricAggregate
	{
	}

	public partial class PercentilesAggregate
	{
		[JsonInclude]
		[JsonPropertyName("items")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Aggregations.PercentileItem> Items
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class PercentileItem
	{
		[JsonInclude]
		[JsonPropertyName("percentile")]
		public double Percentile
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("value")]
		public double Value
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GeoLineAggregate
	{
		[JsonInclude]
		[JsonPropertyName("type")]
		public string Type
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("geometry")]
		public Elastic.Clients.Elasticsearch.Aggregations.LineStringGeoShape Geometry
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("properties")]
		public Elastic.Clients.Elasticsearch.Aggregations.GeoLineProperties Properties
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GeoLineProperties
	{
		[JsonInclude]
		[JsonPropertyName("complete")]
		public string Complete
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("sort_values")]
		public IReadOnlyCollection<double> SortValues
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class LineStringGeoShape
	{
		[JsonInclude]
		[JsonPropertyName("coordinates")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.QueryDsl.GeoCoordinate> Coordinates
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GeoCentroidAggregate
	{
		[JsonInclude]
		[JsonPropertyName("count")]
		public long Count
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("location")]
		public Elastic.Clients.Elasticsearch.QueryDsl.GeoLocation Location
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GeoBoundsAggregate
	{
		[JsonInclude]
		[JsonPropertyName("bounds")]
		public Aggregations.IGeoBounds Bounds
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(GeoBounds))]
	public partial interface IGeoBounds
	{
		ILatLon BottomRight { get; set; }

		ILatLon TopLeft { get; set; }
	}

	public partial class GeoBounds : IGeoBounds
	{
		[JsonInclude]
		[JsonPropertyName("bottom_right")]
		public ILatLon BottomRight { get; set; }

		[JsonInclude]
		[JsonPropertyName("top_left")]
		public ILatLon TopLeft { get; set; }
	}

	public partial class GeoBoundsDescriptor
	{
	}

	public partial class BoxPlotAggregate
	{
		[JsonInclude]
		[JsonPropertyName("min")]
		public double Min
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("max")]
		public double Max
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("q1")]
		public double Q1
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("q2")]
		public double Q2
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("q3")]
		public double Q3
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ValueAggregate
	{
		[JsonInclude]
		[JsonPropertyName("value")]
		public double Value
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("value_as_string")]
		public string? ValueAsString
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class KeyedValueAggregate
	{
		[JsonInclude]
		[JsonPropertyName("keys")]
		public IReadOnlyCollection<string> Keys
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class MatrixStatsAggregate
	{
		[JsonInclude]
		[JsonPropertyName("correlation")]
		public Dictionary<string, double> Correlation
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("covariance")]
		public Dictionary<string, double> Covariance
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("count")]
		public int Count
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("kurtosis")]
		public double Kurtosis
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("mean")]
		public double Mean
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("skewness")]
		public double Skewness
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("variance")]
		public double Variance
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("name")]
		public string Name
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class MultiBucketAggregate<TBucket>
	{
	}

	public partial class CompositeBucketAggregate<TBucket>
	{
	}

	public partial class BucketAggregate
	{
		[JsonInclude]
		[JsonPropertyName("bg_count")]
		public long BgCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("doc_count")]
		public long DocCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("doc_count_error_upper_bound")]
		public long DocCountErrorUpperBound
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("sum_other_doc_count")]
		public long SumOtherDocCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("interval")]
		public string Interval
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("items")]
		public Elastic.Clients.Elasticsearch.Aggregations.Bucket Items
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class KeyedBucket<TKey>
	{
		[JsonInclude]
		[JsonPropertyName("doc_count")]
		public long DocCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("key_as_string")]
		public string KeyAsString
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class SignificantTermsBucket<TKey>
	{
	}

	public partial class RareTermsBucket<TKey>
	{
	}

	public partial class RangeBucket
	{
	}

	public partial class IpRangeBucket
	{
	}

	public partial class FiltersBucketItem
	{
		[JsonInclude]
		[JsonPropertyName("doc_count")]
		public long DocCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class DateHistogramBucket
	{
	}

	public partial class CompositeBucket
	{
	}

	public partial class TermsAggregate<TBucket, TKey>
	{
		[JsonInclude]
		[JsonPropertyName("doc_count_error_upper_bound")]
		public long DocCountErrorUpperBound
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("sum_other_doc_count")]
		public long SumOtherDocCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class SignificantTermsAggregate<TBucket, TKey>
	{
		[JsonInclude]
		[JsonPropertyName("bg_count")]
		public long BgCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("doc_count")]
		public long DocCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class FiltersAggregate
	{
	}

	public partial class AutoDateHistogramAggregate<TBucket>
	{
		[JsonInclude]
		[JsonPropertyName("interval")]
		public string Interval
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class SingleBucketAggregate
	{
		[JsonInclude]
		[JsonPropertyName("doc_count")]
		public double DocCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(AggregationContainer))]
	public partial interface IAggregationContainer
	{
		Dictionary<string, Aggregations.IAggregationContainer>? Aggs { get; set; }

		Aggregations.IAdjacencyMatrixAggregation? AdjacencyMatrix { get; set; }

		Dictionary<string, Aggregations.IAggregationContainer>? Aggregations { get; set; }

		Aggregations.IAutoDateHistogramAggregation? AutoDateHistogram { get; set; }

		Aggregations.IAverageAggregation? Avg { get; set; }

		Aggregations.IAverageBucketAggregation? AvgBucket { get; set; }

		Aggregations.IBoxplotAggregation? Boxplot { get; set; }

		Aggregations.IBucketScriptAggregation? BucketScript { get; set; }

		Aggregations.IBucketSelectorAggregation? BucketSelector { get; set; }

		Aggregations.IBucketSortAggregation? BucketSort { get; set; }

		Aggregations.ICardinalityAggregation? Cardinality { get; set; }

		Aggregations.IChildrenAggregation? Children { get; set; }

		Aggregations.ICompositeAggregation? Composite { get; set; }

		Aggregations.ICumulativeCardinalityAggregation? CumulativeCardinality { get; set; }

		Aggregations.ICumulativeSumAggregation? CumulativeSum { get; set; }

		Aggregations.IDateHistogramAggregation? DateHistogram { get; set; }

		Aggregations.IDateRangeAggregation? DateRange { get; set; }

		Aggregations.IDerivativeAggregation? Derivative { get; set; }

		Aggregations.IDiversifiedSamplerAggregation? DiversifiedSampler { get; set; }

		Aggregations.IExtendedStatsAggregation? ExtendedStats { get; set; }

		Aggregations.IExtendedStatsBucketAggregation? ExtendedStatsBucket { get; set; }

		QueryDsl.IQueryContainer? Filter { get; set; }

		Aggregations.IFiltersAggregation? Filters { get; set; }

		Aggregations.IGeoBoundsAggregation? GeoBounds { get; set; }

		Aggregations.IGeoCentroidAggregation? GeoCentroid { get; set; }

		Aggregations.IGeoDistanceAggregation? GeoDistance { get; set; }

		Aggregations.IGeoHashGridAggregation? GeohashGrid { get; set; }

		Aggregations.IGeoLineAggregation? GeoLine { get; set; }

		Aggregations.IGeoTileGridAggregation? GeotileGrid { get; set; }

		Aggregations.IGlobalAggregation? Global { get; set; }

		Aggregations.IHistogramAggregation? Histogram { get; set; }

		Aggregations.IIpRangeAggregation? IpRange { get; set; }

		Aggregations.IInferenceAggregation? Inference { get; set; }

		Aggregations.IGeoLineAggregation? Line { get; set; }

		Aggregations.IMatrixStatsAggregation? MatrixStats { get; set; }

		Aggregations.IMaxAggregation? Max { get; set; }

		Aggregations.IMaxBucketAggregation? MaxBucket { get; set; }

		Aggregations.IMedianAbsoluteDeviationAggregation? MedianAbsoluteDeviation { get; set; }

		Aggregations.IMinAggregation? Min { get; set; }

		Aggregations.IMinBucketAggregation? MinBucket { get; set; }

		Aggregations.IMissingAggregation? Missing { get; set; }

		Aggregations.IMovingAverageAggregation? MovingAvg { get; set; }

		Aggregations.IMovingPercentilesAggregation? MovingPercentiles { get; set; }

		Aggregations.IMovingFunctionAggregation? MovingFn { get; set; }

		Aggregations.IMultiTermsAggregation? MultiTerms { get; set; }

		Aggregations.INestedAggregation? Nested { get; set; }

		Aggregations.INormalizeAggregation? Normalize { get; set; }

		Aggregations.IParentAggregation? Parent { get; set; }

		Aggregations.IPercentileRanksAggregation? PercentileRanks { get; set; }

		Aggregations.IPercentilesAggregation? Percentiles { get; set; }

		Aggregations.IPercentilesBucketAggregation? PercentilesBucket { get; set; }

		Aggregations.IRangeAggregation? Range { get; set; }

		Aggregations.IRareTermsAggregation? RareTerms { get; set; }

		Aggregations.IRateAggregation? Rate { get; set; }

		Aggregations.IReverseNestedAggregation? ReverseNested { get; set; }

		Aggregations.ISamplerAggregation? Sampler { get; set; }

		Aggregations.IScriptedMetricAggregation? ScriptedMetric { get; set; }

		Aggregations.ISerialDifferencingAggregation? SerialDiff { get; set; }

		Aggregations.ISignificantTermsAggregation? SignificantTerms { get; set; }

		Aggregations.ISignificantTextAggregation? SignificantText { get; set; }

		Aggregations.IStatsAggregation? Stats { get; set; }

		Aggregations.IStatsBucketAggregation? StatsBucket { get; set; }

		Aggregations.IStringStatsAggregation? StringStats { get; set; }

		Aggregations.ISumAggregation? Sum { get; set; }

		Aggregations.ISumBucketAggregation? SumBucket { get; set; }

		Aggregations.ITermsAggregation? Terms { get; set; }

		Aggregations.ITopHitsAggregation? TopHits { get; set; }

		Aggregations.ITTestAggregation? TTest { get; set; }

		Aggregations.ITopMetricsAggregation? TopMetrics { get; set; }

		Aggregations.IValueCountAggregation? ValueCount { get; set; }

		Aggregations.IWeightedAverageAggregation? WeightedAvg { get; set; }

		Aggregations.IVariableWidthHistogramAggregation? VariableWidthHistogram { get; set; }
	}

	public partial class AggregationContainer : IAggregationContainer
	{
		[JsonInclude]
		[JsonPropertyName("aggs")]
		public Dictionary<string, Aggregations.IAggregationContainer>? Aggs { get; set; }

		[JsonInclude]
		[JsonPropertyName("adjacency_matrix")]
		public Aggregations.IAdjacencyMatrixAggregation? AdjacencyMatrix { get; set; }

		[JsonInclude]
		[JsonPropertyName("aggregations")]
		public Dictionary<string, Aggregations.IAggregationContainer>? Aggregations { get; set; }

		[JsonInclude]
		[JsonPropertyName("auto_date_histogram")]
		public Aggregations.IAutoDateHistogramAggregation? AutoDateHistogram { get; set; }

		[JsonInclude]
		[JsonPropertyName("avg")]
		public Aggregations.IAverageAggregation? Avg { get; set; }

		[JsonInclude]
		[JsonPropertyName("avg_bucket")]
		public Aggregations.IAverageBucketAggregation? AvgBucket { get; set; }

		[JsonInclude]
		[JsonPropertyName("boxplot")]
		public Aggregations.IBoxplotAggregation? Boxplot { get; set; }

		[JsonInclude]
		[JsonPropertyName("bucket_script")]
		public Aggregations.IBucketScriptAggregation? BucketScript { get; set; }

		[JsonInclude]
		[JsonPropertyName("bucket_selector")]
		public Aggregations.IBucketSelectorAggregation? BucketSelector { get; set; }

		[JsonInclude]
		[JsonPropertyName("bucket_sort")]
		public Aggregations.IBucketSortAggregation? BucketSort { get; set; }

		[JsonInclude]
		[JsonPropertyName("cardinality")]
		public Aggregations.ICardinalityAggregation? Cardinality { get; set; }

		[JsonInclude]
		[JsonPropertyName("children")]
		public Aggregations.IChildrenAggregation? Children { get; set; }

		[JsonInclude]
		[JsonPropertyName("composite")]
		public Aggregations.ICompositeAggregation? Composite { get; set; }

		[JsonInclude]
		[JsonPropertyName("cumulative_cardinality")]
		public Aggregations.ICumulativeCardinalityAggregation? CumulativeCardinality { get; set; }

		[JsonInclude]
		[JsonPropertyName("cumulative_sum")]
		public Aggregations.ICumulativeSumAggregation? CumulativeSum { get; set; }

		[JsonInclude]
		[JsonPropertyName("date_histogram")]
		public Aggregations.IDateHistogramAggregation? DateHistogram { get; set; }

		[JsonInclude]
		[JsonPropertyName("date_range")]
		public Aggregations.IDateRangeAggregation? DateRange { get; set; }

		[JsonInclude]
		[JsonPropertyName("derivative")]
		public Aggregations.IDerivativeAggregation? Derivative { get; set; }

		[JsonInclude]
		[JsonPropertyName("diversified_sampler")]
		public Aggregations.IDiversifiedSamplerAggregation? DiversifiedSampler { get; set; }

		[JsonInclude]
		[JsonPropertyName("extended_stats")]
		public Aggregations.IExtendedStatsAggregation? ExtendedStats { get; set; }

		[JsonInclude]
		[JsonPropertyName("extended_stats_bucket")]
		public Aggregations.IExtendedStatsBucketAggregation? ExtendedStatsBucket { get; set; }

		[JsonInclude]
		[JsonPropertyName("filter")]
		public QueryDsl.IQueryContainer? Filter { get; set; }

		[JsonInclude]
		[JsonPropertyName("filters")]
		public Aggregations.IFiltersAggregation? Filters { get; set; }

		[JsonInclude]
		[JsonPropertyName("geo_bounds")]
		public Aggregations.IGeoBoundsAggregation? GeoBounds { get; set; }

		[JsonInclude]
		[JsonPropertyName("geo_centroid")]
		public Aggregations.IGeoCentroidAggregation? GeoCentroid { get; set; }

		[JsonInclude]
		[JsonPropertyName("geo_distance")]
		public Aggregations.IGeoDistanceAggregation? GeoDistance { get; set; }

		[JsonInclude]
		[JsonPropertyName("geohash_grid")]
		public Aggregations.IGeoHashGridAggregation? GeohashGrid { get; set; }

		[JsonInclude]
		[JsonPropertyName("geo_line")]
		public Aggregations.IGeoLineAggregation? GeoLine { get; set; }

		[JsonInclude]
		[JsonPropertyName("geotile_grid")]
		public Aggregations.IGeoTileGridAggregation? GeotileGrid { get; set; }

		[JsonInclude]
		[JsonPropertyName("global")]
		public Aggregations.IGlobalAggregation? Global { get; set; }

		[JsonInclude]
		[JsonPropertyName("histogram")]
		public Aggregations.IHistogramAggregation? Histogram { get; set; }

		[JsonInclude]
		[JsonPropertyName("ip_range")]
		public Aggregations.IIpRangeAggregation? IpRange { get; set; }

		[JsonInclude]
		[JsonPropertyName("inference")]
		public Aggregations.IInferenceAggregation? Inference { get; set; }

		[JsonInclude]
		[JsonPropertyName("line")]
		public Aggregations.IGeoLineAggregation? Line { get; set; }

		[JsonInclude]
		[JsonPropertyName("matrix_stats")]
		public Aggregations.IMatrixStatsAggregation? MatrixStats { get; set; }

		[JsonInclude]
		[JsonPropertyName("max")]
		public Aggregations.IMaxAggregation? Max { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_bucket")]
		public Aggregations.IMaxBucketAggregation? MaxBucket { get; set; }

		[JsonInclude]
		[JsonPropertyName("median_absolute_deviation")]
		public Aggregations.IMedianAbsoluteDeviationAggregation? MedianAbsoluteDeviation { get; set; }

		[JsonInclude]
		[JsonPropertyName("min")]
		public Aggregations.IMinAggregation? Min { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_bucket")]
		public Aggregations.IMinBucketAggregation? MinBucket { get; set; }

		[JsonInclude]
		[JsonPropertyName("missing")]
		public Aggregations.IMissingAggregation? Missing { get; set; }

		[JsonInclude]
		[JsonPropertyName("moving_avg")]
		public Aggregations.IMovingAverageAggregation? MovingAvg { get; set; }

		[JsonInclude]
		[JsonPropertyName("moving_percentiles")]
		public Aggregations.IMovingPercentilesAggregation? MovingPercentiles { get; set; }

		[JsonInclude]
		[JsonPropertyName("moving_fn")]
		public Aggregations.IMovingFunctionAggregation? MovingFn { get; set; }

		[JsonInclude]
		[JsonPropertyName("multi_terms")]
		public Aggregations.IMultiTermsAggregation? MultiTerms { get; set; }

		[JsonInclude]
		[JsonPropertyName("nested")]
		public Aggregations.INestedAggregation? Nested { get; set; }

		[JsonInclude]
		[JsonPropertyName("normalize")]
		public Aggregations.INormalizeAggregation? Normalize { get; set; }

		[JsonInclude]
		[JsonPropertyName("parent")]
		public Aggregations.IParentAggregation? Parent { get; set; }

		[JsonInclude]
		[JsonPropertyName("percentile_ranks")]
		public Aggregations.IPercentileRanksAggregation? PercentileRanks { get; set; }

		[JsonInclude]
		[JsonPropertyName("percentiles")]
		public Aggregations.IPercentilesAggregation? Percentiles { get; set; }

		[JsonInclude]
		[JsonPropertyName("percentiles_bucket")]
		public Aggregations.IPercentilesBucketAggregation? PercentilesBucket { get; set; }

		[JsonInclude]
		[JsonPropertyName("range")]
		public Aggregations.IRangeAggregation? Range { get; set; }

		[JsonInclude]
		[JsonPropertyName("rare_terms")]
		public Aggregations.IRareTermsAggregation? RareTerms { get; set; }

		[JsonInclude]
		[JsonPropertyName("rate")]
		public Aggregations.IRateAggregation? Rate { get; set; }

		[JsonInclude]
		[JsonPropertyName("reverse_nested")]
		public Aggregations.IReverseNestedAggregation? ReverseNested { get; set; }

		[JsonInclude]
		[JsonPropertyName("sampler")]
		public Aggregations.ISamplerAggregation? Sampler { get; set; }

		[JsonInclude]
		[JsonPropertyName("scripted_metric")]
		public Aggregations.IScriptedMetricAggregation? ScriptedMetric { get; set; }

		[JsonInclude]
		[JsonPropertyName("serial_diff")]
		public Aggregations.ISerialDifferencingAggregation? SerialDiff { get; set; }

		[JsonInclude]
		[JsonPropertyName("significant_terms")]
		public Aggregations.ISignificantTermsAggregation? SignificantTerms { get; set; }

		[JsonInclude]
		[JsonPropertyName("significant_text")]
		public Aggregations.ISignificantTextAggregation? SignificantText { get; set; }

		[JsonInclude]
		[JsonPropertyName("stats")]
		public Aggregations.IStatsAggregation? Stats { get; set; }

		[JsonInclude]
		[JsonPropertyName("stats_bucket")]
		public Aggregations.IStatsBucketAggregation? StatsBucket { get; set; }

		[JsonInclude]
		[JsonPropertyName("string_stats")]
		public Aggregations.IStringStatsAggregation? StringStats { get; set; }

		[JsonInclude]
		[JsonPropertyName("sum")]
		public Aggregations.ISumAggregation? Sum { get; set; }

		[JsonInclude]
		[JsonPropertyName("sum_bucket")]
		public Aggregations.ISumBucketAggregation? SumBucket { get; set; }

		[JsonInclude]
		[JsonPropertyName("terms")]
		public Aggregations.ITermsAggregation? Terms { get; set; }

		[JsonInclude]
		[JsonPropertyName("top_hits")]
		public Aggregations.ITopHitsAggregation? TopHits { get; set; }

		[JsonInclude]
		[JsonPropertyName("t_test")]
		public Aggregations.ITTestAggregation? TTest { get; set; }

		[JsonInclude]
		[JsonPropertyName("top_metrics")]
		public Aggregations.ITopMetricsAggregation? TopMetrics { get; set; }

		[JsonInclude]
		[JsonPropertyName("value_count")]
		public Aggregations.IValueCountAggregation? ValueCount { get; set; }

		[JsonInclude]
		[JsonPropertyName("weighted_avg")]
		public Aggregations.IWeightedAverageAggregation? WeightedAvg { get; set; }

		[JsonInclude]
		[JsonPropertyName("variable_width_histogram")]
		public Aggregations.IVariableWidthHistogramAggregation? VariableWidthHistogram { get; set; }
	}

	public partial class AggregationContainerDescriptor
	{
	}

	[ConvertAs(typeof(VariableWidthHistogramAggregation))]
	public partial interface IVariableWidthHistogramAggregation
	{
		string? Field { get; set; }

		int? Buckets { get; set; }

		int? ShardSize { get; set; }

		int? InitialBuffer { get; set; }
	}

	public partial class VariableWidthHistogramAggregation : IVariableWidthHistogramAggregation
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("buckets")]
		public int? Buckets { get; set; }

		[JsonInclude]
		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("initial_buffer")]
		public int? InitialBuffer { get; set; }
	}

	public partial class VariableWidthHistogramAggregationDescriptor
	{
	}

	[ConvertAs(typeof(WeightedAverageAggregation))]
	public partial interface IWeightedAverageAggregation
	{
		string? Format { get; set; }

		Aggregations.IWeightedAverageValue? Value { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.ValueType? ValueType { get; set; }

		Aggregations.IWeightedAverageValue? Weight { get; set; }
	}

	public partial class WeightedAverageAggregation : IWeightedAverageAggregation
	{
		[JsonInclude]
		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonInclude]
		[JsonPropertyName("value")]
		public Aggregations.IWeightedAverageValue? Value { get; set; }

		[JsonInclude]
		[JsonPropertyName("value_type")]
		public Elastic.Clients.Elasticsearch.Aggregations.ValueType? ValueType { get; set; }

		[JsonInclude]
		[JsonPropertyName("weight")]
		public Aggregations.IWeightedAverageValue? Weight { get; set; }
	}

	public partial class WeightedAverageAggregationDescriptor
	{
	}

	[ConvertAs(typeof(WeightedAverageValue))]
	public partial interface IWeightedAverageValue
	{
		string? Field { get; set; }

		double? Missing { get; set; }

		Elastic.Clients.Elasticsearch.Script? Script { get; set; }
	}

	public partial class WeightedAverageValue : IWeightedAverageValue
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("missing")]
		public double? Missing { get; set; }

		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }
	}

	public partial class WeightedAverageValueDescriptor
	{
	}

	[ConvertAs(typeof(Aggregation))]
	public partial interface IAggregation
	{
		string? Name { get; set; }
	}

	public partial class Aggregation : IAggregation
	{
		[JsonInclude]
		[JsonPropertyName("name")]
		public string? Name { get; set; }
	}

	public partial class AggregationDescriptor
	{
	}

	[ConvertAs(typeof(ValueCountAggregation))]
	public partial interface IValueCountAggregation
	{
	}

	public partial class ValueCountAggregation : IValueCountAggregation
	{
	}

	public partial class ValueCountAggregationDescriptor
	{
	}

	[ConvertAs(typeof(FormattableMetricAggregation))]
	public partial interface IFormattableMetricAggregation
	{
		string? Format { get; set; }
	}

	public partial class FormattableMetricAggregation : IFormattableMetricAggregation
	{
		[JsonInclude]
		[JsonPropertyName("format")]
		public string? Format { get; set; }
	}

	public partial class FormattableMetricAggregationDescriptor
	{
	}

	[ConvertAs(typeof(MetricAggregationBase))]
	public partial interface IMetricAggregationBase
	{
		string? Field { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.Missing? Missing { get; set; }

		Elastic.Clients.Elasticsearch.Script? Script { get; set; }
	}

	public abstract partial class MetricAggregationBase : IMetricAggregationBase
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("missing")]
		public Elastic.Clients.Elasticsearch.Aggregations.Missing? Missing { get; set; }

		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }
	}

	public partial class MetricAggregationBaseDescriptor
	{
	}

	[ConvertAs(typeof(TopMetricsAggregation))]
	public partial interface ITopMetricsAggregation
	{
		int? Size { get; set; }

		Elastic.Clients.Elasticsearch.Sort? Sort { get; set; }
	}

	public partial class TopMetricsAggregation : ITopMetricsAggregation
	{
		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonInclude]
		[JsonPropertyName("sort")]
		public Elastic.Clients.Elasticsearch.Sort? Sort { get; set; }
	}

	public partial class TopMetricsAggregationDescriptor
	{
	}

	[ConvertAs(typeof(TTestAggregation))]
	public partial interface ITTestAggregation
	{
		Aggregations.ITestPopulation? a { get; set; }

		Aggregations.ITestPopulation? b { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.TTestType? Type { get; set; }
	}

	public partial class TTestAggregation : ITTestAggregation
	{
		[JsonInclude]
		[JsonPropertyName("a")]
		public Aggregations.ITestPopulation? a { get; set; }

		[JsonInclude]
		[JsonPropertyName("b")]
		public Aggregations.ITestPopulation? b { get; set; }

		[JsonInclude]
		[JsonPropertyName("type")]
		public Elastic.Clients.Elasticsearch.Aggregations.TTestType? Type { get; set; }
	}

	public partial class TTestAggregationDescriptor
	{
	}

	[ConvertAs(typeof(TestPopulation))]
	public partial interface ITestPopulation
	{
		string Field { get; set; }

		Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		QueryDsl.IQueryContainer? Filter { get; set; }
	}

	public partial class TestPopulation : ITestPopulation
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		[JsonInclude]
		[JsonPropertyName("filter")]
		public QueryDsl.IQueryContainer? Filter { get; set; }
	}

	public partial class TestPopulationDescriptor
	{
	}

	[ConvertAs(typeof(TopHitsAggregation))]
	public partial interface ITopHitsAggregation
	{
		Elastic.Clients.Elasticsearch.Fields? DocvalueFields { get; set; }

		string? Explain { get; set; }

		int? From { get; set; }

		IHighlight? Highlight { get; set; }

		Dictionary<string, IScriptField>? ScriptFields { get; set; }

		int? Size { get; set; }

		Elastic.Clients.Elasticsearch.Sort? Sort { get; set; }

		Elastic.Clients.Elasticsearch.Fields? StoredFields { get; set; }

		string? TrackScores { get; set; }

		string? Version { get; set; }

		string? SeqNoPrimaryTerm { get; set; }
	}

	public partial class TopHitsAggregation : ITopHitsAggregation
	{
		[JsonInclude]
		[JsonPropertyName("docvalue_fields")]
		public Elastic.Clients.Elasticsearch.Fields? DocvalueFields { get; set; }

		[JsonInclude]
		[JsonPropertyName("explain")]
		public string? Explain { get; set; }

		[JsonInclude]
		[JsonPropertyName("from")]
		public int? From { get; set; }

		[JsonInclude]
		[JsonPropertyName("highlight")]
		public IHighlight? Highlight { get; set; }

		[JsonInclude]
		[JsonPropertyName("script_fields")]
		public Dictionary<string, IScriptField>? ScriptFields { get; set; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonInclude]
		[JsonPropertyName("sort")]
		public Elastic.Clients.Elasticsearch.Sort? Sort { get; set; }

		[JsonInclude]
		[JsonPropertyName("stored_fields")]
		public Elastic.Clients.Elasticsearch.Fields? StoredFields { get; set; }

		[JsonInclude]
		[JsonPropertyName("track_scores")]
		public string? TrackScores { get; set; }

		[JsonInclude]
		[JsonPropertyName("version")]
		public string? Version { get; set; }

		[JsonInclude]
		[JsonPropertyName("seq_no_primary_term")]
		public string? SeqNoPrimaryTerm { get; set; }
	}

	public partial class TopHitsAggregationDescriptor
	{
	}

	[ConvertAs(typeof(TermsAggregation))]
	public partial interface ITermsAggregation
	{
		Elastic.Clients.Elasticsearch.Aggregations.TermsAggregationCollectMode? CollectMode { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.TermsAggregationExecutionHint? ExecutionHint { get; set; }

		string? Field { get; set; }

		int? MinDocCount { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.Missing? Missing { get; set; }

		string? MissingBucket { get; set; }

		string? ValueType { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.TermsAggregationOrder? Order { get; set; }

		Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		int? ShardSize { get; set; }

		string? ShowTermDocCountError { get; set; }

		int? Size { get; set; }
	}

	public partial class TermsAggregation : ITermsAggregation
	{
		[JsonInclude]
		[JsonPropertyName("collect_mode")]
		public Elastic.Clients.Elasticsearch.Aggregations.TermsAggregationCollectMode? CollectMode { get; set; }

		[JsonInclude]
		[JsonPropertyName("execution_hint")]
		public Elastic.Clients.Elasticsearch.Aggregations.TermsAggregationExecutionHint? ExecutionHint { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_doc_count")]
		public int? MinDocCount { get; set; }

		[JsonInclude]
		[JsonPropertyName("missing")]
		public Elastic.Clients.Elasticsearch.Aggregations.Missing? Missing { get; set; }

		[JsonInclude]
		[JsonPropertyName("missing_bucket")]
		public string? MissingBucket { get; set; }

		[JsonInclude]
		[JsonPropertyName("value_type")]
		public string? ValueType { get; set; }

		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.Aggregations.TermsAggregationOrder? Order { get; set; }

		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		[JsonInclude]
		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("show_term_doc_count_error")]
		public string? ShowTermDocCountError { get; set; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }
	}

	public partial class TermsAggregationDescriptor
	{
	}

	[ConvertAs(typeof(BucketAggregationBase))]
	public partial interface IBucketAggregationBase
	{
		Dictionary<string, Aggregations.IAggregationContainer>? Aggregations { get; set; }
	}

	public abstract partial class BucketAggregationBase : IBucketAggregationBase
	{
		[JsonInclude]
		[JsonPropertyName("aggregations")]
		public Dictionary<string, Aggregations.IAggregationContainer>? Aggregations { get; set; }
	}

	public partial class BucketAggregationBaseDescriptor
	{
	}

	[ConvertAs(typeof(SumBucketAggregation))]
	public partial interface ISumBucketAggregation
	{
	}

	public partial class SumBucketAggregation : ISumBucketAggregation
	{
	}

	public partial class SumBucketAggregationDescriptor
	{
	}

	[ConvertAs(typeof(PipelineAggregationBase))]
	public partial interface IPipelineAggregationBase
	{
		Aggregations.IBucketsPath? BucketsPath { get; set; }

		string? Format { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.GapPolicy? GapPolicy { get; set; }
	}

	public abstract partial class PipelineAggregationBase : IPipelineAggregationBase
	{
		[JsonInclude]
		[JsonPropertyName("buckets_path")]
		public Aggregations.IBucketsPath? BucketsPath { get; set; }

		[JsonInclude]
		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonInclude]
		[JsonPropertyName("gap_policy")]
		public Elastic.Clients.Elasticsearch.Aggregations.GapPolicy? GapPolicy { get; set; }
	}

	public partial class PipelineAggregationBaseDescriptor
	{
	}

	[ConvertAs(typeof(BucketsPath))]
	public partial interface IBucketsPath
	{
	}

	public partial class BucketsPath : IBucketsPath
	{
	}

	public partial class BucketsPathDescriptor
	{
	}

	[ConvertAs(typeof(SumAggregation))]
	public partial interface ISumAggregation
	{
	}

	public partial class SumAggregation : ISumAggregation
	{
	}

	public partial class SumAggregationDescriptor
	{
	}

	[ConvertAs(typeof(FormatMetricAggregationBase))]
	public partial interface IFormatMetricAggregationBase
	{
		string? Format { get; set; }
	}

	public abstract partial class FormatMetricAggregationBase : IFormatMetricAggregationBase
	{
		[JsonInclude]
		[JsonPropertyName("format")]
		public string? Format { get; set; }
	}

	public partial class FormatMetricAggregationBaseDescriptor
	{
	}

	[ConvertAs(typeof(StringStatsAggregation))]
	public partial interface IStringStatsAggregation
	{
		string? ShowDistribution { get; set; }
	}

	public partial class StringStatsAggregation : IStringStatsAggregation
	{
		[JsonInclude]
		[JsonPropertyName("show_distribution")]
		public string? ShowDistribution { get; set; }
	}

	public partial class StringStatsAggregationDescriptor
	{
	}

	[ConvertAs(typeof(StatsBucketAggregation))]
	public partial interface IStatsBucketAggregation
	{
	}

	public partial class StatsBucketAggregation : IStatsBucketAggregation
	{
	}

	public partial class StatsBucketAggregationDescriptor
	{
	}

	[ConvertAs(typeof(StatsAggregation))]
	public partial interface IStatsAggregation
	{
	}

	public partial class StatsAggregation : IStatsAggregation
	{
	}

	public partial class StatsAggregationDescriptor
	{
	}

	[ConvertAs(typeof(SignificantTextAggregation))]
	public partial interface ISignificantTextAggregation
	{
		QueryDsl.IQueryContainer? BackgroundFilter { get; set; }

		Aggregations.IChiSquareHeuristic? ChiSquare { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.TermsAggregationExecutionHint? ExecutionHint { get; set; }

		string? Field { get; set; }

		string? FilterDuplicateText { get; set; }

		Aggregations.IGoogleNormalizedDistanceHeuristic? Gnd { get; set; }

		long? MinDocCount { get; set; }

		Aggregations.IMutualInformationHeuristic? MutualInformation { get; set; }

		Aggregations.IPercentageScoreHeuristic? Percentage { get; set; }

		Aggregations.IScriptedHeuristic? ScriptHeuristic { get; set; }

		long? ShardMinDocCount { get; set; }

		int? ShardSize { get; set; }

		int? Size { get; set; }

		Elastic.Clients.Elasticsearch.Fields? SourceFields { get; set; }
	}

	public partial class SignificantTextAggregation : ISignificantTextAggregation
	{
		[JsonInclude]
		[JsonPropertyName("background_filter")]
		public QueryDsl.IQueryContainer? BackgroundFilter { get; set; }

		[JsonInclude]
		[JsonPropertyName("chi_square")]
		public Aggregations.IChiSquareHeuristic? ChiSquare { get; set; }

		[JsonInclude]
		[JsonPropertyName("execution_hint")]
		public Elastic.Clients.Elasticsearch.Aggregations.TermsAggregationExecutionHint? ExecutionHint { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("filter_duplicate_text")]
		public string? FilterDuplicateText { get; set; }

		[JsonInclude]
		[JsonPropertyName("gnd")]
		public Aggregations.IGoogleNormalizedDistanceHeuristic? Gnd { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_doc_count")]
		public long? MinDocCount { get; set; }

		[JsonInclude]
		[JsonPropertyName("mutual_information")]
		public Aggregations.IMutualInformationHeuristic? MutualInformation { get; set; }

		[JsonInclude]
		[JsonPropertyName("percentage")]
		public Aggregations.IPercentageScoreHeuristic? Percentage { get; set; }

		[JsonInclude]
		[JsonPropertyName("script_heuristic")]
		public Aggregations.IScriptedHeuristic? ScriptHeuristic { get; set; }

		[JsonInclude]
		[JsonPropertyName("shard_min_doc_count")]
		public long? ShardMinDocCount { get; set; }

		[JsonInclude]
		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonInclude]
		[JsonPropertyName("source_fields")]
		public Elastic.Clients.Elasticsearch.Fields? SourceFields { get; set; }
	}

	public partial class SignificantTextAggregationDescriptor
	{
	}

	[ConvertAs(typeof(ScriptedHeuristic))]
	public partial interface IScriptedHeuristic
	{
		Elastic.Clients.Elasticsearch.Script Script { get; set; }
	}

	public partial class ScriptedHeuristic : IScriptedHeuristic
	{
		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script Script { get; set; }
	}

	public partial class ScriptedHeuristicDescriptor
	{
	}

	[ConvertAs(typeof(PercentageScoreHeuristic))]
	public partial interface IPercentageScoreHeuristic
	{
	}

	public partial class PercentageScoreHeuristic : IPercentageScoreHeuristic
	{
	}

	public partial class PercentageScoreHeuristicDescriptor
	{
	}

	[ConvertAs(typeof(MutualInformationHeuristic))]
	public partial interface IMutualInformationHeuristic
	{
		string BackgroundIsSuperset { get; set; }

		string IncludeNegatives { get; set; }
	}

	public partial class MutualInformationHeuristic : IMutualInformationHeuristic
	{
		[JsonInclude]
		[JsonPropertyName("background_is_superset")]
		public string BackgroundIsSuperset { get; set; }

		[JsonInclude]
		[JsonPropertyName("include_negatives")]
		public string IncludeNegatives { get; set; }
	}

	public partial class MutualInformationHeuristicDescriptor
	{
	}

	[ConvertAs(typeof(GoogleNormalizedDistanceHeuristic))]
	public partial interface IGoogleNormalizedDistanceHeuristic
	{
		string BackgroundIsSuperset { get; set; }
	}

	public partial class GoogleNormalizedDistanceHeuristic : IGoogleNormalizedDistanceHeuristic
	{
		[JsonInclude]
		[JsonPropertyName("background_is_superset")]
		public string BackgroundIsSuperset { get; set; }
	}

	public partial class GoogleNormalizedDistanceHeuristicDescriptor
	{
	}

	[ConvertAs(typeof(ChiSquareHeuristic))]
	public partial interface IChiSquareHeuristic
	{
		string BackgroundIsSuperset { get; set; }

		string IncludeNegatives { get; set; }
	}

	public partial class ChiSquareHeuristic : IChiSquareHeuristic
	{
		[JsonInclude]
		[JsonPropertyName("background_is_superset")]
		public string BackgroundIsSuperset { get; set; }

		[JsonInclude]
		[JsonPropertyName("include_negatives")]
		public string IncludeNegatives { get; set; }
	}

	public partial class ChiSquareHeuristicDescriptor
	{
	}

	[ConvertAs(typeof(SignificantTermsAggregation))]
	public partial interface ISignificantTermsAggregation
	{
		QueryDsl.IQueryContainer? BackgroundFilter { get; set; }

		Aggregations.IChiSquareHeuristic? ChiSquare { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.TermsAggregationExecutionHint? ExecutionHint { get; set; }

		string? Field { get; set; }

		Aggregations.IGoogleNormalizedDistanceHeuristic? Gnd { get; set; }

		long? MinDocCount { get; set; }

		Aggregations.IMutualInformationHeuristic? MutualInformation { get; set; }

		Aggregations.IPercentageScoreHeuristic? Percentage { get; set; }

		Aggregations.IScriptedHeuristic? ScriptHeuristic { get; set; }

		long? ShardMinDocCount { get; set; }

		int? ShardSize { get; set; }

		int? Size { get; set; }
	}

	public partial class SignificantTermsAggregation : ISignificantTermsAggregation
	{
		[JsonInclude]
		[JsonPropertyName("background_filter")]
		public QueryDsl.IQueryContainer? BackgroundFilter { get; set; }

		[JsonInclude]
		[JsonPropertyName("chi_square")]
		public Aggregations.IChiSquareHeuristic? ChiSquare { get; set; }

		[JsonInclude]
		[JsonPropertyName("execution_hint")]
		public Elastic.Clients.Elasticsearch.Aggregations.TermsAggregationExecutionHint? ExecutionHint { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("gnd")]
		public Aggregations.IGoogleNormalizedDistanceHeuristic? Gnd { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_doc_count")]
		public long? MinDocCount { get; set; }

		[JsonInclude]
		[JsonPropertyName("mutual_information")]
		public Aggregations.IMutualInformationHeuristic? MutualInformation { get; set; }

		[JsonInclude]
		[JsonPropertyName("percentage")]
		public Aggregations.IPercentageScoreHeuristic? Percentage { get; set; }

		[JsonInclude]
		[JsonPropertyName("script_heuristic")]
		public Aggregations.IScriptedHeuristic? ScriptHeuristic { get; set; }

		[JsonInclude]
		[JsonPropertyName("shard_min_doc_count")]
		public long? ShardMinDocCount { get; set; }

		[JsonInclude]
		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }
	}

	public partial class SignificantTermsAggregationDescriptor
	{
	}

	[ConvertAs(typeof(SerialDifferencingAggregation))]
	public partial interface ISerialDifferencingAggregation
	{
		int? Lag { get; set; }
	}

	public partial class SerialDifferencingAggregation : ISerialDifferencingAggregation
	{
		[JsonInclude]
		[JsonPropertyName("lag")]
		public int? Lag { get; set; }
	}

	public partial class SerialDifferencingAggregationDescriptor
	{
	}

	[ConvertAs(typeof(ScriptedMetricAggregation))]
	public partial interface IScriptedMetricAggregation
	{
		Elastic.Clients.Elasticsearch.Script? CombineScript { get; set; }

		Elastic.Clients.Elasticsearch.Script? InitScript { get; set; }

		Elastic.Clients.Elasticsearch.Script? MapScript { get; set; }

		Elastic.Clients.Elasticsearch.Script? ReduceScript { get; set; }
	}

	public partial class ScriptedMetricAggregation : IScriptedMetricAggregation
	{
		[JsonInclude]
		[JsonPropertyName("combine_script")]
		public Elastic.Clients.Elasticsearch.Script? CombineScript { get; set; }

		[JsonInclude]
		[JsonPropertyName("init_script")]
		public Elastic.Clients.Elasticsearch.Script? InitScript { get; set; }

		[JsonInclude]
		[JsonPropertyName("map_script")]
		public Elastic.Clients.Elasticsearch.Script? MapScript { get; set; }

		[JsonInclude]
		[JsonPropertyName("reduce_script")]
		public Elastic.Clients.Elasticsearch.Script? ReduceScript { get; set; }
	}

	public partial class ScriptedMetricAggregationDescriptor
	{
	}

	[ConvertAs(typeof(SamplerAggregation))]
	public partial interface ISamplerAggregation
	{
		int? ShardSize { get; set; }
	}

	public partial class SamplerAggregation : ISamplerAggregation
	{
		[JsonInclude]
		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }
	}

	public partial class SamplerAggregationDescriptor
	{
	}

	[ConvertAs(typeof(ReverseNestedAggregation))]
	public partial interface IReverseNestedAggregation
	{
		string? Path { get; set; }
	}

	public partial class ReverseNestedAggregation : IReverseNestedAggregation
	{
		[JsonInclude]
		[JsonPropertyName("path")]
		public string? Path { get; set; }
	}

	public partial class ReverseNestedAggregationDescriptor
	{
	}

	[ConvertAs(typeof(RateAggregation))]
	public partial interface IRateAggregation
	{
		Elastic.Clients.Elasticsearch.Aggregations.DateInterval? Unit { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.RateMode? Mode { get; set; }
	}

	public partial class RateAggregation : IRateAggregation
	{
		[JsonInclude]
		[JsonPropertyName("unit")]
		public Elastic.Clients.Elasticsearch.Aggregations.DateInterval? Unit { get; set; }

		[JsonInclude]
		[JsonPropertyName("mode")]
		public Elastic.Clients.Elasticsearch.Aggregations.RateMode? Mode { get; set; }
	}

	public partial class RateAggregationDescriptor
	{
	}

	[ConvertAs(typeof(RareTermsAggregation))]
	public partial interface IRareTermsAggregation
	{
		string? Field { get; set; }

		long? MaxDocCount { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.Missing? Missing { get; set; }

		double? Precision { get; set; }

		string? ValueType { get; set; }
	}

	public partial class RareTermsAggregation : IRareTermsAggregation
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_doc_count")]
		public long? MaxDocCount { get; set; }

		[JsonInclude]
		[JsonPropertyName("missing")]
		public Elastic.Clients.Elasticsearch.Aggregations.Missing? Missing { get; set; }

		[JsonInclude]
		[JsonPropertyName("precision")]
		public double? Precision { get; set; }

		[JsonInclude]
		[JsonPropertyName("value_type")]
		public string? ValueType { get; set; }
	}

	public partial class RareTermsAggregationDescriptor
	{
	}

	[ConvertAs(typeof(RangeAggregation))]
	public partial interface IRangeAggregation
	{
		string? Field { get; set; }

		IEnumerable<Aggregations.IAggregationRange>? Ranges { get; set; }

		Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		string? Keyed { get; set; }
	}

	public partial class RangeAggregation : IRangeAggregation
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ranges")]
		public IEnumerable<Aggregations.IAggregationRange>? Ranges { get; set; }

		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		[JsonInclude]
		[JsonPropertyName("keyed")]
		public string? Keyed { get; set; }
	}

	public partial class RangeAggregationDescriptor
	{
	}

	[ConvertAs(typeof(AggregationRange))]
	public partial interface IAggregationRange
	{
		string? Key { get; set; }
	}

	public partial class AggregationRange : IAggregationRange
	{
		[JsonInclude]
		[JsonPropertyName("key")]
		public string? Key { get; set; }
	}

	public partial class AggregationRangeDescriptor
	{
	}

	[ConvertAs(typeof(PercentilesBucketAggregation))]
	public partial interface IPercentilesBucketAggregation
	{
		IEnumerable<double>? Percents { get; set; }
	}

	public partial class PercentilesBucketAggregation : IPercentilesBucketAggregation
	{
		[JsonInclude]
		[JsonPropertyName("percents")]
		public IEnumerable<double>? Percents { get; set; }
	}

	public partial class PercentilesBucketAggregationDescriptor
	{
	}

	[ConvertAs(typeof(PercentilesAggregation))]
	public partial interface IPercentilesAggregation
	{
		string? Keyed { get; set; }

		IEnumerable<double>? Percents { get; set; }

		Aggregations.IHdrMethod? Hdr { get; set; }

		Aggregations.ITDigest? Tdigest { get; set; }
	}

	public partial class PercentilesAggregation : IPercentilesAggregation
	{
		[JsonInclude]
		[JsonPropertyName("keyed")]
		public string? Keyed { get; set; }

		[JsonInclude]
		[JsonPropertyName("percents")]
		public IEnumerable<double>? Percents { get; set; }

		[JsonInclude]
		[JsonPropertyName("hdr")]
		public Aggregations.IHdrMethod? Hdr { get; set; }

		[JsonInclude]
		[JsonPropertyName("tdigest")]
		public Aggregations.ITDigest? Tdigest { get; set; }
	}

	public partial class PercentilesAggregationDescriptor
	{
	}

	[ConvertAs(typeof(TDigest))]
	public partial interface ITDigest
	{
		int? Compression { get; set; }
	}

	public partial class TDigest : ITDigest
	{
		[JsonInclude]
		[JsonPropertyName("compression")]
		public int? Compression { get; set; }
	}

	public partial class TDigestDescriptor
	{
	}

	[ConvertAs(typeof(HdrMethod))]
	public partial interface IHdrMethod
	{
		int? NumberOfSignificantValueDigits { get; set; }
	}

	public partial class HdrMethod : IHdrMethod
	{
		[JsonInclude]
		[JsonPropertyName("number_of_significant_value_digits")]
		public int? NumberOfSignificantValueDigits { get; set; }
	}

	public partial class HdrMethodDescriptor
	{
	}

	[ConvertAs(typeof(PercentileRanksAggregation))]
	public partial interface IPercentileRanksAggregation
	{
		string? Keyed { get; set; }

		IEnumerable<double>? Values { get; set; }

		Aggregations.IHdrMethod? Hdr { get; set; }

		Aggregations.ITDigest? Tdigest { get; set; }
	}

	public partial class PercentileRanksAggregation : IPercentileRanksAggregation
	{
		[JsonInclude]
		[JsonPropertyName("keyed")]
		public string? Keyed { get; set; }

		[JsonInclude]
		[JsonPropertyName("values")]
		public IEnumerable<double>? Values { get; set; }

		[JsonInclude]
		[JsonPropertyName("hdr")]
		public Aggregations.IHdrMethod? Hdr { get; set; }

		[JsonInclude]
		[JsonPropertyName("tdigest")]
		public Aggregations.ITDigest? Tdigest { get; set; }
	}

	public partial class PercentileRanksAggregationDescriptor
	{
	}

	[ConvertAs(typeof(ParentAggregation))]
	public partial interface IParentAggregation
	{
		string? Type { get; set; }
	}

	public partial class ParentAggregation : IParentAggregation
	{
		[JsonInclude]
		[JsonPropertyName("type")]
		public string? Type { get; set; }
	}

	public partial class ParentAggregationDescriptor
	{
	}

	[ConvertAs(typeof(NormalizeAggregation))]
	public partial interface INormalizeAggregation
	{
		Elastic.Clients.Elasticsearch.Aggregations.NormalizeMethod? Method { get; set; }
	}

	public partial class NormalizeAggregation : INormalizeAggregation
	{
		[JsonInclude]
		[JsonPropertyName("method")]
		public Elastic.Clients.Elasticsearch.Aggregations.NormalizeMethod? Method { get; set; }
	}

	public partial class NormalizeAggregationDescriptor
	{
	}

	[ConvertAs(typeof(NestedAggregation))]
	public partial interface INestedAggregation
	{
		string? Path { get; set; }
	}

	public partial class NestedAggregation : INestedAggregation
	{
		[JsonInclude]
		[JsonPropertyName("path")]
		public string? Path { get; set; }
	}

	public partial class NestedAggregationDescriptor
	{
	}

	[ConvertAs(typeof(MultiTermsAggregation))]
	public partial interface IMultiTermsAggregation
	{
		IEnumerable<Aggregations.IMultiTermLookup> Terms { get; set; }
	}

	public partial class MultiTermsAggregation : IMultiTermsAggregation
	{
		[JsonInclude]
		[JsonPropertyName("terms")]
		public IEnumerable<Aggregations.IMultiTermLookup> Terms { get; set; }
	}

	public partial class MultiTermsAggregationDescriptor
	{
	}

	[ConvertAs(typeof(MultiTermLookup))]
	public partial interface IMultiTermLookup
	{
		string Field { get; set; }
	}

	public partial class MultiTermLookup : IMultiTermLookup
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string Field { get; set; }
	}

	public partial class MultiTermLookupDescriptor
	{
	}

	[ConvertAs(typeof(MovingFunctionAggregation))]
	public partial interface IMovingFunctionAggregation
	{
		string? Script { get; set; }

		int? Shift { get; set; }

		int? Window { get; set; }
	}

	public partial class MovingFunctionAggregation : IMovingFunctionAggregation
	{
		[JsonInclude]
		[JsonPropertyName("script")]
		public string? Script { get; set; }

		[JsonInclude]
		[JsonPropertyName("shift")]
		public int? Shift { get; set; }

		[JsonInclude]
		[JsonPropertyName("window")]
		public int? Window { get; set; }
	}

	public partial class MovingFunctionAggregationDescriptor
	{
	}

	[ConvertAs(typeof(MovingPercentilesAggregation))]
	public partial interface IMovingPercentilesAggregation
	{
		int? Window { get; set; }

		int? Shift { get; set; }

		string? Keyed { get; set; }
	}

	public partial class MovingPercentilesAggregation : IMovingPercentilesAggregation
	{
		[JsonInclude]
		[JsonPropertyName("window")]
		public int? Window { get; set; }

		[JsonInclude]
		[JsonPropertyName("shift")]
		public int? Shift { get; set; }

		[JsonInclude]
		[JsonPropertyName("keyed")]
		public string? Keyed { get; set; }
	}

	public partial class MovingPercentilesAggregationDescriptor
	{
	}

	[ConvertAs(typeof(MovingAverageAggregation))]
	public partial interface IMovingAverageAggregation
	{
		string? Minimize { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.MovingAverageModel? Model { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.MovingAverageSettings Settings { get; set; }

		int? Predict { get; set; }

		int? Window { get; set; }
	}

	public partial class MovingAverageAggregation : IMovingAverageAggregation
	{
		[JsonInclude]
		[JsonPropertyName("minimize")]
		public string? Minimize { get; set; }

		[JsonInclude]
		[JsonPropertyName("model")]
		public Elastic.Clients.Elasticsearch.Aggregations.MovingAverageModel? Model { get; set; }

		[JsonInclude]
		[JsonPropertyName("settings")]
		public Elastic.Clients.Elasticsearch.Aggregations.MovingAverageSettings Settings { get; set; }

		[JsonInclude]
		[JsonPropertyName("predict")]
		public int? Predict { get; set; }

		[JsonInclude]
		[JsonPropertyName("window")]
		public int? Window { get; set; }
	}

	public partial class MovingAverageAggregationDescriptor
	{
	}

	public partial class HoltWintersModelSettings
	{
		[JsonInclude]
		[JsonPropertyName("alpha")]
		public float? Alpha
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("beta")]
		public float? Beta
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("gamma")]
		public float? Gamma
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("pad")]
		public string? Pad
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("period")]
		public int? Period
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("type")]
		public Elastic.Clients.Elasticsearch.Aggregations.HoltWintersType? Type
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class HoltLinearModelSettings
	{
		[JsonInclude]
		[JsonPropertyName("alpha")]
		public float? Alpha
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("beta")]
		public float? Beta
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class EwmaModelSettings
	{
		[JsonInclude]
		[JsonPropertyName("alpha")]
		public float? Alpha
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(MissingAggregation))]
	public partial interface IMissingAggregation
	{
		string? Field { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.Missing? Missing { get; set; }
	}

	public partial class MissingAggregation : IMissingAggregation
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("missing")]
		public Elastic.Clients.Elasticsearch.Aggregations.Missing? Missing { get; set; }
	}

	public partial class MissingAggregationDescriptor
	{
	}

	[ConvertAs(typeof(MinBucketAggregation))]
	public partial interface IMinBucketAggregation
	{
	}

	public partial class MinBucketAggregation : IMinBucketAggregation
	{
	}

	public partial class MinBucketAggregationDescriptor
	{
	}

	[ConvertAs(typeof(MinAggregation))]
	public partial interface IMinAggregation
	{
	}

	public partial class MinAggregation : IMinAggregation
	{
	}

	public partial class MinAggregationDescriptor
	{
	}

	[ConvertAs(typeof(MedianAbsoluteDeviationAggregation))]
	public partial interface IMedianAbsoluteDeviationAggregation
	{
		double? Compression { get; set; }
	}

	public partial class MedianAbsoluteDeviationAggregation : IMedianAbsoluteDeviationAggregation
	{
		[JsonInclude]
		[JsonPropertyName("compression")]
		public double? Compression { get; set; }
	}

	public partial class MedianAbsoluteDeviationAggregationDescriptor
	{
	}

	[ConvertAs(typeof(MaxBucketAggregation))]
	public partial interface IMaxBucketAggregation
	{
	}

	public partial class MaxBucketAggregation : IMaxBucketAggregation
	{
	}

	public partial class MaxBucketAggregationDescriptor
	{
	}

	[ConvertAs(typeof(MaxAggregation))]
	public partial interface IMaxAggregation
	{
	}

	public partial class MaxAggregation : IMaxAggregation
	{
	}

	public partial class MaxAggregationDescriptor
	{
	}

	[ConvertAs(typeof(MatrixStatsAggregation))]
	public partial interface IMatrixStatsAggregation
	{
		Elastic.Clients.Elasticsearch.Aggregations.MatrixStatsMode? Mode { get; set; }
	}

	public partial class MatrixStatsAggregation : IMatrixStatsAggregation
	{
		[JsonInclude]
		[JsonPropertyName("mode")]
		public Elastic.Clients.Elasticsearch.Aggregations.MatrixStatsMode? Mode { get; set; }
	}

	public partial class MatrixStatsAggregationDescriptor
	{
	}

	[ConvertAs(typeof(MatrixAggregation))]
	public partial interface IMatrixAggregation
	{
		Elastic.Clients.Elasticsearch.Fields? Fields { get; set; }

		Dictionary<string, double>? Missing { get; set; }
	}

	public partial class MatrixAggregation : IMatrixAggregation
	{
		[JsonInclude]
		[JsonPropertyName("fields")]
		public Elastic.Clients.Elasticsearch.Fields? Fields { get; set; }

		[JsonInclude]
		[JsonPropertyName("missing")]
		public Dictionary<string, double>? Missing { get; set; }
	}

	public partial class MatrixAggregationDescriptor
	{
	}

	[ConvertAs(typeof(GeoLineAggregation))]
	public partial interface IGeoLineAggregation
	{
		Aggregations.IGeoLinePoint Point { get; set; }

		Aggregations.IGeoLineSort Sort { get; set; }

		string? IncludeSort { get; set; }

		Elastic.Clients.Elasticsearch.SortOrder? SortOrder { get; set; }

		int? Size { get; set; }
	}

	public partial class GeoLineAggregation : IGeoLineAggregation
	{
		[JsonInclude]
		[JsonPropertyName("point")]
		public Aggregations.IGeoLinePoint Point { get; set; }

		[JsonInclude]
		[JsonPropertyName("sort")]
		public Aggregations.IGeoLineSort Sort { get; set; }

		[JsonInclude]
		[JsonPropertyName("include_sort")]
		public string? IncludeSort { get; set; }

		[JsonInclude]
		[JsonPropertyName("sort_order")]
		public Elastic.Clients.Elasticsearch.SortOrder? SortOrder { get; set; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }
	}

	public partial class GeoLineAggregationDescriptor
	{
	}

	[ConvertAs(typeof(GeoLineSort))]
	public partial interface IGeoLineSort
	{
		string Field { get; set; }
	}

	public partial class GeoLineSort : IGeoLineSort
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string Field { get; set; }
	}

	public partial class GeoLineSortDescriptor
	{
	}

	[ConvertAs(typeof(GeoLinePoint))]
	public partial interface IGeoLinePoint
	{
		string Field { get; set; }
	}

	public partial class GeoLinePoint : IGeoLinePoint
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string Field { get; set; }
	}

	public partial class GeoLinePointDescriptor
	{
	}

	[ConvertAs(typeof(InferenceAggregation))]
	public partial interface IInferenceAggregation
	{
		string ModelId { get; set; }

		Aggregations.IInferenceConfigContainer? InferenceConfig { get; set; }
	}

	public partial class InferenceAggregation : IInferenceAggregation
	{
		[JsonInclude]
		[JsonPropertyName("model_id")]
		public string ModelId { get; set; }

		[JsonInclude]
		[JsonPropertyName("inference_config")]
		public Aggregations.IInferenceConfigContainer? InferenceConfig { get; set; }
	}

	public partial class InferenceAggregationDescriptor
	{
	}

	[ConvertAs(typeof(InferenceConfigContainer))]
	public partial interface IInferenceConfigContainer
	{
		Aggregations.IRegressionInferenceOptions? Regression { get; set; }

		Aggregations.IClassificationInferenceOptions? Classification { get; set; }
	}

	public partial class InferenceConfigContainer : IInferenceConfigContainer
	{
		[JsonInclude]
		[JsonPropertyName("regression")]
		public Aggregations.IRegressionInferenceOptions? Regression { get; set; }

		[JsonInclude]
		[JsonPropertyName("classification")]
		public Aggregations.IClassificationInferenceOptions? Classification { get; set; }
	}

	public partial class InferenceConfigContainerDescriptor
	{
	}

	[ConvertAs(typeof(ClassificationInferenceOptions))]
	public partial interface IClassificationInferenceOptions
	{
		int? NumTopClasses { get; set; }

		int? NumTopFeatureImportanceValues { get; set; }

		string? PredictionFieldType { get; set; }

		string? ResultsField { get; set; }

		string? TopClassesResultsField { get; set; }
	}

	public partial class ClassificationInferenceOptions : IClassificationInferenceOptions
	{
		[JsonInclude]
		[JsonPropertyName("num_top_classes")]
		public int? NumTopClasses { get; set; }

		[JsonInclude]
		[JsonPropertyName("num_top_feature_importance_values")]
		public int? NumTopFeatureImportanceValues { get; set; }

		[JsonInclude]
		[JsonPropertyName("prediction_field_type")]
		public string? PredictionFieldType { get; set; }

		[JsonInclude]
		[JsonPropertyName("results_field")]
		public string? ResultsField { get; set; }

		[JsonInclude]
		[JsonPropertyName("top_classes_results_field")]
		public string? TopClassesResultsField { get; set; }
	}

	public partial class ClassificationInferenceOptionsDescriptor
	{
	}

	[ConvertAs(typeof(RegressionInferenceOptions))]
	public partial interface IRegressionInferenceOptions
	{
		string? ResultsField { get; set; }

		int? NumTopFeatureImportanceValues { get; set; }
	}

	public partial class RegressionInferenceOptions : IRegressionInferenceOptions
	{
		[JsonInclude]
		[JsonPropertyName("results_field")]
		public string? ResultsField { get; set; }

		[JsonInclude]
		[JsonPropertyName("num_top_feature_importance_values")]
		public int? NumTopFeatureImportanceValues { get; set; }
	}

	public partial class RegressionInferenceOptionsDescriptor
	{
	}

	[ConvertAs(typeof(IpRangeAggregation))]
	public partial interface IIpRangeAggregation
	{
		string? Field { get; set; }

		IEnumerable<Aggregations.IIpRangeAggregationRange>? Ranges { get; set; }
	}

	public partial class IpRangeAggregation : IIpRangeAggregation
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ranges")]
		public IEnumerable<Aggregations.IIpRangeAggregationRange>? Ranges { get; set; }
	}

	public partial class IpRangeAggregationDescriptor
	{
	}

	[ConvertAs(typeof(IpRangeAggregationRange))]
	public partial interface IIpRangeAggregationRange
	{
		string? From { get; set; }

		string? Mask { get; set; }

		string? To { get; set; }
	}

	public partial class IpRangeAggregationRange : IIpRangeAggregationRange
	{
		[JsonInclude]
		[JsonPropertyName("from")]
		public string? From { get; set; }

		[JsonInclude]
		[JsonPropertyName("mask")]
		public string? Mask { get; set; }

		[JsonInclude]
		[JsonPropertyName("to")]
		public string? To { get; set; }
	}

	public partial class IpRangeAggregationRangeDescriptor
	{
	}

	[ConvertAs(typeof(HistogramAggregation))]
	public partial interface IHistogramAggregation
	{
		string? Field { get; set; }

		double? Interval { get; set; }

		int? MinDocCount { get; set; }

		double? Missing { get; set; }

		double? Offset { get; set; }

		Aggregations.IHistogramOrder? Order { get; set; }

		Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		string? Format { get; set; }

		string? Keyed { get; set; }
	}

	public partial class HistogramAggregation : IHistogramAggregation
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("interval")]
		public double? Interval { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_doc_count")]
		public int? MinDocCount { get; set; }

		[JsonInclude]
		[JsonPropertyName("missing")]
		public double? Missing { get; set; }

		[JsonInclude]
		[JsonPropertyName("offset")]
		public double? Offset { get; set; }

		[JsonInclude]
		[JsonPropertyName("order")]
		public Aggregations.IHistogramOrder? Order { get; set; }

		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		[JsonInclude]
		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonInclude]
		[JsonPropertyName("keyed")]
		public string? Keyed { get; set; }
	}

	public partial class HistogramAggregationDescriptor
	{
	}

	[ConvertAs(typeof(HistogramOrder))]
	public partial interface IHistogramOrder
	{
		Elastic.Clients.Elasticsearch.SortOrder? Count { get; set; }

		Elastic.Clients.Elasticsearch.SortOrder? Key { get; set; }
	}

	public partial class HistogramOrder : IHistogramOrder
	{
		[JsonInclude]
		[JsonPropertyName("_count")]
		public Elastic.Clients.Elasticsearch.SortOrder? Count { get; set; }

		[JsonInclude]
		[JsonPropertyName("_key")]
		public Elastic.Clients.Elasticsearch.SortOrder? Key { get; set; }
	}

	public partial class HistogramOrderDescriptor
	{
	}

	[ConvertAs(typeof(ExtendedBounds<>))]
	public partial interface IExtendedBounds
	{
	}

	public partial class ExtendedBounds<T> : IExtendedBounds
	{
	}

	public partial class ExtendedBoundsDescriptor
	{
	}

	[ConvertAs(typeof(GlobalAggregation))]
	public partial interface IGlobalAggregation
	{
	}

	public partial class GlobalAggregation : IGlobalAggregation
	{
	}

	public partial class GlobalAggregationDescriptor
	{
	}

	[ConvertAs(typeof(GeoTileGridAggregation))]
	public partial interface IGeoTileGridAggregation
	{
		string? Field { get; set; }

		int? ShardSize { get; set; }

		int? Size { get; set; }

		Aggregations.IGeoBounds? Bounds { get; set; }
	}

	public partial class GeoTileGridAggregation : IGeoTileGridAggregation
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonInclude]
		[JsonPropertyName("bounds")]
		public Aggregations.IGeoBounds? Bounds { get; set; }
	}

	public partial class GeoTileGridAggregationDescriptor
	{
	}

	[ConvertAs(typeof(GeoHashGridAggregation))]
	public partial interface IGeoHashGridAggregation
	{
		QueryDsl.IBoundingBox? Bounds { get; set; }

		string? Field { get; set; }

		int? ShardSize { get; set; }

		int? Size { get; set; }
	}

	public partial class GeoHashGridAggregation : IGeoHashGridAggregation
	{
		[JsonInclude]
		[JsonPropertyName("bounds")]
		public QueryDsl.IBoundingBox? Bounds { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }
	}

	public partial class GeoHashGridAggregationDescriptor
	{
	}

	[ConvertAs(typeof(GeoDistanceAggregation))]
	public partial interface IGeoDistanceAggregation
	{
		Elastic.Clients.Elasticsearch.GeoDistanceType? DistanceType { get; set; }

		string? Field { get; set; }

		IEnumerable<Aggregations.IAggregationRange>? Ranges { get; set; }

		Elastic.Clients.Elasticsearch.DistanceUnit? Unit { get; set; }
	}

	public partial class GeoDistanceAggregation : IGeoDistanceAggregation
	{
		[JsonInclude]
		[JsonPropertyName("distance_type")]
		public Elastic.Clients.Elasticsearch.GeoDistanceType? DistanceType { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ranges")]
		public IEnumerable<Aggregations.IAggregationRange>? Ranges { get; set; }

		[JsonInclude]
		[JsonPropertyName("unit")]
		public Elastic.Clients.Elasticsearch.DistanceUnit? Unit { get; set; }
	}

	public partial class GeoDistanceAggregationDescriptor
	{
	}

	[ConvertAs(typeof(GeoCentroidAggregation))]
	public partial interface IGeoCentroidAggregation
	{
		long? Count { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.GeoLocation? Location { get; set; }
	}

	public partial class GeoCentroidAggregation : IGeoCentroidAggregation
	{
		[JsonInclude]
		[JsonPropertyName("count")]
		public long? Count { get; set; }

		[JsonInclude]
		[JsonPropertyName("location")]
		public Elastic.Clients.Elasticsearch.QueryDsl.GeoLocation? Location { get; set; }
	}

	public partial class GeoCentroidAggregationDescriptor
	{
	}

	[ConvertAs(typeof(GeoBoundsAggregation))]
	public partial interface IGeoBoundsAggregation
	{
		string? WrapLongitude { get; set; }
	}

	public partial class GeoBoundsAggregation : IGeoBoundsAggregation
	{
		[JsonInclude]
		[JsonPropertyName("wrap_longitude")]
		public string? WrapLongitude { get; set; }
	}

	public partial class GeoBoundsAggregationDescriptor
	{
	}

	[ConvertAs(typeof(FiltersAggregation))]
	public partial interface IFiltersAggregation
	{
		string? OtherBucket { get; set; }

		string? OtherBucketKey { get; set; }

		string? Keyed { get; set; }
	}

	public partial class FiltersAggregation : IFiltersAggregation
	{
		[JsonInclude]
		[JsonPropertyName("other_bucket")]
		public string? OtherBucket { get; set; }

		[JsonInclude]
		[JsonPropertyName("other_bucket_key")]
		public string? OtherBucketKey { get; set; }

		[JsonInclude]
		[JsonPropertyName("keyed")]
		public string? Keyed { get; set; }
	}

	public partial class FiltersAggregationDescriptor
	{
	}

	[ConvertAs(typeof(ExtendedStatsBucketAggregation))]
	public partial interface IExtendedStatsBucketAggregation
	{
		double? Sigma { get; set; }
	}

	public partial class ExtendedStatsBucketAggregation : IExtendedStatsBucketAggregation
	{
		[JsonInclude]
		[JsonPropertyName("sigma")]
		public double? Sigma { get; set; }
	}

	public partial class ExtendedStatsBucketAggregationDescriptor
	{
	}

	[ConvertAs(typeof(ExtendedStatsAggregation))]
	public partial interface IExtendedStatsAggregation
	{
		double? Sigma { get; set; }
	}

	public partial class ExtendedStatsAggregation : IExtendedStatsAggregation
	{
		[JsonInclude]
		[JsonPropertyName("sigma")]
		public double? Sigma { get; set; }
	}

	public partial class ExtendedStatsAggregationDescriptor
	{
	}

	[ConvertAs(typeof(DiversifiedSamplerAggregation))]
	public partial interface IDiversifiedSamplerAggregation
	{
		Elastic.Clients.Elasticsearch.Aggregations.SamplerAggregationExecutionHint? ExecutionHint { get; set; }

		int? MaxDocsPerValue { get; set; }

		Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		int? ShardSize { get; set; }

		string? Field { get; set; }
	}

	public partial class DiversifiedSamplerAggregation : IDiversifiedSamplerAggregation
	{
		[JsonInclude]
		[JsonPropertyName("execution_hint")]
		public Elastic.Clients.Elasticsearch.Aggregations.SamplerAggregationExecutionHint? ExecutionHint { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_docs_per_value")]
		public int? MaxDocsPerValue { get; set; }

		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		[JsonInclude]
		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }
	}

	public partial class DiversifiedSamplerAggregationDescriptor
	{
	}

	[ConvertAs(typeof(DerivativeAggregation))]
	public partial interface IDerivativeAggregation
	{
	}

	public partial class DerivativeAggregation : IDerivativeAggregation
	{
	}

	public partial class DerivativeAggregationDescriptor
	{
	}

	[ConvertAs(typeof(DateRangeAggregation))]
	public partial interface IDateRangeAggregation
	{
		string? Field { get; set; }

		string? Format { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.Missing? Missing { get; set; }

		IEnumerable<Aggregations.IDateRangeExpression>? Ranges { get; set; }

		string? TimeZone { get; set; }

		string? Keyed { get; set; }
	}

	public partial class DateRangeAggregation : IDateRangeAggregation
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonInclude]
		[JsonPropertyName("missing")]
		public Elastic.Clients.Elasticsearch.Aggregations.Missing? Missing { get; set; }

		[JsonInclude]
		[JsonPropertyName("ranges")]
		public IEnumerable<Aggregations.IDateRangeExpression>? Ranges { get; set; }

		[JsonInclude]
		[JsonPropertyName("time_zone")]
		public string? TimeZone { get; set; }

		[JsonInclude]
		[JsonPropertyName("keyed")]
		public string? Keyed { get; set; }
	}

	public partial class DateRangeAggregationDescriptor
	{
	}

	[ConvertAs(typeof(DateRangeExpression))]
	public partial interface IDateRangeExpression
	{
		string? FromAsString { get; set; }

		string? ToAsString { get; set; }

		string? Key { get; set; }

		long? DocCount { get; set; }
	}

	public partial class DateRangeExpression : IDateRangeExpression
	{
		[JsonInclude]
		[JsonPropertyName("from_as_string")]
		public string? FromAsString { get; set; }

		[JsonInclude]
		[JsonPropertyName("to_as_string")]
		public string? ToAsString { get; set; }

		[JsonInclude]
		[JsonPropertyName("key")]
		public string? Key { get; set; }

		[JsonInclude]
		[JsonPropertyName("doc_count")]
		public long? DocCount { get; set; }
	}

	public partial class DateRangeExpressionDescriptor
	{
	}

	[ConvertAs(typeof(DateHistogramAggregation))]
	public partial interface IDateHistogramAggregation
	{
		string? Field { get; set; }

		string? Format { get; set; }

		int? MinDocCount { get; set; }

		string? Missing { get; set; }

		Elastic.Clients.Elasticsearch.Time? Offset { get; set; }

		Aggregations.IHistogramOrder? Order { get; set; }

		Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		string? TimeZone { get; set; }

		string? Keyed { get; set; }
	}

	public partial class DateHistogramAggregation : IDateHistogramAggregation
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_doc_count")]
		public int? MinDocCount { get; set; }

		[JsonInclude]
		[JsonPropertyName("missing")]
		public string? Missing { get; set; }

		[JsonInclude]
		[JsonPropertyName("offset")]
		public Elastic.Clients.Elasticsearch.Time? Offset { get; set; }

		[JsonInclude]
		[JsonPropertyName("order")]
		public Aggregations.IHistogramOrder? Order { get; set; }

		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		[JsonInclude]
		[JsonPropertyName("time_zone")]
		public string? TimeZone { get; set; }

		[JsonInclude]
		[JsonPropertyName("keyed")]
		public string? Keyed { get; set; }
	}

	public partial class DateHistogramAggregationDescriptor
	{
	}

	[ConvertAs(typeof(CumulativeSumAggregation))]
	public partial interface ICumulativeSumAggregation
	{
	}

	public partial class CumulativeSumAggregation : ICumulativeSumAggregation
	{
	}

	public partial class CumulativeSumAggregationDescriptor
	{
	}

	[ConvertAs(typeof(CumulativeCardinalityAggregation))]
	public partial interface ICumulativeCardinalityAggregation
	{
	}

	public partial class CumulativeCardinalityAggregation : ICumulativeCardinalityAggregation
	{
	}

	public partial class CumulativeCardinalityAggregationDescriptor
	{
	}

	[ConvertAs(typeof(CompositeAggregation))]
	public partial interface ICompositeAggregation
	{
		int? Size { get; set; }

		IEnumerable<Dictionary<string, Aggregations.ICompositeAggregationSource>>? Sources { get; set; }
	}

	public partial class CompositeAggregation : ICompositeAggregation
	{
		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonInclude]
		[JsonPropertyName("sources")]
		public IEnumerable<Dictionary<string, Aggregations.ICompositeAggregationSource>>? Sources { get; set; }
	}

	public partial class CompositeAggregationDescriptor
	{
	}

	[ConvertAs(typeof(CompositeAggregationSource))]
	public partial interface ICompositeAggregationSource
	{
		Aggregations.ITermsAggregation? Terms { get; set; }

		Aggregations.IHistogramAggregation? Histogram { get; set; }

		Aggregations.IDateHistogramAggregation? DateHistogram { get; set; }

		Aggregations.IGeoTileGridAggregation? GeotileGrid { get; set; }
	}

	public partial class CompositeAggregationSource : ICompositeAggregationSource
	{
		[JsonInclude]
		[JsonPropertyName("terms")]
		public Aggregations.ITermsAggregation? Terms { get; set; }

		[JsonInclude]
		[JsonPropertyName("histogram")]
		public Aggregations.IHistogramAggregation? Histogram { get; set; }

		[JsonInclude]
		[JsonPropertyName("date_histogram")]
		public Aggregations.IDateHistogramAggregation? DateHistogram { get; set; }

		[JsonInclude]
		[JsonPropertyName("geotile_grid")]
		public Aggregations.IGeoTileGridAggregation? GeotileGrid { get; set; }
	}

	public partial class CompositeAggregationSourceDescriptor
	{
	}

	[ConvertAs(typeof(ChildrenAggregation))]
	public partial interface IChildrenAggregation
	{
		string? Type { get; set; }
	}

	public partial class ChildrenAggregation : IChildrenAggregation
	{
		[JsonInclude]
		[JsonPropertyName("type")]
		public string? Type { get; set; }
	}

	public partial class ChildrenAggregationDescriptor
	{
	}

	[ConvertAs(typeof(CardinalityAggregation))]
	public partial interface ICardinalityAggregation
	{
		int? PrecisionThreshold { get; set; }

		string? Rehash { get; set; }
	}

	public partial class CardinalityAggregation : ICardinalityAggregation
	{
		[JsonInclude]
		[JsonPropertyName("precision_threshold")]
		public int? PrecisionThreshold { get; set; }

		[JsonInclude]
		[JsonPropertyName("rehash")]
		public string? Rehash { get; set; }
	}

	public partial class CardinalityAggregationDescriptor
	{
	}

	[ConvertAs(typeof(BucketSortAggregation))]
	public partial interface IBucketSortAggregation
	{
		int? From { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.GapPolicy? GapPolicy { get; set; }

		int? Size { get; set; }

		Elastic.Clients.Elasticsearch.Sort? Sort { get; set; }
	}

	public partial class BucketSortAggregation : IBucketSortAggregation
	{
		[JsonInclude]
		[JsonPropertyName("from")]
		public int? From { get; set; }

		[JsonInclude]
		[JsonPropertyName("gap_policy")]
		public Elastic.Clients.Elasticsearch.Aggregations.GapPolicy? GapPolicy { get; set; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonInclude]
		[JsonPropertyName("sort")]
		public Elastic.Clients.Elasticsearch.Sort? Sort { get; set; }
	}

	public partial class BucketSortAggregationDescriptor
	{
	}

	[ConvertAs(typeof(BucketSelectorAggregation))]
	public partial interface IBucketSelectorAggregation
	{
		Elastic.Clients.Elasticsearch.Script? Script { get; set; }
	}

	public partial class BucketSelectorAggregation : IBucketSelectorAggregation
	{
		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }
	}

	public partial class BucketSelectorAggregationDescriptor
	{
	}

	[ConvertAs(typeof(BucketScriptAggregation))]
	public partial interface IBucketScriptAggregation
	{
		Elastic.Clients.Elasticsearch.Script? Script { get; set; }
	}

	public partial class BucketScriptAggregation : IBucketScriptAggregation
	{
		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }
	}

	public partial class BucketScriptAggregationDescriptor
	{
	}

	[ConvertAs(typeof(BoxplotAggregation))]
	public partial interface IBoxplotAggregation
	{
		double? Compression { get; set; }
	}

	public partial class BoxplotAggregation : IBoxplotAggregation
	{
		[JsonInclude]
		[JsonPropertyName("compression")]
		public double? Compression { get; set; }
	}

	public partial class BoxplotAggregationDescriptor
	{
	}

	[ConvertAs(typeof(AverageBucketAggregation))]
	public partial interface IAverageBucketAggregation
	{
	}

	public partial class AverageBucketAggregation : IAverageBucketAggregation
	{
	}

	public partial class AverageBucketAggregationDescriptor
	{
	}

	[ConvertAs(typeof(AverageAggregation))]
	public partial interface IAverageAggregation
	{
	}

	public partial class AverageAggregation : IAverageAggregation
	{
	}

	public partial class AverageAggregationDescriptor
	{
	}

	[ConvertAs(typeof(AutoDateHistogramAggregation))]
	public partial interface IAutoDateHistogramAggregation
	{
		int? Buckets { get; set; }

		string? Field { get; set; }

		string? Format { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.MinimumInterval? MinimumInterval { get; set; }

		string? Missing { get; set; }

		string? Offset { get; set; }

		Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		string? TimeZone { get; set; }
	}

	public partial class AutoDateHistogramAggregation : IAutoDateHistogramAggregation
	{
		[JsonInclude]
		[JsonPropertyName("buckets")]
		public int? Buckets { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public string? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonInclude]
		[JsonPropertyName("minimum_interval")]
		public Elastic.Clients.Elasticsearch.Aggregations.MinimumInterval? MinimumInterval { get; set; }

		[JsonInclude]
		[JsonPropertyName("missing")]
		public string? Missing { get; set; }

		[JsonInclude]
		[JsonPropertyName("offset")]
		public string? Offset { get; set; }

		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script? Script { get; set; }

		[JsonInclude]
		[JsonPropertyName("time_zone")]
		public string? TimeZone { get; set; }
	}

	public partial class AutoDateHistogramAggregationDescriptor
	{
	}

	[ConvertAs(typeof(AdjacencyMatrixAggregation))]
	public partial interface IAdjacencyMatrixAggregation
	{
		Dictionary<string, QueryDsl.IQueryContainer>? Filters { get; set; }
	}

	public partial class AdjacencyMatrixAggregation : IAdjacencyMatrixAggregation
	{
		[JsonInclude]
		[JsonPropertyName("filters")]
		public Dictionary<string, QueryDsl.IQueryContainer>? Filters { get; set; }
	}

	public partial class AdjacencyMatrixAggregationDescriptor
	{
	}
}
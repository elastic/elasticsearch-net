// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using System;
using System.Linq;
using Elastic.Clients.Elasticsearch.Serialization;

namespace Elastic.Clients.Elasticsearch.Aggregations;

internal sealed partial class WeightedAverageAggregationConverter : System.Text.Json.Serialization.JsonConverter<Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation>
{
	private static readonly System.Text.Json.JsonEncodedText PropFormat = System.Text.Json.JsonEncodedText.Encode("format");
	private static readonly System.Text.Json.JsonEncodedText PropValue = System.Text.Json.JsonEncodedText.Encode("value");
	private static readonly System.Text.Json.JsonEncodedText PropValueType = System.Text.Json.JsonEncodedText.Encode("value_type");
	private static readonly System.Text.Json.JsonEncodedText PropWeight = System.Text.Json.JsonEncodedText.Encode("weight");

	public override Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
	{
		reader.ValidateToken(System.Text.Json.JsonTokenType.StartObject);
		LocalJsonValue<string?> propFormat = default;
		LocalJsonValue<Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValue?> propValue = default;
		LocalJsonValue<Elastic.Clients.Elasticsearch.Aggregations.ValueType?> propValueType = default;
		LocalJsonValue<Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValue?> propWeight = default;
		while (reader.Read() && reader.TokenType is System.Text.Json.JsonTokenType.PropertyName)
		{
			if (propFormat.TryReadProperty(ref reader, options, PropFormat, null))
			{
				continue;
			}

			if (propValue.TryReadProperty(ref reader, options, PropValue, null))
			{
				continue;
			}

			if (propValueType.TryReadProperty(ref reader, options, PropValueType, null))
			{
				continue;
			}

			if (propWeight.TryReadProperty(ref reader, options, PropWeight, null))
			{
				continue;
			}

			if (options.UnmappedMemberHandling is System.Text.Json.Serialization.JsonUnmappedMemberHandling.Skip)
			{
				reader.Skip();
				continue;
			}

			throw new System.Text.Json.JsonException($"Unknown JSON property '{reader.GetString()}' for type '{typeToConvert.Name}'.");
		}

		reader.ValidateToken(System.Text.Json.JsonTokenType.EndObject);
		return new Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance)
		{
			Format = propFormat.Value,
			Value = propValue.Value,
			ValueType = propValueType.Value,
			Weight = propWeight.Value
		};
	}

	public override void Write(System.Text.Json.Utf8JsonWriter writer, Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation value, System.Text.Json.JsonSerializerOptions options)
	{
		writer.WriteStartObject();
		writer.WriteProperty(options, PropFormat, value.Format, null, null);
		writer.WriteProperty(options, PropValue, value.Value, null, null);
		writer.WriteProperty(options, PropValueType, value.ValueType, null, null);
		writer.WriteProperty(options, PropWeight, value.Weight, null, null);
		writer.WriteEndObject();
	}
}

[System.Text.Json.Serialization.JsonConverter(typeof(Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationConverter))]
public sealed partial class WeightedAverageAggregation
{
#if NET7_0_OR_GREATER
	public WeightedAverageAggregation()
	{
	}
#endif
#if !NET7_0_OR_GREATER
	public WeightedAverageAggregation()
	{
	}
#endif
	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	internal WeightedAverageAggregation(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel sentinel)
	{
		_ = sentinel;
	}

	/// <summary>
	/// <para>
	/// A numeric response formatter.
	/// </para>
	/// </summary>
	public string? Format { get; set; }

	/// <summary>
	/// <para>
	/// Configuration for the field that provides the values.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValue? Value { get; set; }
	public Elastic.Clients.Elasticsearch.Aggregations.ValueType? ValueType { get; set; }

	/// <summary>
	/// <para>
	/// Configuration for the field or script that provides the weights.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValue? Weight { get; set; }
}

public readonly partial struct WeightedAverageAggregationDescriptor<TDocument>
{
	internal Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation Instance { get; init; }

	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public WeightedAverageAggregationDescriptor(Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation instance)
	{
		Instance = instance;
	}

	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public WeightedAverageAggregationDescriptor()
	{
		Instance = new Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance);
	}

	public static explicit operator Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor<TDocument>(Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation instance) => new Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor<TDocument>(instance);
	public static implicit operator Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation(Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor<TDocument> descriptor) => descriptor.Instance;

	/// <summary>
	/// <para>
	/// A numeric response formatter.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor<TDocument> Format(string? value)
	{
		Instance.Format = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Configuration for the field that provides the values.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor<TDocument> Value(Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValue? value)
	{
		Instance.Value = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Configuration for the field that provides the values.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor<TDocument> Value()
	{
		Instance.Value = Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor<TDocument>.Build(null);
		return this;
	}

	/// <summary>
	/// <para>
	/// Configuration for the field that provides the values.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor<TDocument> Value(System.Action<Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor<TDocument>>? action)
	{
		Instance.Value = Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor<TDocument>.Build(action);
		return this;
	}

	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor<TDocument> ValueType(Elastic.Clients.Elasticsearch.Aggregations.ValueType? value)
	{
		Instance.ValueType = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Configuration for the field or script that provides the weights.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor<TDocument> Weight(Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValue? value)
	{
		Instance.Weight = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Configuration for the field or script that provides the weights.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor<TDocument> Weight()
	{
		Instance.Weight = Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor<TDocument>.Build(null);
		return this;
	}

	/// <summary>
	/// <para>
	/// Configuration for the field or script that provides the weights.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor<TDocument> Weight(System.Action<Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor<TDocument>>? action)
	{
		Instance.Weight = Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor<TDocument>.Build(action);
		return this;
	}

	[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	internal static Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation Build(System.Action<Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor<TDocument>>? action)
	{
		if (action is null)
		{
			return new Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance);
		}

		var builder = new Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor<TDocument>(new Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance));
		action.Invoke(builder);
		return builder.Instance;
	}
}

public readonly partial struct WeightedAverageAggregationDescriptor
{
	internal Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation Instance { get; init; }

	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public WeightedAverageAggregationDescriptor(Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation instance)
	{
		Instance = instance;
	}

	[System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
	public WeightedAverageAggregationDescriptor()
	{
		Instance = new Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance);
	}

	public static explicit operator Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor(Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation instance) => new Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor(instance);
	public static implicit operator Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation(Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor descriptor) => descriptor.Instance;

	/// <summary>
	/// <para>
	/// A numeric response formatter.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor Format(string? value)
	{
		Instance.Format = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Configuration for the field that provides the values.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor Value(Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValue? value)
	{
		Instance.Value = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Configuration for the field that provides the values.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor Value()
	{
		Instance.Value = Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor.Build(null);
		return this;
	}

	/// <summary>
	/// <para>
	/// Configuration for the field that provides the values.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor Value(System.Action<Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor>? action)
	{
		Instance.Value = Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor.Build(action);
		return this;
	}

	/// <summary>
	/// <para>
	/// Configuration for the field that provides the values.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor Value<T>(System.Action<Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor<T>>? action)
	{
		Instance.Value = Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor<T>.Build(action);
		return this;
	}

	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor ValueType(Elastic.Clients.Elasticsearch.Aggregations.ValueType? value)
	{
		Instance.ValueType = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Configuration for the field or script that provides the weights.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor Weight(Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValue? value)
	{
		Instance.Weight = value;
		return this;
	}

	/// <summary>
	/// <para>
	/// Configuration for the field or script that provides the weights.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor Weight()
	{
		Instance.Weight = Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor.Build(null);
		return this;
	}

	/// <summary>
	/// <para>
	/// Configuration for the field or script that provides the weights.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor Weight(System.Action<Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor>? action)
	{
		Instance.Weight = Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor.Build(action);
		return this;
	}

	/// <summary>
	/// <para>
	/// Configuration for the field or script that provides the weights.
	/// </para>
	/// </summary>
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor Weight<T>(System.Action<Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor<T>>? action)
	{
		Instance.Weight = Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageValueDescriptor<T>.Build(action);
		return this;
	}

	[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	internal static Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation Build(System.Action<Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor>? action)
	{
		if (action is null)
		{
			return new Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance);
		}

		var builder = new Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregationDescriptor(new Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregation(Elastic.Clients.Elasticsearch.Serialization.JsonConstructorSentinel.Instance));
		action.Invoke(builder);
		return builder.Instance;
	}
}
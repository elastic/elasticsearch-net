// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Aggregations;

public sealed partial class DateRangeExpression
{
	/// <summary>
	/// <para>Start of the range (inclusive).</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("from")]
	public Elastic.Clients.Elasticsearch.Aggregations.FieldDateMath? From { get; set; }

	/// <summary>
	/// <para>Custom key to return the range with.</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("key")]
	public string? Key { get; set; }

	/// <summary>
	/// <para>End of the range (exclusive).</para>
	/// </summary>
	[JsonInclude, JsonPropertyName("to")]
	public Elastic.Clients.Elasticsearch.Aggregations.FieldDateMath? To { get; set; }
}

public sealed partial class DateRangeExpressionDescriptor : SerializableDescriptor<DateRangeExpressionDescriptor>
{
	internal DateRangeExpressionDescriptor(Action<DateRangeExpressionDescriptor> configure) => configure.Invoke(this);

	public DateRangeExpressionDescriptor() : base()
	{
	}

	private Elastic.Clients.Elasticsearch.Aggregations.FieldDateMath? FromValue { get; set; }
	private string? KeyValue { get; set; }
	private Elastic.Clients.Elasticsearch.Aggregations.FieldDateMath? ToValue { get; set; }

	/// <summary>
	/// <para>Start of the range (inclusive).</para>
	/// </summary>
	public DateRangeExpressionDescriptor From(Elastic.Clients.Elasticsearch.Aggregations.FieldDateMath? from)
	{
		FromValue = from;
		return Self;
	}

	/// <summary>
	/// <para>Custom key to return the range with.</para>
	/// </summary>
	public DateRangeExpressionDescriptor Key(string? key)
	{
		KeyValue = key;
		return Self;
	}

	/// <summary>
	/// <para>End of the range (exclusive).</para>
	/// </summary>
	public DateRangeExpressionDescriptor To(Elastic.Clients.Elasticsearch.Aggregations.FieldDateMath? to)
	{
		ToValue = to;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		if (FromValue is not null)
		{
			writer.WritePropertyName("from");
			JsonSerializer.Serialize(writer, FromValue, options);
		}

		if (!string.IsNullOrEmpty(KeyValue))
		{
			writer.WritePropertyName("key");
			writer.WriteStringValue(KeyValue);
		}

		if (ToValue is not null)
		{
			writer.WritePropertyName("to");
			JsonSerializer.Serialize(writer, ToValue, options);
		}

		writer.WriteEndObject();
	}
}
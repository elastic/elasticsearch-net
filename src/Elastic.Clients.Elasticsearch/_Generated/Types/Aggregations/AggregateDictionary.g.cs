// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Core;
using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Linq;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Aggregations;

public partial interface IAggregate
{
	public string? Type { get; }
}

[JsonConverter(typeof(AggregateDictionaryConverter))]
public partial class AggregateDictionary : IsAReadOnlyDictionary<string, IAggregate>
{
	public AggregateDictionary(IReadOnlyDictionary<string, IAggregate> backingDictionary) : base(backingDictionary)
	{
	}

	public Elastic.Clients.Elasticsearch.Aggregations.AdjacencyMatrixAggregate? GetAdjacencyMatrix(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.AdjacencyMatrixAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.AutoDateHistogramAggregate? GetAutoDateHistogram(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.AutoDateHistogramAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.AverageAggregate? GetAverage(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.AverageAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.BoxplotAggregate? GetBoxplot(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.BoxplotAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.BucketMetricValueAggregate? GetBucketMetricValue(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.BucketMetricValueAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.CardinalityAggregate? GetCardinality(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.CardinalityAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.ChildrenAggregate? GetChildren(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.ChildrenAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.CompositeAggregate? GetComposite(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.CompositeAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.CumulativeCardinalityAggregate? GetCumulativeCardinality(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.CumulativeCardinalityAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.DateHistogramAggregate? GetDateHistogram(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.DateHistogramAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.DateRangeAggregate? GetDateRange(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.DateRangeAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.DerivativeAggregate? GetDerivative(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.DerivativeAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.DoubleTermsAggregate? GetDoubleTerms(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.DoubleTermsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.ExtendedStatsAggregate? GetExtendedStats(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.ExtendedStatsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.ExtendedStatsBucketAggregate? GetExtendedStatsBucket(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.ExtendedStatsBucketAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.FilterAggregate? GetFilter(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.FilterAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.FiltersAggregate? GetFilters(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.FiltersAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.FrequentItemSetsAggregate? GetFrequentItemSets(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.FrequentItemSetsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.GeoBoundsAggregate? GetGeoBounds(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.GeoBoundsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.GeoCentroidAggregate? GetGeoCentroid(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.GeoCentroidAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.GeoDistanceAggregate? GetGeoDistance(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.GeoDistanceAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.GeohashGridAggregate? GetGeohashGrid(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.GeohashGridAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.GeohexGridAggregate? GetGeohexGrid(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.GeohexGridAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.GeoLineAggregate? GetGeoLine(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.GeoLineAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.GeotileGridAggregate? GetGeotileGrid(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.GeotileGridAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.GlobalAggregate? GetGlobal(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.GlobalAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.HdrPercentileRanksAggregate? GetHdrPercentileRanks(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.HdrPercentileRanksAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.HdrPercentilesAggregate? GetHdrPercentiles(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.HdrPercentilesAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.HistogramAggregate? GetHistogram(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.HistogramAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.InferenceAggregate? GetInference(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.InferenceAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.IpPrefixAggregate? GetIpPrefix(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.IpPrefixAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.IpRangeAggregate? GetIpRange(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.IpRangeAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.LongRareTermsAggregate? GetLongRareTerms(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.LongRareTermsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.LongTermsAggregate? GetLongTerms(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.LongTermsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.MatrixStatsAggregate? GetMatrixStats(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.MatrixStatsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.MaxAggregate? GetMax(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.MaxAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.MedianAbsoluteDeviationAggregate? GetMedianAbsoluteDeviation(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.MedianAbsoluteDeviationAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.MinAggregate? GetMin(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.MinAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.MissingAggregate? GetMissing(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.MissingAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.MultiTermsAggregate? GetMultiTerms(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.MultiTermsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.NestedAggregate? GetNested(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.NestedAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.ParentAggregate? GetParent(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.ParentAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.PercentilesBucketAggregate? GetPercentilesBucket(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.PercentilesBucketAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.RangeAggregate? GetRange(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.RangeAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.RateAggregate? GetRate(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.RateAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.ReverseNestedAggregate? GetReverseNested(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.ReverseNestedAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.SamplerAggregate? GetSampler(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.SamplerAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.ScriptedMetricAggregate? GetScriptedMetric(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.ScriptedMetricAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.SignificantLongTermsAggregate? GetSignificantLongTerms(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.SignificantLongTermsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.SignificantStringTermsAggregate? GetSignificantStringTerms(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.SignificantStringTermsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.SimpleValueAggregate? GetSimpleValue(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.SimpleValueAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.StatsAggregate? GetStats(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.StatsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.StatsBucketAggregate? GetStatsBucket(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.StatsBucketAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.StringRareTermsAggregate? GetStringRareTerms(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.StringRareTermsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.StringStatsAggregate? GetStringStats(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.StringStatsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.StringTermsAggregate? GetStringTerms(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.StringTermsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.SumAggregate? GetSum(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.SumAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.TDigestPercentileRanksAggregate? GetTDigestPercentileRanks(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.TDigestPercentileRanksAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.TDigestPercentilesAggregate? GetTDigestPercentiles(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.TDigestPercentilesAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.TimeSeriesAggregate? GetTimeSeries(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.TimeSeriesAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.TopHitsAggregate? GetTopHits(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.TopHitsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.TopMetricsAggregate? GetTopMetrics(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.TopMetricsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.TTestAggregate? GetTTest(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.TTestAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.UnmappedRareTermsAggregate? GetUnmappedRareTerms(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.UnmappedRareTermsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.UnmappedSamplerAggregate? GetUnmappedSampler(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.UnmappedSamplerAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.UnmappedSignificantTermsAggregate? GetUnmappedSignificantTerms(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.UnmappedSignificantTermsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.UnmappedTermsAggregate? GetUnmappedTerms(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.UnmappedTermsAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.ValueCountAggregate? GetValueCount(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.ValueCountAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.VariableWidthHistogramAggregate? GetVariableWidthHistogram(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.VariableWidthHistogramAggregate>(key);
	public Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregate? GetWeightedAverage(string key) => TryGet<Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregate>(key);
	private T? TryGet<T>(string key) where T : class, IAggregate => BackingDictionary.TryGetValue(key, out var value) ? value as T : null;
}

internal sealed partial class AggregateDictionaryConverter : System.Text.Json.Serialization.JsonConverter<AggregateDictionary>
{
	public override AggregateDictionary Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
	{
		reader.ValidateToken(System.Text.Json.JsonTokenType.StartObject);
		var dictionary = new System.Collections.Generic.Dictionary<string, IAggregate>();
		while (reader.Read() && reader.TokenType is System.Text.Json.JsonTokenType.PropertyName)
		{
			ReadItem(ref reader, options, out string name, out IAggregate value);
			dictionary[name] = value;
		}

		reader.ValidateToken(System.Text.Json.JsonTokenType.EndObject);
		return new AggregateDictionary(dictionary);
	}

	public override void Write(System.Text.Json.Utf8JsonWriter writer, AggregateDictionary value, System.Text.Json.JsonSerializerOptions options)
	{
		writer.WriteStartObject();
		foreach (var pair in value)
		{
			WriteItem(writer, options, pair.Key, pair.Value);
		}

		writer.WriteEndObject();
	}

	internal static void ReadItem(ref System.Text.Json.Utf8JsonReader reader, System.Text.Json.JsonSerializerOptions options, out string name, out IAggregate value)
	{
		var key = reader.ReadPropertyName<string>(options, null);
		reader.Read();
		var parts = key.Split('#');
		if (parts.Length != 2)
		{
			throw new System.Text.Json.JsonException($"Unable to parse typed-key '{key}' for variant '{nameof(IAggregate)}'.");
		}

		var discriminator = parts[0];
		name = parts[1];
		value = discriminator switch
		{
			"adjacency_matrix" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.AdjacencyMatrixAggregate>(options, null),
			"auto_date_histogram" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.AutoDateHistogramAggregate>(options, null),
			"avg" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.AverageAggregate>(options, null),
			"boxplot" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.BoxplotAggregate>(options, null),
			"bucket_metric_value" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.BucketMetricValueAggregate>(options, null),
			"cardinality" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.CardinalityAggregate>(options, null),
			"children" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.ChildrenAggregate>(options, null),
			"composite" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.CompositeAggregate>(options, null),
			"simple_long_value" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.CumulativeCardinalityAggregate>(options, null),
			"date_histogram" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.DateHistogramAggregate>(options, null),
			"date_range" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.DateRangeAggregate>(options, null),
			"derivative" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.DerivativeAggregate>(options, null),
			"dterms" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.DoubleTermsAggregate>(options, null),
			"extended_stats" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.ExtendedStatsAggregate>(options, null),
			"extended_stats_bucket" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.ExtendedStatsBucketAggregate>(options, null),
			"filter" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.FilterAggregate>(options, null),
			"filters" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.FiltersAggregate>(options, null),
			"frequent_item_sets" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.FrequentItemSetsAggregate>(options, null),
			"geo_bounds" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.GeoBoundsAggregate>(options, null),
			"geo_centroid" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.GeoCentroidAggregate>(options, null),
			"geo_distance" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.GeoDistanceAggregate>(options, null),
			"geohash_grid" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.GeohashGridAggregate>(options, null),
			"geohex_grid" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.GeohexGridAggregate>(options, null),
			"geo_line" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.GeoLineAggregate>(options, null),
			"geotile_grid" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.GeotileGridAggregate>(options, null),
			"global" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.GlobalAggregate>(options, null),
			"hdr_percentile_ranks" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.HdrPercentileRanksAggregate>(options, null),
			"hdr_percentiles" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.HdrPercentilesAggregate>(options, null),
			"histogram" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.HistogramAggregate>(options, null),
			"inference" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.InferenceAggregate>(options, null),
			"ip_prefix" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.IpPrefixAggregate>(options, null),
			"ip_range" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.IpRangeAggregate>(options, null),
			"lrareterms" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.LongRareTermsAggregate>(options, null),
			"lterms" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.LongTermsAggregate>(options, null),
			"matrix_stats" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.MatrixStatsAggregate>(options, null),
			"max" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.MaxAggregate>(options, null),
			"median_absolute_deviation" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.MedianAbsoluteDeviationAggregate>(options, null),
			"min" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.MinAggregate>(options, null),
			"missing" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.MissingAggregate>(options, null),
			"multi_terms" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.MultiTermsAggregate>(options, null),
			"nested" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.NestedAggregate>(options, null),
			"parent" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.ParentAggregate>(options, null),
			"percentiles_bucket" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.PercentilesBucketAggregate>(options, null),
			"range" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.RangeAggregate>(options, null),
			"rate" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.RateAggregate>(options, null),
			"reverse_nested" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.ReverseNestedAggregate>(options, null),
			"sampler" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.SamplerAggregate>(options, null),
			"scripted_metric" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.ScriptedMetricAggregate>(options, null),
			"siglterms" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.SignificantLongTermsAggregate>(options, null),
			"sigsterms" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.SignificantStringTermsAggregate>(options, null),
			"simple_value" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.SimpleValueAggregate>(options, null),
			"stats" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.StatsAggregate>(options, null),
			"stats_bucket" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.StatsBucketAggregate>(options, null),
			"srareterms" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.StringRareTermsAggregate>(options, null),
			"string_stats" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.StringStatsAggregate>(options, null),
			"sterms" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.StringTermsAggregate>(options, null),
			"sum" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.SumAggregate>(options, null),
			"tdigest_percentile_ranks" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.TDigestPercentileRanksAggregate>(options, null),
			"tdigest_percentiles" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.TDigestPercentilesAggregate>(options, null),
			"time_series" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.TimeSeriesAggregate>(options, null),
			"top_hits" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.TopHitsAggregate>(options, null),
			"top_metrics" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.TopMetricsAggregate>(options, null),
			"t_test" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.TTestAggregate>(options, null),
			"umrareterms" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.UnmappedRareTermsAggregate>(options, null),
			"unmapped_sampler" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.UnmappedSamplerAggregate>(options, null),
			"umsigterms" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.UnmappedSignificantTermsAggregate>(options, null),
			"umterms" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.UnmappedTermsAggregate>(options, null),
			"value_count" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.ValueCountAggregate>(options, null),
			"variable_width_histogram" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.VariableWidthHistogramAggregate>(options, null),
			"weighted_avg" => reader.ReadValue<Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregate>(options, null),
			_ => throw new System.Text.Json.JsonException($"Variant '{discriminator}' is not supported for type '{nameof(IAggregate)}'.")
		};
	}

	internal static void WriteItem(System.Text.Json.Utf8JsonWriter writer, System.Text.Json.JsonSerializerOptions options, string name, IAggregate value)
	{
		var key = value.Type + '#' + name;
		switch (value)
		{
			case Elastic.Clients.Elasticsearch.Aggregations.AdjacencyMatrixAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.AutoDateHistogramAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.AverageAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.BoxplotAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.BucketMetricValueAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.CardinalityAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.ChildrenAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.CompositeAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.CumulativeCardinalityAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.DateHistogramAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.DateRangeAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.DerivativeAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.DoubleTermsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.ExtendedStatsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.ExtendedStatsBucketAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.FilterAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.FiltersAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.FrequentItemSetsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.GeoBoundsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.GeoCentroidAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.GeoDistanceAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.GeohashGridAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.GeohexGridAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.GeoLineAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.GeotileGridAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.GlobalAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.HdrPercentileRanksAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.HdrPercentilesAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.HistogramAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.InferenceAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.IpPrefixAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.IpRangeAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.LongRareTermsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.LongTermsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.MatrixStatsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.MaxAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.MedianAbsoluteDeviationAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.MinAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.MissingAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.MultiTermsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.NestedAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.ParentAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.PercentilesBucketAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.RangeAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.RateAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.ReverseNestedAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.SamplerAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.ScriptedMetricAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.SignificantLongTermsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.SignificantStringTermsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.SimpleValueAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.StatsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.StatsBucketAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.StringRareTermsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.StringStatsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.StringTermsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.SumAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.TDigestPercentileRanksAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.TDigestPercentilesAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.TimeSeriesAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.TopHitsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.TopMetricsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.TTestAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.UnmappedRareTermsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.UnmappedSamplerAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.UnmappedSignificantTermsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.UnmappedTermsAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.ValueCountAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.VariableWidthHistogramAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			case Elastic.Clients.Elasticsearch.Aggregations.WeightedAverageAggregate v:
				writer.WriteProperty(options, key, v, null, null);
				break;
			default:
				throw new System.Text.Json.JsonException($"Variant '{0}' is not supported for type '{nameof(IAggregate)}'.");
		}
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Aggregations
{
	public partial class BucketCorrelationFunctionCountCorrelation
	{
		[JsonInclude]
		[JsonPropertyName("indicator")]
		public Elastic.Clients.Elasticsearch.Aggregations.BucketCorrelationFunctionCountCorrelationIndicator Indicator { get; set; }
	}

	public sealed partial class BucketCorrelationFunctionCountCorrelationDescriptor : DescriptorBase<BucketCorrelationFunctionCountCorrelationDescriptor>
	{
		public BucketCorrelationFunctionCountCorrelationDescriptor()
		{
		}

		internal BucketCorrelationFunctionCountCorrelationDescriptor(Action<BucketCorrelationFunctionCountCorrelationDescriptor> configure) => configure.Invoke(this);
		internal Elastic.Clients.Elasticsearch.Aggregations.BucketCorrelationFunctionCountCorrelationIndicator IndicatorValue { get; private set; }

		internal BucketCorrelationFunctionCountCorrelationIndicatorDescriptor IndicatorDescriptor { get; private set; }

		internal Action<BucketCorrelationFunctionCountCorrelationIndicatorDescriptor> IndicatorDescriptorAction { get; private set; }

		public BucketCorrelationFunctionCountCorrelationDescriptor Indicator(Elastic.Clients.Elasticsearch.Aggregations.BucketCorrelationFunctionCountCorrelationIndicator indicator)
		{
			IndicatorDescriptor = null;
			IndicatorDescriptorAction = null;
			return Assign(indicator, (a, v) => a.IndicatorValue = v);
		}

		public BucketCorrelationFunctionCountCorrelationDescriptor Indicator(Aggregations.BucketCorrelationFunctionCountCorrelationIndicatorDescriptor descriptor)
		{
			IndicatorValue = null;
			IndicatorDescriptorAction = null;
			return Assign(descriptor, (a, v) => a.IndicatorDescriptor = v);
		}

		public BucketCorrelationFunctionCountCorrelationDescriptor Indicator(Action<Aggregations.BucketCorrelationFunctionCountCorrelationIndicatorDescriptor> configure)
		{
			IndicatorValue = null;
			IndicatorDescriptorAction = null;
			return Assign(configure, (a, v) => a.IndicatorDescriptorAction = v);
		}

		protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
		{
			writer.WriteStartObject();
			if (IndicatorDescriptor is not null)
			{
				writer.WritePropertyName("indicator");
				JsonSerializer.Serialize(writer, IndicatorDescriptor, options);
			}
			else if (IndicatorDescriptorAction is not null)
			{
				writer.WritePropertyName("indicator");
				JsonSerializer.Serialize(writer, new Aggregations.BucketCorrelationFunctionCountCorrelationIndicatorDescriptor(IndicatorDescriptorAction), options);
			}
			else
			{
				writer.WritePropertyName("indicator");
				JsonSerializer.Serialize(writer, IndicatorValue, options);
			}

			writer.WriteEndObject();
		}
	}
}
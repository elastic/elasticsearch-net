// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Threading;
using System.Threading.Tasks;

#nullable restore
namespace Elastic.Clients.Elasticsearch.TextStructure
{
	public class TextStructureNamespace : NamespacedClientProxy
	{
		internal TextStructureNamespace(ElasticClient client) : base(client)
		{
		}

		public FindStructureResponse FindStructure<TJsonDocument>(IFindStructureRequest<TJsonDocument> request) => DoRequest<IFindStructureRequest<TJsonDocument>, FindStructureResponse>(request, request.RequestParameters);
		public Task<FindStructureResponse> FindStructureAsync<TJsonDocument>(IFindStructureRequest<TJsonDocument> request, CancellationToken cancellationToken = default) => DoRequestAsync<IFindStructureRequest<TJsonDocument>, FindStructureResponse>(request, request.RequestParameters, cancellationToken);
		public FindStructureResponse FindStructure<TJsonDocument>(Func<FindStructureDescriptor<TJsonDocument>, IFindStructureRequest<TJsonDocument>> selector = null) => FindStructure<TJsonDocument>(selector.InvokeOrDefault(new FindStructureDescriptor<TJsonDocument>()));
		public Task<FindStructureResponse> FindStructureAsync<TJsonDocument>(Func<FindStructureDescriptor<TJsonDocument>, IFindStructureRequest<TJsonDocument>> selector = null, CancellationToken cancellationToken = default) => FindStructureAsync<TJsonDocument>(selector.InvokeOrDefault(new FindStructureDescriptor<TJsonDocument>()), cancellationToken);
	}
}
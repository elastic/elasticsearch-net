// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using OneOf;
using Elastic.Transport;

#nullable restore
namespace Elastic.Clients.Elasticsearch
{
	public partial class SuggestOption<TDocument>
	{
	}

	public partial class Context : Union<string?, Elastic.Clients.Elasticsearch.QueryDsl.GeoLocation?>
	{
		public Context(string? item) : base(item)
		{
		}

		public Context(Elastic.Clients.Elasticsearch.QueryDsl.GeoLocation? item) : base(item)
		{
		}
	}

	public partial class Ids
	{
		private readonly List<Id> _idList = new();
	}

	public partial class Fields
	{
		private readonly List<Field> _fieldList = new();
	}

	public partial class Time : Union<string?, int?>
	{
		public Time(string? item) : base(item)
		{
		}

		public Time(int? item) : base(item)
		{
		}
	}

	public partial class ExpandWildcards
	{
	}

	public partial class Indices
	{
		private readonly List<IndexName> _indexNameList = new();
	}

	public partial class Script
	{
	}

	public partial class Fuzziness : Union<string?, int?>
	{
		public Fuzziness(string? item) : base(item)
		{
		}

		public Fuzziness(int? item) : base(item)
		{
		}
	}

	public partial class MinimumShouldMatch : Union<int?, string?>
	{
		public MinimumShouldMatch(int? item) : base(item)
		{
		}

		public MinimumShouldMatch(string? item) : base(item)
		{
		}
	}

	public partial class Sort
	{
		private readonly List<SortCombinations> _sortCombinationsList = new();
	}

	public partial class SortCombinations
	{
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using OneOf;
using Elastic.Transport;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Analysis
{
	public interface IAnalyzersVariant
	{
	}

	public interface IAnalyzers : IIsADictionary<string, IAnalyzersVariant>
	{
	}

	public class Analyzers : IsADictionaryBase<string, IAnalyzersVariant>
	{
	}

	public partial class CharFilter : Union<string?, Elastic.Clients.Elasticsearch.Analysis.CharFilterDefinitions?>
	{
		public CharFilter(string? item) : base(item)
		{
		}

		public CharFilter(Elastic.Clients.Elasticsearch.Analysis.CharFilterDefinitions? item) : base(item)
		{
		}
	}

	public interface ICharFilterDefinitionsVariant
	{
	}

	public interface ICharFilterDefinitions : IIsADictionary<string, ICharFilterDefinitionsVariant>
	{
	}

	public class CharFilterDefinitions : IsADictionaryBase<string, ICharFilterDefinitionsVariant>
	{
	}

	public interface INormalizersVariant
	{
	}

	public interface INormalizers : IIsADictionary<string, INormalizersVariant>
	{
	}

	public class Normalizers : IsADictionaryBase<string, INormalizersVariant>
	{
	}

	public partial class StopWords
	{
		private readonly List<string> _stringList = new();
	}

	public partial class TokenFilter : Union<string?, Elastic.Clients.Elasticsearch.Analysis.TokenFilterDefinitions?>
	{
		public TokenFilter(string? item) : base(item)
		{
		}

		public TokenFilter(Elastic.Clients.Elasticsearch.Analysis.TokenFilterDefinitions? item) : base(item)
		{
		}
	}

	public interface ITokenFilterDefinitionsVariant
	{
	}

	public interface ITokenFilterDefinitions : IIsADictionary<string, ITokenFilterDefinitionsVariant>
	{
	}

	public class TokenFilterDefinitions : IsADictionaryBase<string, ITokenFilterDefinitionsVariant>
	{
	}

	public partial class Tokenizer : Union<string?, Elastic.Clients.Elasticsearch.Analysis.TokenizerDefinitions?>
	{
		public Tokenizer(string? item) : base(item)
		{
		}

		public Tokenizer(Elastic.Clients.Elasticsearch.Analysis.TokenizerDefinitions? item) : base(item)
		{
		}
	}

	public interface ITokenizerDefinitionsVariant
	{
	}

	public interface ITokenizerDefinitions : IIsADictionary<string, ITokenizerDefinitionsVariant>
	{
	}

	public class TokenizerDefinitions : IsADictionaryBase<string, ITokenizerDefinitionsVariant>
	{
	}
}
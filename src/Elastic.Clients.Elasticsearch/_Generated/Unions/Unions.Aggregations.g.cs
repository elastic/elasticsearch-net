// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using OneOf;
using Elastic.Transport;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Aggregations
{
	public partial class Aggregate
	{
	}

	public partial class Buckets<TBucket> : Union<Dictionary<string, TBucket>?, IReadOnlyCollection<TBucket>?>
	{
		public Buckets(Dictionary<string, TBucket>? item) : base(item)
		{
		}

		public Buckets(IReadOnlyCollection<TBucket>? item) : base(item)
		{
		}
	}

	public partial class BucketsPath
	{
	}

	public partial class FieldDateMath : Union<string?, double?>
	{
		public FieldDateMath(string? item) : base(item)
		{
		}

		public FieldDateMath(double? item) : base(item)
		{
		}
	}

	public partial class Missing
	{
	}

	public interface IMovingAverageAggregationsVariant
	{
	}

	public interface IMovingAverageAggregations : IIsADictionary<string, IMovingAverageAggregationsVariant>
	{
	}

	public class MovingAverageAggregations : IsADictionaryBase<string, IMovingAverageAggregationsVariant>
	{
	}

	public partial class Percentiles : Union<Dictionary<string, object>?, IReadOnlyCollection<Elastic.Clients.Elasticsearch.Aggregations.ArrayPercentilesItem>?>
	{
		public Percentiles(Dictionary<string, object>? item) : base(item)
		{
		}

		public Percentiles(IReadOnlyCollection<Elastic.Clients.Elasticsearch.Aggregations.ArrayPercentilesItem>? item) : base(item)
		{
		}
	}

	public partial class TermsAggregationOrder : Union<Dictionary<string, Elastic.Clients.Elasticsearch.SortOrder>?, IReadOnlyCollection<Dictionary<string, Elastic.Clients.Elasticsearch.SortOrder>>?>
	{
		public TermsAggregationOrder(Dictionary<string, Elastic.Clients.Elasticsearch.SortOrder>? item) : base(item)
		{
		}

		public TermsAggregationOrder(IReadOnlyCollection<Dictionary<string, Elastic.Clients.Elasticsearch.SortOrder>>? item) : base(item)
		{
		}
	}

	public partial class TermsExclude
	{
		private readonly List<string> _stringList = new();
	}

	public partial class TermsInclude
	{
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Requests;
using Elastic.Clients.Elasticsearch.Serialization;
using Elastic.Transport;
using Elastic.Transport.Extensions;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Esql;

public sealed partial class AsyncQueryStopRequestParameters : RequestParameters
{
	/// <summary>
	/// <para>
	/// Indicates whether columns that are entirely <c>null</c> will be removed from the <c>columns</c> and <c>values</c> portion of the results.
	/// If <c>true</c>, the response will include an extra section under the name <c>all_columns</c> which has the name of all the columns.
	/// </para>
	/// </summary>
	public bool? DropNullColumns { get => Q<bool?>("drop_null_columns"); set => Q("drop_null_columns", value); }
}

/// <summary>
/// <para>
/// Stop async ES|QL query.
/// </para>
/// <para>
/// This API interrupts the query execution and returns the results so far.
/// If the Elasticsearch security features are enabled, only the user who first submitted the ES|QL query can stop it.
/// </para>
/// </summary>
public sealed partial class AsyncQueryStopRequest : PlainRequest<AsyncQueryStopRequestParameters>
{
	public AsyncQueryStopRequest(Elastic.Clients.Elasticsearch.Id id) : base(r => r.Required("id", id))
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.EsqlAsyncQueryStop;

	protected override HttpMethod StaticHttpMethod => HttpMethod.POST;

	internal override bool SupportsBody => false;

	internal override string OperationName => "esql.async_query_stop";

	/// <summary>
	/// <para>
	/// Indicates whether columns that are entirely <c>null</c> will be removed from the <c>columns</c> and <c>values</c> portion of the results.
	/// If <c>true</c>, the response will include an extra section under the name <c>all_columns</c> which has the name of all the columns.
	/// </para>
	/// </summary>
	[JsonIgnore]
	public bool? DropNullColumns { get => Q<bool?>("drop_null_columns"); set => Q("drop_null_columns", value); }
}

/// <summary>
/// <para>
/// Stop async ES|QL query.
/// </para>
/// <para>
/// This API interrupts the query execution and returns the results so far.
/// If the Elasticsearch security features are enabled, only the user who first submitted the ES|QL query can stop it.
/// </para>
/// </summary>
public sealed partial class AsyncQueryStopRequestDescriptor<TDocument> : RequestDescriptor<AsyncQueryStopRequestDescriptor<TDocument>, AsyncQueryStopRequestParameters>
{
	internal AsyncQueryStopRequestDescriptor(Action<AsyncQueryStopRequestDescriptor<TDocument>> configure) => configure.Invoke(this);

	public AsyncQueryStopRequestDescriptor(Elastic.Clients.Elasticsearch.Id id) : base(r => r.Required("id", id))
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.EsqlAsyncQueryStop;

	protected override HttpMethod StaticHttpMethod => HttpMethod.POST;

	internal override bool SupportsBody => false;

	internal override string OperationName => "esql.async_query_stop";

	public AsyncQueryStopRequestDescriptor<TDocument> DropNullColumns(bool? dropNullColumns = true) => Qs("drop_null_columns", dropNullColumns);

	public AsyncQueryStopRequestDescriptor<TDocument> Id(Elastic.Clients.Elasticsearch.Id id)
	{
		RouteValues.Required("id", id);
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
	}
}

/// <summary>
/// <para>
/// Stop async ES|QL query.
/// </para>
/// <para>
/// This API interrupts the query execution and returns the results so far.
/// If the Elasticsearch security features are enabled, only the user who first submitted the ES|QL query can stop it.
/// </para>
/// </summary>
public sealed partial class AsyncQueryStopRequestDescriptor : RequestDescriptor<AsyncQueryStopRequestDescriptor, AsyncQueryStopRequestParameters>
{
	internal AsyncQueryStopRequestDescriptor(Action<AsyncQueryStopRequestDescriptor> configure) => configure.Invoke(this);

	public AsyncQueryStopRequestDescriptor(Elastic.Clients.Elasticsearch.Id id) : base(r => r.Required("id", id))
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.EsqlAsyncQueryStop;

	protected override HttpMethod StaticHttpMethod => HttpMethod.POST;

	internal override bool SupportsBody => false;

	internal override string OperationName => "esql.async_query_stop";

	public AsyncQueryStopRequestDescriptor DropNullColumns(bool? dropNullColumns = true) => Qs("drop_null_columns", dropNullColumns);

	public AsyncQueryStopRequestDescriptor Id(Elastic.Clients.Elasticsearch.Id id)
	{
		RouteValues.Required("id", id);
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
	}
}
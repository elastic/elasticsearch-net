// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Sql
{
	[ConvertAs(typeof(ClearCursorRequest))]
	public partial interface IClearCursorRequest : IRequest<ClearCursorRequestParameters>
	{
		string Cursor { get; set; }
	}

	public partial class ClearCursorRequest : PlainRequestBase<ClearCursorRequestParameters>, IClearCursorRequest
	{
		protected IClearCursorRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SqlClearCursor;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_sql/close</summary>
        public ClearCursorRequest() : base()
		{
		}

		[JsonInclude]
		[JsonPropertyName("cursor")]
		public string Cursor { get; set; }
	}

	[ConvertAs(typeof(QueryRequest))]
	public partial interface IQueryRequest : IRequest<QueryRequestParameters>
	{
		bool? Columnar { get; set; }

		string? Cursor { get; set; }

		int? FetchSize { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? Filter { get; set; }

		string? Query { get; set; }

		Elastic.Clients.Elasticsearch.Time? RequestTimeout { get; set; }

		Elastic.Clients.Elasticsearch.Time? PageTimeout { get; set; }

		string? TimeZone { get; set; }

		bool? FieldMultiValueLeniency { get; set; }
	}

	public partial class QueryRequest : PlainRequestBase<QueryRequestParameters>, IQueryRequest
	{
		protected IQueryRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SqlQuery;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => Columnar is null && Cursor is null && FetchSize is null && Filter is null && Query is null && RequestTimeout is null && PageTimeout is null && FieldMultiValueLeniency is null;

		///<summary>/_sql</summary>
        public QueryRequest() : base()
		{
		}

		[JsonIgnore]
		public string? Format { get => Q<string?>("format"); set => Q("format", value); }

		[JsonInclude]
		[JsonPropertyName("columnar")]
		public bool? Columnar { get; set; }

		[JsonInclude]
		[JsonPropertyName("cursor")]
		public string? Cursor { get; set; }

		[JsonInclude]
		[JsonPropertyName("fetch_size")]
		public int? FetchSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("filter")]
		public Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? Filter { get; set; }

		[JsonInclude]
		[JsonPropertyName("query")]
		public string? Query { get; set; }

		[JsonInclude]
		[JsonPropertyName("request_timeout")]
		public Elastic.Clients.Elasticsearch.Time? RequestTimeout { get; set; }

		[JsonInclude]
		[JsonPropertyName("page_timeout")]
		public Elastic.Clients.Elasticsearch.Time? PageTimeout { get; set; }

		[JsonInclude]
		[JsonPropertyName("time_zone")]
		public string? TimeZone { get; set; }

		[JsonInclude]
		[JsonPropertyName("field_multi_value_leniency")]
		public bool? FieldMultiValueLeniency { get; set; }
	}

	[ConvertAs(typeof(TranslateRequest))]
	public partial interface ITranslateRequest : IRequest<TranslateRequestParameters>
	{
		int? FetchSize { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? Filter { get; set; }

		string Query { get; set; }

		string? TimeZone { get; set; }
	}

	public partial class TranslateRequest : PlainRequestBase<TranslateRequestParameters>, ITranslateRequest
	{
		protected ITranslateRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.SqlTranslate;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_sql/translate</summary>
        public TranslateRequest() : base()
		{
		}

		[JsonInclude]
		[JsonPropertyName("fetch_size")]
		public int? FetchSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("filter")]
		public Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? Filter { get; set; }

		[JsonInclude]
		[JsonPropertyName("query")]
		public string Query { get; set; }

		[JsonInclude]
		[JsonPropertyName("time_zone")]
		public string? TimeZone { get; set; }
	}
}
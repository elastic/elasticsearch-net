// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Tasks
{
	public class CancelRequestParameters : RequestParameters<CancelRequestParameters>
	{
		[JsonIgnore]
		public Union<string, IEnumerable<string>>? Actions { get => Q<Union<string, IEnumerable<string>>?>("actions"); set => Q("actions", value); }

		[JsonIgnore]
		public IEnumerable<string>? Nodes { get => Q<IEnumerable<string>?>("nodes"); set => Q("nodes", value); }

		[JsonIgnore]
		public string? ParentTaskId { get => Q<string?>("parent_task_id"); set => Q("parent_task_id", value); }

		[JsonIgnore]
		public bool? WaitForCompletion { get => Q<bool?>("wait_for_completion"); set => Q("wait_for_completion", value); }
	}

	public class GetRequestParameters : RequestParameters<GetRequestParameters>
	{
		[JsonIgnore]
		public Elastic.Clients.Elasticsearch.Time? Timeout { get => Q<Elastic.Clients.Elasticsearch.Time?>("timeout"); set => Q("timeout", value); }

		[JsonIgnore]
		public bool? WaitForCompletion { get => Q<bool?>("wait_for_completion"); set => Q("wait_for_completion", value); }
	}

	public class ListRequestParameters : RequestParameters<ListRequestParameters>
	{
		[JsonIgnore]
		public Union<string, IEnumerable<string>>? Actions { get => Q<Union<string, IEnumerable<string>>?>("actions"); set => Q("actions", value); }

		[JsonIgnore]
		public bool? Detailed { get => Q<bool?>("detailed"); set => Q("detailed", value); }

		[JsonIgnore]
		public Elastic.Clients.Elasticsearch.GroupBy? GroupBy { get => Q<Elastic.Clients.Elasticsearch.GroupBy?>("group_by"); set => Q("group_by", value); }

		[JsonIgnore]
		public IEnumerable<string>? Nodes { get => Q<IEnumerable<string>?>("nodes"); set => Q("nodes", value); }

		[JsonIgnore]
		public Elastic.Clients.Elasticsearch.Id? ParentTaskId { get => Q<Elastic.Clients.Elasticsearch.Id?>("parent_task_id"); set => Q("parent_task_id", value); }

		[JsonIgnore]
		public Elastic.Clients.Elasticsearch.Time? Timeout { get => Q<Elastic.Clients.Elasticsearch.Time?>("timeout"); set => Q("timeout", value); }

		[JsonIgnore]
		public bool? WaitForCompletion { get => Q<bool?>("wait_for_completion"); set => Q("wait_for_completion", value); }
	}
}
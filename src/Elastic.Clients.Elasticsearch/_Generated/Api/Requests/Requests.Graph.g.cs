// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Graph
{
	[ConvertAs(typeof(ExploreRequest))]
	public partial interface IExploreRequest : IRequest<ExploreRequestParameters>
	{
		Elastic.Clients.Elasticsearch.Graph.Hop? Connections { get; set; }

		Elastic.Clients.Elasticsearch.Graph.ExploreControls? Controls { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? Query { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Graph.VertexDefinition>? Vertices { get; set; }
	}

	public partial class ExploreRequest : PlainRequestBase<ExploreRequestParameters>, IExploreRequest
	{
		protected IExploreRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.GraphExplore;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/{index}/_graph/explore</summary>
        public ExploreRequest(Elastic.Clients.Elasticsearch.Indices index) : base(r => r.Required("index", index))
		{
		}

		[JsonIgnore]
		public Elastic.Clients.Elasticsearch.Routing? Routing { get => Q<Elastic.Clients.Elasticsearch.Routing?>("routing"); set => Q("routing", value); }

		[JsonIgnore]
		public Elastic.Clients.Elasticsearch.Time? Timeout { get => Q<Elastic.Clients.Elasticsearch.Time?>("timeout"); set => Q("timeout", value); }

		[JsonInclude]
		[JsonPropertyName("connections")]
		public Elastic.Clients.Elasticsearch.Graph.Hop? Connections { get; set; }

		[JsonInclude]
		[JsonPropertyName("controls")]
		public Elastic.Clients.Elasticsearch.Graph.ExploreControls? Controls { get; set; }

		[JsonInclude]
		[JsonPropertyName("query")]
		public Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? Query { get; set; }

		[JsonInclude]
		[JsonPropertyName("vertices")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Graph.VertexDefinition>? Vertices { get; set; }
	}
}
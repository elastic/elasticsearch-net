// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.AsyncSearch
{
	[ConvertAs(typeof(DeleteRequest))]
	public partial interface IDeleteRequest : IRequest<DeleteRequestParameters>
	{
	}

	public partial class DeleteRequest : PlainRequestBase<DeleteRequestParameters>, IDeleteRequest
	{
		protected IDeleteRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.AsyncSearchDelete;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_async_search/{id}</summary>
        public DeleteRequest(Elastic.Clients.Elasticsearch.Id id) : base(r => r.Required("id", id))
		{
		}
	}

	[ConvertAs(typeof(GetRequest))]
	public partial interface IGetRequest : IRequest<GetRequestParameters>
	{
	}

	public partial class GetRequest : PlainRequestBase<GetRequestParameters>, IGetRequest
	{
		protected IGetRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.AsyncSearchGet;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_async_search/{id}</summary>
        public GetRequest(Elastic.Clients.Elasticsearch.Id id) : base(r => r.Required("id", id))
		{
		}

		[JsonIgnore]
		public Elastic.Clients.Elasticsearch.Time? KeepAlive { get => Q<Elastic.Clients.Elasticsearch.Time?>("keep_alive"); set => Q("keep_alive", value); }

		[JsonIgnore]
		public bool? TypedKeys { get => Q<bool?>("typed_keys"); set => Q("typed_keys", value); }

		[JsonIgnore]
		public Elastic.Clients.Elasticsearch.Time? WaitForCompletionTimeout { get => Q<Elastic.Clients.Elasticsearch.Time?>("wait_for_completion_timeout"); set => Q("wait_for_completion_timeout", value); }
	}

	[ConvertAs(typeof(StatusRequest))]
	public partial interface IStatusRequest : IRequest<StatusRequestParameters>
	{
	}

	public partial class StatusRequest : PlainRequestBase<StatusRequestParameters>, IStatusRequest
	{
		protected IStatusRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.AsyncSearchStatus;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_async_search/status/{id}</summary>
        public StatusRequest(Elastic.Clients.Elasticsearch.Id id) : base(r => r.Required("id", id))
		{
		}
	}

	[ConvertAs(typeof(SubmitRequest))]
	public partial interface ISubmitRequest : IRequest<SubmitRequestParameters>
	{
		Dictionary<string, Elastic.Clients.Elasticsearch.Aggregations.AggregationContainer>? Aggs { get; set; }

		bool? AllowNoIndices { get; set; }

		bool? AllowPartialSearchResults { get; set; }

		string? Analyzer { get; set; }

		bool? AnalyzeWildcard { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.FieldCollapse? Collapse { get; set; }

		Elastic.Clients.Elasticsearch.DefaultOperator? DefaultOperator { get; set; }

		string? Df { get; set; }

		Elastic.Clients.Elasticsearch.Fields? DocvalueFields { get; set; }

		Elastic.Clients.Elasticsearch.ExpandWildcards? ExpandWildcards { get; set; }

		bool? Explain { get; set; }

		int? From { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.Highlight? Highlight { get; set; }

		bool? IgnoreThrottled { get; set; }

		bool? IgnoreUnavailable { get; set; }

		IEnumerable<Dictionary<Elastic.Clients.Elasticsearch.IndexName, double>>? IndicesBoost { get; set; }

		Elastic.Clients.Elasticsearch.Time? KeepAlive { get; set; }

		bool? Lenient { get; set; }

		long? MaxConcurrentShardRequests { get; set; }

		double? MinScore { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? PostFilter { get; set; }

		string? Preference { get; set; }

		bool? Profile { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.PointInTimeReference? Pit { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? Query { get; set; }

		string? QueryOnQueryString { get; set; }

		bool? RequestCache { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Global.Search.Rescore>? Rescore { get; set; }

		Elastic.Clients.Elasticsearch.Routing? Routing { get; set; }

		Dictionary<string, Elastic.Clients.Elasticsearch.ScriptField>? ScriptFields { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.SortResults? SearchAfter { get; set; }

		Elastic.Clients.Elasticsearch.SearchType? SearchType { get; set; }

		bool? SequenceNumberPrimaryTerm { get; set; }

		int? Size { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.Sort? Sort { get; set; }

		Union<bool, Elastic.Clients.Elasticsearch.Global.Search.SourceFilter>? Source { get; set; }

		IEnumerable<string>? Stats { get; set; }

		Elastic.Clients.Elasticsearch.Fields? StoredFields { get; set; }

		Dictionary<string, Elastic.Clients.Elasticsearch.Global.Search.SuggestContainer>? Suggest { get; set; }

		Elastic.Clients.Elasticsearch.Field? SuggestField { get; set; }

		Elastic.Clients.Elasticsearch.SuggestMode? SuggestMode { get; set; }

		long? SuggestSize { get; set; }

		string? SuggestText { get; set; }

		long? TerminateAfter { get; set; }

		string? Timeout { get; set; }

		bool? TrackScores { get; set; }

		bool? TrackTotalHits { get; set; }

		bool? Version { get; set; }

		IEnumerable<Union<Elastic.Clients.Elasticsearch.Field, Elastic.Clients.Elasticsearch.DateField>>? Fields { get; set; }
	}

	public partial class SubmitRequest : PlainRequestBase<SubmitRequestParameters>, ISubmitRequest
	{
		protected ISubmitRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.AsyncSearchSubmit;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => Aggs is null && AllowNoIndices is null && AllowPartialSearchResults is null && Analyzer is null && AnalyzeWildcard is null && Collapse is null && DefaultOperator is null && Df is null && DocvalueFields is null && Explain is null && From is null && Highlight is null && IgnoreThrottled is null && IgnoreUnavailable is null && IndicesBoost is null && KeepAlive is null && Lenient is null && MaxConcurrentShardRequests is null && MinScore is null && PostFilter is null && Preference is null && Profile is null && Pit is null && Query is null && QueryOnQueryString is null && RequestCache is null && Rescore is null && ScriptFields is null && SearchAfter is null && SearchType is null && SequenceNumberPrimaryTerm is null && Size is null && Source is null && Stats is null && StoredFields is null && Suggest is null && SuggestField is null && SuggestMode is null && SuggestSize is null && SuggestText is null && TerminateAfter is null && Timeout is null && TrackScores is null && TrackTotalHits is null && Version is null;

		///<summary>/_async_search</summary>
        public SubmitRequest() : base()
		{
		}

		///<summary>/{index}/_async_search</summary>
        public SubmitRequest(Elastic.Clients.Elasticsearch.Indices? index) : base(r => r.Optional("index", index))
		{
		}

		[JsonIgnore]
		public long? BatchedReduceSize { get => Q<long?>("batched_reduce_size"); set => Q("batched_reduce_size", value); }

		[JsonIgnore]
		public Elastic.Clients.Elasticsearch.Time? WaitForCompletionTimeout { get => Q<Elastic.Clients.Elasticsearch.Time?>("wait_for_completion_timeout"); set => Q("wait_for_completion_timeout", value); }

		[JsonIgnore]
		public bool? KeepOnCompletion { get => Q<bool?>("keep_on_completion"); set => Q("keep_on_completion", value); }

		[JsonIgnore]
		public bool? TypedKeys { get => Q<bool?>("typed_keys"); set => Q("typed_keys", value); }

		[JsonPropertyName("aggs")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.Aggregations.AggregationContainer>? Aggs { get; set; }

		[JsonPropertyName("allow_no_indices")]
		public bool? AllowNoIndices { get; set; }

		[JsonPropertyName("allow_partial_search_results")]
		public bool? AllowPartialSearchResults { get; set; }

		[JsonPropertyName("analyzer")]
		public string? Analyzer { get; set; }

		[JsonPropertyName("analyze_wildcard")]
		public bool? AnalyzeWildcard { get; set; }

		[JsonPropertyName("collapse")]
		public Elastic.Clients.Elasticsearch.Global.Search.FieldCollapse? Collapse { get; set; }

		[JsonPropertyName("default_operator")]
		public Elastic.Clients.Elasticsearch.DefaultOperator? DefaultOperator { get; set; }

		[JsonPropertyName("df")]
		public string? Df { get; set; }

		[JsonPropertyName("docvalue_fields")]
		public Elastic.Clients.Elasticsearch.Fields? DocvalueFields { get; set; }

		[JsonPropertyName("expand_wildcards")]
		public Elastic.Clients.Elasticsearch.ExpandWildcards? ExpandWildcards { get; set; }

		[JsonPropertyName("explain")]
		public bool? Explain { get; set; }

		[JsonPropertyName("from")]
		public int? From { get; set; }

		[JsonPropertyName("highlight")]
		public Elastic.Clients.Elasticsearch.Global.Search.Highlight? Highlight { get; set; }

		[JsonPropertyName("ignore_throttled")]
		public bool? IgnoreThrottled { get; set; }

		[JsonPropertyName("ignore_unavailable")]
		public bool? IgnoreUnavailable { get; set; }

		[JsonPropertyName("indices_boost")]
		public IEnumerable<Dictionary<Elastic.Clients.Elasticsearch.IndexName, double>>? IndicesBoost { get; set; }

		[JsonPropertyName("keep_alive")]
		public Elastic.Clients.Elasticsearch.Time? KeepAlive { get; set; }

		[JsonPropertyName("lenient")]
		public bool? Lenient { get; set; }

		[JsonPropertyName("max_concurrent_shard_requests")]
		public long? MaxConcurrentShardRequests { get; set; }

		[JsonPropertyName("min_score")]
		public double? MinScore { get; set; }

		[JsonPropertyName("post_filter")]
		public Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? PostFilter { get; set; }

		[JsonPropertyName("preference")]
		public string? Preference { get; set; }

		[JsonPropertyName("profile")]
		public bool? Profile { get; set; }

		[JsonPropertyName("pit")]
		public Elastic.Clients.Elasticsearch.Global.Search.PointInTimeReference? Pit { get; set; }

		[JsonPropertyName("query")]
		public Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? Query { get; set; }

		[JsonPropertyName("query_on_query_string")]
		public string? QueryOnQueryString { get; set; }

		[JsonPropertyName("request_cache")]
		public bool? RequestCache { get; set; }

		[JsonPropertyName("rescore")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Global.Search.Rescore>? Rescore { get; set; }

		[JsonPropertyName("routing")]
		public Elastic.Clients.Elasticsearch.Routing? Routing { get; set; }

		[JsonPropertyName("script_fields")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.ScriptField>? ScriptFields { get; set; }

		[JsonPropertyName("search_after")]
		public Elastic.Clients.Elasticsearch.Global.Search.SortResults? SearchAfter { get; set; }

		[JsonPropertyName("search_type")]
		public Elastic.Clients.Elasticsearch.SearchType? SearchType { get; set; }

		[JsonPropertyName("sequence_number_primary_term")]
		public bool? SequenceNumberPrimaryTerm { get; set; }

		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonPropertyName("sort")]
		public Elastic.Clients.Elasticsearch.Global.Search.Sort? Sort { get; set; }

		[JsonPropertyName("_source")]
		public Union<bool, Elastic.Clients.Elasticsearch.Global.Search.SourceFilter>? Source { get; set; }

		[JsonPropertyName("stats")]
		public IEnumerable<string>? Stats { get; set; }

		[JsonPropertyName("stored_fields")]
		public Elastic.Clients.Elasticsearch.Fields? StoredFields { get; set; }

		[JsonPropertyName("suggest")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.Global.Search.SuggestContainer>? Suggest { get; set; }

		[JsonPropertyName("suggest_field")]
		public Elastic.Clients.Elasticsearch.Field? SuggestField { get; set; }

		[JsonPropertyName("suggest_mode")]
		public Elastic.Clients.Elasticsearch.SuggestMode? SuggestMode { get; set; }

		[JsonPropertyName("suggest_size")]
		public long? SuggestSize { get; set; }

		[JsonPropertyName("suggest_text")]
		public string? SuggestText { get; set; }

		[JsonPropertyName("terminate_after")]
		public long? TerminateAfter { get; set; }

		[JsonPropertyName("timeout")]
		public string? Timeout { get; set; }

		[JsonPropertyName("track_scores")]
		public bool? TrackScores { get; set; }

		[JsonPropertyName("track_total_hits")]
		public bool? TrackTotalHits { get; set; }

		[JsonPropertyName("version")]
		public bool? Version { get; set; }

		[JsonPropertyName("fields")]
		public IEnumerable<Union<Elastic.Clients.Elasticsearch.Field, Elastic.Clients.Elasticsearch.DateField>>? Fields { get; set; }
	}
}
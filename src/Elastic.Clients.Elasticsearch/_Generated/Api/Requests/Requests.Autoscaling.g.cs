// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Autoscaling
{
	[ConvertAs(typeof(DeleteAutoscalingPolicyRequest))]
	public partial interface IDeleteAutoscalingPolicyRequest : IRequest<DeleteAutoscalingPolicyRequestParameters>
	{
	}

	public partial class DeleteAutoscalingPolicyRequest : PlainRequestBase<DeleteAutoscalingPolicyRequestParameters>, IDeleteAutoscalingPolicyRequest
	{
		protected IDeleteAutoscalingPolicyRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.AutoscalingDeleteAutoscalingPolicy;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_autoscaling/policy/{name}</summary>
        public DeleteAutoscalingPolicyRequest(Elastic.Clients.Elasticsearch.Name name) : base(r => r.Required("name", name))
		{
		}
	}

	[ConvertAs(typeof(GetAutoscalingCapacityRequest))]
	public partial interface IGetAutoscalingCapacityRequest : IRequest<GetAutoscalingCapacityRequestParameters>
	{
	}

	public partial class GetAutoscalingCapacityRequest : PlainRequestBase<GetAutoscalingCapacityRequestParameters>, IGetAutoscalingCapacityRequest
	{
		protected IGetAutoscalingCapacityRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.AutoscalingGetAutoscalingCapacity;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;

		///<summary>/_autoscaling/capacity</summary>
        public GetAutoscalingCapacityRequest() : base()
		{
		}
	}

	[ConvertAs(typeof(GetAutoscalingPolicyRequest))]
	public partial interface IGetAutoscalingPolicyRequest : IRequest<GetAutoscalingPolicyRequestParameters>
	{
	}

	public partial class GetAutoscalingPolicyRequest : PlainRequestBase<GetAutoscalingPolicyRequestParameters>, IGetAutoscalingPolicyRequest
	{
		protected IGetAutoscalingPolicyRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.AutoscalingGetAutoscalingPolicy;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_autoscaling/policy/{name}</summary>
        public GetAutoscalingPolicyRequest(Elastic.Clients.Elasticsearch.Name name) : base(r => r.Required("name", name))
		{
		}
	}

	[ConvertAs(typeof(PutAutoscalingPolicyRequest))]
	public partial interface IPutAutoscalingPolicyRequest : IRequest<PutAutoscalingPolicyRequestParameters>
	{
	}

	public partial class PutAutoscalingPolicyRequest : PlainRequestBase<PutAutoscalingPolicyRequestParameters>, IPutAutoscalingPolicyRequest
	{
		protected IPutAutoscalingPolicyRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.AutoscalingPutAutoscalingPolicy;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => false;
		protected override bool CanBeEmpty => false;
		protected override bool IsEmpty => false;

		///<summary>/_autoscaling/policy/{name}</summary>
        public PutAutoscalingPolicyRequest(Elastic.Clients.Elasticsearch.Name name) : base(r => r.Required("name", name))
		{
		}
	}
}
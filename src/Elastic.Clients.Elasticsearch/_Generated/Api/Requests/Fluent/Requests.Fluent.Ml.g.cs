// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System.Collections.Generic;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Ml
{
	public partial class CloseJobDescriptor : RequestDescriptorBase<CloseJobDescriptor, CloseJobRequestParameters, ICloseJobRequest>, ICloseJobRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningCloseJob;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/_close</summary>
        public CloseJobDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		public CloseJobDescriptor AllowNoJobs(bool? allowNoJobs = true) => Qs("allow_no_jobs", allowNoJobs);
		public CloseJobDescriptor Force(bool? force = true) => Qs("force", force);
		public CloseJobDescriptor Timeout(Elastic.Clients.Elasticsearch.Time? timeout) => Qs("timeout", timeout);
	}

	public partial class DeleteCalendarDescriptor : RequestDescriptorBase<DeleteCalendarDescriptor, DeleteCalendarRequestParameters, IDeleteCalendarRequest>, IDeleteCalendarRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningDeleteCalendar;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		///<summary>/_ml/calendars/{calendar_id}</summary>
        public DeleteCalendarDescriptor(Elastic.Clients.Elasticsearch.Id calendar_id) : base(r => r.Required("calendar_id", calendar_id))
		{
		}
	}

	public partial class DeleteCalendarEventDescriptor : RequestDescriptorBase<DeleteCalendarEventDescriptor, DeleteCalendarEventRequestParameters, IDeleteCalendarEventRequest>, IDeleteCalendarEventRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningDeleteCalendarEvent;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		///<summary>/_ml/calendars/{calendar_id}/events/{event_id}</summary>
        public DeleteCalendarEventDescriptor(Elastic.Clients.Elasticsearch.Id calendar_id, Elastic.Clients.Elasticsearch.Id event_id) : base(r => r.Required("calendar_id", calendar_id).Required("event_id", event_id))
		{
		}
	}

	public partial class DeleteCalendarJobDescriptor : RequestDescriptorBase<DeleteCalendarJobDescriptor, DeleteCalendarJobRequestParameters, IDeleteCalendarJobRequest>, IDeleteCalendarJobRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningDeleteCalendarJob;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		///<summary>/_ml/calendars/{calendar_id}/jobs/{job_id}</summary>
        public DeleteCalendarJobDescriptor(Elastic.Clients.Elasticsearch.Id calendar_id, Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("calendar_id", calendar_id).Required("job_id", job_id))
		{
		}
	}

	public partial class DeleteDataFrameAnalyticsDescriptor : RequestDescriptorBase<DeleteDataFrameAnalyticsDescriptor, DeleteDataFrameAnalyticsRequestParameters, IDeleteDataFrameAnalyticsRequest>, IDeleteDataFrameAnalyticsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningDeleteDataFrameAnalytics;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		///<summary>/_ml/data_frame/analytics/{id}</summary>
        public DeleteDataFrameAnalyticsDescriptor(Elastic.Clients.Elasticsearch.Id id) : base(r => r.Required("id", id))
		{
		}

		public DeleteDataFrameAnalyticsDescriptor Force(bool? force = true) => Qs("force", force);
		public DeleteDataFrameAnalyticsDescriptor Timeout(Elastic.Clients.Elasticsearch.Time? timeout) => Qs("timeout", timeout);
	}

	public partial class DeleteDatafeedDescriptor : RequestDescriptorBase<DeleteDatafeedDescriptor, DeleteDatafeedRequestParameters, IDeleteDatafeedRequest>, IDeleteDatafeedRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningDeleteDatafeed;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		///<summary>/_ml/datafeeds/{datafeed_id}</summary>
        public DeleteDatafeedDescriptor(Elastic.Clients.Elasticsearch.Id datafeed_id) : base(r => r.Required("datafeed_id", datafeed_id))
		{
		}

		public DeleteDatafeedDescriptor Force(bool? force = true) => Qs("force", force);
	}

	public partial class DeleteExpiredDataDescriptor : RequestDescriptorBase<DeleteExpiredDataDescriptor, DeleteExpiredDataRequestParameters, IDeleteExpiredDataRequest>, IDeleteExpiredDataRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningDeleteExpiredData;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		///<summary>/_ml/_delete_expired_data/{job_id}</summary>
        public DeleteExpiredDataDescriptor(Elastic.Clients.Elasticsearch.Id? job_id) : base(r => r.Optional("job_id", job_id))
		{
		}

		///<summary>/_ml/_delete_expired_data</summary>
        public DeleteExpiredDataDescriptor() : base()
		{
		}

		public DeleteExpiredDataDescriptor RequestsPerSecond(float? requestsPerSecond) => Qs("requests_per_second", requestsPerSecond);
		public DeleteExpiredDataDescriptor Timeout(Elastic.Clients.Elasticsearch.Time? timeout) => Qs("timeout", timeout);
	}

	public partial class DeleteFilterDescriptor : RequestDescriptorBase<DeleteFilterDescriptor, DeleteFilterRequestParameters, IDeleteFilterRequest>, IDeleteFilterRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningDeleteFilter;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		///<summary>/_ml/filters/{filter_id}</summary>
        public DeleteFilterDescriptor(Elastic.Clients.Elasticsearch.Id filter_id) : base(r => r.Required("filter_id", filter_id))
		{
		}
	}

	public partial class DeleteForecastDescriptor : RequestDescriptorBase<DeleteForecastDescriptor, DeleteForecastRequestParameters, IDeleteForecastRequest>, IDeleteForecastRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningDeleteForecast;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/_forecast</summary>
        public DeleteForecastDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		///<summary>/_ml/anomaly_detectors/{job_id}/_forecast/{forecast_id}</summary>
        public DeleteForecastDescriptor(Elastic.Clients.Elasticsearch.Id job_id, Elastic.Clients.Elasticsearch.Id? forecast_id) : base(r => r.Required("job_id", job_id).Optional("forecast_id", forecast_id))
		{
		}

		public DeleteForecastDescriptor AllowNoForecasts(bool? allowNoForecasts = true) => Qs("allow_no_forecasts", allowNoForecasts);
		public DeleteForecastDescriptor Timeout(Elastic.Clients.Elasticsearch.Time? timeout) => Qs("timeout", timeout);
	}

	public partial class DeleteJobDescriptor : RequestDescriptorBase<DeleteJobDescriptor, DeleteJobRequestParameters, IDeleteJobRequest>, IDeleteJobRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningDeleteJob;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}</summary>
        public DeleteJobDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		public DeleteJobDescriptor Force(bool? force = true) => Qs("force", force);
		public DeleteJobDescriptor WaitForCompletion(bool? waitForCompletion = true) => Qs("wait_for_completion", waitForCompletion);
	}

	public partial class DeleteModelSnapshotDescriptor : RequestDescriptorBase<DeleteModelSnapshotDescriptor, DeleteModelSnapshotRequestParameters, IDeleteModelSnapshotRequest>, IDeleteModelSnapshotRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningDeleteModelSnapshot;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}</summary>
        public DeleteModelSnapshotDescriptor(Elastic.Clients.Elasticsearch.Id job_id, Elastic.Clients.Elasticsearch.Id snapshot_id) : base(r => r.Required("job_id", job_id).Required("snapshot_id", snapshot_id))
		{
		}
	}

	public partial class DeleteTrainedModelDescriptor : RequestDescriptorBase<DeleteTrainedModelDescriptor, DeleteTrainedModelRequestParameters, IDeleteTrainedModelRequest>, IDeleteTrainedModelRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningDeleteTrainedModel;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		///<summary>/_ml/trained_models/{model_id}</summary>
        public DeleteTrainedModelDescriptor(Elastic.Clients.Elasticsearch.Id model_id) : base(r => r.Required("model_id", model_id))
		{
		}
	}

	public partial class DeleteTrainedModelAliasDescriptor : RequestDescriptorBase<DeleteTrainedModelAliasDescriptor, DeleteTrainedModelAliasRequestParameters, IDeleteTrainedModelAliasRequest>, IDeleteTrainedModelAliasRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningDeleteTrainedModelAlias;
		protected override HttpMethod HttpMethod => HttpMethod.DELETE;
		protected override bool SupportsBody => false;
		///<summary>/_ml/trained_models/{model_id}/model_aliases/{model_alias}</summary>
        public DeleteTrainedModelAliasDescriptor(Elastic.Clients.Elasticsearch.Id model_id, Elastic.Clients.Elasticsearch.Name model_alias) : base(r => r.Required("model_id", model_id).Required("model_alias", model_alias))
		{
		}
	}

	public partial class EstimateModelMemoryDescriptor : RequestDescriptorBase<EstimateModelMemoryDescriptor, EstimateModelMemoryRequestParameters, IEstimateModelMemoryRequest>, IEstimateModelMemoryRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningEstimateModelMemory;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/_estimate_model_memory</summary>
        public EstimateModelMemoryDescriptor() : base()
		{
		}

		Elastic.Clients.Elasticsearch.Ml.AnalysisConfig? IEstimateModelMemoryRequest.AnalysisConfig { get; set; }

		Dictionary<Elastic.Clients.Elasticsearch.Field, long>? IEstimateModelMemoryRequest.MaxBucketCardinality { get; set; }

		Dictionary<Elastic.Clients.Elasticsearch.Field, long>? IEstimateModelMemoryRequest.OverallCardinality { get; set; }

		public EstimateModelMemoryDescriptor AnalysisConfig(Elastic.Clients.Elasticsearch.Ml.AnalysisConfig? analysisConfig) => Assign(analysisConfig, (a, v) => a.AnalysisConfig = v);
		public EstimateModelMemoryDescriptor MaxBucketCardinality(Dictionary<Elastic.Clients.Elasticsearch.Field, long>? maxBucketCardinality) => Assign(maxBucketCardinality, (a, v) => a.MaxBucketCardinality = v);
		public EstimateModelMemoryDescriptor OverallCardinality(Dictionary<Elastic.Clients.Elasticsearch.Field, long>? overallCardinality) => Assign(overallCardinality, (a, v) => a.OverallCardinality = v);
	}

	public partial class EvaluateDataFrameDescriptor : RequestDescriptorBase<EvaluateDataFrameDescriptor, EvaluateDataFrameRequestParameters, IEvaluateDataFrameRequest>, IEvaluateDataFrameRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningEvaluateDataFrame;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/data_frame/_evaluate</summary>
        public EvaluateDataFrameDescriptor() : base()
		{
		}

		Elastic.Clients.Elasticsearch.Ml.DataframeEvaluationContainer IEvaluateDataFrameRequest.Evaluation { get; set; }

		Elastic.Clients.Elasticsearch.IndexName IEvaluateDataFrameRequest.Index { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? IEvaluateDataFrameRequest.Query { get; set; }

		public EvaluateDataFrameDescriptor Evaluation(Elastic.Clients.Elasticsearch.Ml.DataframeEvaluationContainer evaluation) => Assign(evaluation, (a, v) => a.Evaluation = v);
		public EvaluateDataFrameDescriptor Index(Elastic.Clients.Elasticsearch.IndexName index) => Assign(index, (a, v) => a.Index = v);
		public EvaluateDataFrameDescriptor Query(Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? query) => Assign(query, (a, v) => a.Query = v);
	}

	public partial class ExplainDataFrameAnalyticsDescriptor : RequestDescriptorBase<ExplainDataFrameAnalyticsDescriptor, ExplainDataFrameAnalyticsRequestParameters, IExplainDataFrameAnalyticsRequest>, IExplainDataFrameAnalyticsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningExplainDataFrameAnalytics;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/data_frame/analytics/_explain</summary>
        public ExplainDataFrameAnalyticsDescriptor() : base()
		{
		}

		///<summary>/_ml/data_frame/analytics/{id}/_explain</summary>
        public ExplainDataFrameAnalyticsDescriptor(Elastic.Clients.Elasticsearch.Id? id) : base(r => r.Optional("id", id))
		{
		}

		Elastic.Clients.Elasticsearch.Ml.DataframeAnalyticsSource? IExplainDataFrameAnalyticsRequest.Source { get; set; }

		Elastic.Clients.Elasticsearch.Ml.DataframeAnalyticsDestination? IExplainDataFrameAnalyticsRequest.Dest { get; set; }

		Elastic.Clients.Elasticsearch.Ml.DataframeAnalysisContainer IExplainDataFrameAnalyticsRequest.Analysis { get; set; }

		string? IExplainDataFrameAnalyticsRequest.Description { get; set; }

		string? IExplainDataFrameAnalyticsRequest.ModelMemoryLimit { get; set; }

		int? IExplainDataFrameAnalyticsRequest.MaxNumThreads { get; set; }

		Elastic.Clients.Elasticsearch.Ml.DataframeAnalysisAnalyzedFields? IExplainDataFrameAnalyticsRequest.AnalyzedFields { get; set; }

		bool? IExplainDataFrameAnalyticsRequest.AllowLazyStart { get; set; }

		public ExplainDataFrameAnalyticsDescriptor Source(Elastic.Clients.Elasticsearch.Ml.DataframeAnalyticsSource? source) => Assign(source, (a, v) => a.Source = v);
		public ExplainDataFrameAnalyticsDescriptor Dest(Elastic.Clients.Elasticsearch.Ml.DataframeAnalyticsDestination? dest) => Assign(dest, (a, v) => a.Dest = v);
		public ExplainDataFrameAnalyticsDescriptor Analysis(Elastic.Clients.Elasticsearch.Ml.DataframeAnalysisContainer analysis) => Assign(analysis, (a, v) => a.Analysis = v);
		public ExplainDataFrameAnalyticsDescriptor Description(string? description) => Assign(description, (a, v) => a.Description = v);
		public ExplainDataFrameAnalyticsDescriptor ModelMemoryLimit(string? modelMemoryLimit) => Assign(modelMemoryLimit, (a, v) => a.ModelMemoryLimit = v);
		public ExplainDataFrameAnalyticsDescriptor MaxNumThreads(int? maxNumThreads) => Assign(maxNumThreads, (a, v) => a.MaxNumThreads = v);
		public ExplainDataFrameAnalyticsDescriptor AnalyzedFields(Elastic.Clients.Elasticsearch.Ml.DataframeAnalysisAnalyzedFields? analyzedFields) => Assign(analyzedFields, (a, v) => a.AnalyzedFields = v);
		public ExplainDataFrameAnalyticsDescriptor AllowLazyStart(bool? allowLazyStart = true) => Assign(allowLazyStart, (a, v) => a.AllowLazyStart = v);
	}

	public partial class FlushJobDescriptor : RequestDescriptorBase<FlushJobDescriptor, FlushJobRequestParameters, IFlushJobRequest>, IFlushJobRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningFlushJob;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/_flush</summary>
        public FlushJobDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		Elastic.Clients.Elasticsearch.DateString? IFlushJobRequest.AdvanceTime { get; set; }

		bool? IFlushJobRequest.CalcInterim { get; set; }

		Elastic.Clients.Elasticsearch.DateString? IFlushJobRequest.End { get; set; }

		Elastic.Clients.Elasticsearch.DateString? IFlushJobRequest.Start { get; set; }

		public FlushJobDescriptor SkipTime(string? skipTime) => Qs("skip_time", skipTime);
		public FlushJobDescriptor AdvanceTime(Elastic.Clients.Elasticsearch.DateString? advanceTime) => Assign(advanceTime, (a, v) => a.AdvanceTime = v);
		public FlushJobDescriptor CalcInterim(bool? calcInterim = true) => Assign(calcInterim, (a, v) => a.CalcInterim = v);
		public FlushJobDescriptor End(Elastic.Clients.Elasticsearch.DateString? end) => Assign(end, (a, v) => a.End = v);
		public FlushJobDescriptor Start(Elastic.Clients.Elasticsearch.DateString? start) => Assign(start, (a, v) => a.Start = v);
	}

	public partial class ForecastDescriptor : RequestDescriptorBase<ForecastDescriptor, ForecastRequestParameters, IForecastRequest>, IForecastRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningForecast;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/_forecast</summary>
        public ForecastDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		Elastic.Clients.Elasticsearch.Time? IForecastRequest.Duration { get; set; }

		Elastic.Clients.Elasticsearch.Time? IForecastRequest.ExpiresIn { get; set; }

		public ForecastDescriptor Duration(Elastic.Clients.Elasticsearch.Time? duration) => Assign(duration, (a, v) => a.Duration = v);
		public ForecastDescriptor ExpiresIn(Elastic.Clients.Elasticsearch.Time? expiresIn) => Assign(expiresIn, (a, v) => a.ExpiresIn = v);
	}

	public partial class GetBucketsDescriptor : RequestDescriptorBase<GetBucketsDescriptor, GetBucketsRequestParameters, IGetBucketsRequest>, IGetBucketsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetBuckets;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/results/buckets/{timestamp}</summary>
        public GetBucketsDescriptor(Elastic.Clients.Elasticsearch.Id job_id, Elastic.Clients.Elasticsearch.Timestamp? timestamp) : base(r => r.Required("job_id", job_id).Optional("timestamp", timestamp))
		{
		}

		///<summary>/_ml/anomaly_detectors/{job_id}/results/buckets</summary>
        public GetBucketsDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		double? IGetBucketsRequest.AnomalyScore { get; set; }

		bool? IGetBucketsRequest.Expand { get; set; }

		Elastic.Clients.Elasticsearch.Ml.Page? IGetBucketsRequest.Page { get; set; }

		public GetBucketsDescriptor From(int? from) => Qs("from", from);
		public GetBucketsDescriptor Size(int? size) => Qs("size", size);
		public GetBucketsDescriptor ExcludeInterim(bool? excludeInterim = true) => Qs("exclude_interim", excludeInterim);
		public GetBucketsDescriptor Sort(Elastic.Clients.Elasticsearch.Field? sort) => Qs("sort", sort);
		public GetBucketsDescriptor Desc(bool? desc = true) => Qs("desc", desc);
		public GetBucketsDescriptor Start(Elastic.Clients.Elasticsearch.DateString? start) => Qs("start", start);
		public GetBucketsDescriptor End(Elastic.Clients.Elasticsearch.DateString? end) => Qs("end", end);
		public GetBucketsDescriptor AnomalyScore(double? anomalyScore) => Assign(anomalyScore, (a, v) => a.AnomalyScore = v);
		public GetBucketsDescriptor Expand(bool? expand = true) => Assign(expand, (a, v) => a.Expand = v);
		public GetBucketsDescriptor Page(Elastic.Clients.Elasticsearch.Ml.Page? page) => Assign(page, (a, v) => a.Page = v);
	}

	public partial class GetCalendarEventsDescriptor : RequestDescriptorBase<GetCalendarEventsDescriptor, GetCalendarEventsRequestParameters, IGetCalendarEventsRequest>, IGetCalendarEventsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetCalendarEvents;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/_ml/calendars/{calendar_id}/events</summary>
        public GetCalendarEventsDescriptor(Elastic.Clients.Elasticsearch.Id calendar_id) : base(r => r.Required("calendar_id", calendar_id))
		{
		}

		public GetCalendarEventsDescriptor JobId(Elastic.Clients.Elasticsearch.Id? jobId) => Qs("job_id", jobId);
		public GetCalendarEventsDescriptor End(Elastic.Clients.Elasticsearch.DateString? end) => Qs("end", end);
		public GetCalendarEventsDescriptor From(int? from) => Qs("from", from);
		public GetCalendarEventsDescriptor Start(string? start) => Qs("start", start);
		public GetCalendarEventsDescriptor Size(int? size) => Qs("size", size);
	}

	public partial class GetCalendarsDescriptor : RequestDescriptorBase<GetCalendarsDescriptor, GetCalendarsRequestParameters, IGetCalendarsRequest>, IGetCalendarsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetCalendars;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/calendars</summary>
        public GetCalendarsDescriptor() : base()
		{
		}

		///<summary>/_ml/calendars/{calendar_id}</summary>
        public GetCalendarsDescriptor(Elastic.Clients.Elasticsearch.Id? calendar_id) : base(r => r.Optional("calendar_id", calendar_id))
		{
		}

		Elastic.Clients.Elasticsearch.Ml.Page? IGetCalendarsRequest.Page { get; set; }

		public GetCalendarsDescriptor From(int? from) => Qs("from", from);
		public GetCalendarsDescriptor Size(int? size) => Qs("size", size);
		public GetCalendarsDescriptor Page(Elastic.Clients.Elasticsearch.Ml.Page? page) => Assign(page, (a, v) => a.Page = v);
	}

	public partial class GetCategoriesDescriptor : RequestDescriptorBase<GetCategoriesDescriptor, GetCategoriesRequestParameters, IGetCategoriesRequest>, IGetCategoriesRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetCategories;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/results/categories/{category_id}</summary>
        public GetCategoriesDescriptor(Elastic.Clients.Elasticsearch.Id job_id, Elastic.Clients.Elasticsearch.CategoryId? category_id) : base(r => r.Required("job_id", job_id).Optional("category_id", category_id))
		{
		}

		///<summary>/_ml/anomaly_detectors/{job_id}/results/categories/</summary>
        public GetCategoriesDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		Elastic.Clients.Elasticsearch.Ml.Page? IGetCategoriesRequest.Page { get; set; }

		public GetCategoriesDescriptor From(int? from) => Qs("from", from);
		public GetCategoriesDescriptor Size(int? size) => Qs("size", size);
		public GetCategoriesDescriptor PartitionFieldValue(string? partitionFieldValue) => Qs("partition_field_value", partitionFieldValue);
		public GetCategoriesDescriptor Page(Elastic.Clients.Elasticsearch.Ml.Page? page) => Assign(page, (a, v) => a.Page = v);
	}

	public partial class GetDataFrameAnalyticsDescriptor : RequestDescriptorBase<GetDataFrameAnalyticsDescriptor, GetDataFrameAnalyticsRequestParameters, IGetDataFrameAnalyticsRequest>, IGetDataFrameAnalyticsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetDataFrameAnalytics;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/_ml/data_frame/analytics/{id}</summary>
        public GetDataFrameAnalyticsDescriptor(Elastic.Clients.Elasticsearch.Id? id) : base(r => r.Optional("id", id))
		{
		}

		///<summary>/_ml/data_frame/analytics</summary>
        public GetDataFrameAnalyticsDescriptor() : base()
		{
		}

		public GetDataFrameAnalyticsDescriptor AllowNoMatch(bool? allowNoMatch = true) => Qs("allow_no_match", allowNoMatch);
		public GetDataFrameAnalyticsDescriptor From(int? from) => Qs("from", from);
		public GetDataFrameAnalyticsDescriptor Size(int? size) => Qs("size", size);
		public GetDataFrameAnalyticsDescriptor ExcludeGenerated(bool? excludeGenerated = true) => Qs("exclude_generated", excludeGenerated);
	}

	public partial class GetDataFrameAnalyticsStatsDescriptor : RequestDescriptorBase<GetDataFrameAnalyticsStatsDescriptor, GetDataFrameAnalyticsStatsRequestParameters, IGetDataFrameAnalyticsStatsRequest>, IGetDataFrameAnalyticsStatsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetDataFrameAnalyticsStats;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/_ml/data_frame/analytics/_stats</summary>
        public GetDataFrameAnalyticsStatsDescriptor() : base()
		{
		}

		///<summary>/_ml/data_frame/analytics/{id}/_stats</summary>
        public GetDataFrameAnalyticsStatsDescriptor(Elastic.Clients.Elasticsearch.Id? id) : base(r => r.Optional("id", id))
		{
		}

		public GetDataFrameAnalyticsStatsDescriptor AllowNoMatch(bool? allowNoMatch = true) => Qs("allow_no_match", allowNoMatch);
		public GetDataFrameAnalyticsStatsDescriptor From(int? from) => Qs("from", from);
		public GetDataFrameAnalyticsStatsDescriptor Size(int? size) => Qs("size", size);
		public GetDataFrameAnalyticsStatsDescriptor Verbose(bool? verbose = true) => Qs("verbose", verbose);
	}

	public partial class GetDatafeedStatsDescriptor : RequestDescriptorBase<GetDatafeedStatsDescriptor, GetDatafeedStatsRequestParameters, IGetDatafeedStatsRequest>, IGetDatafeedStatsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetDatafeedStats;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/_ml/datafeeds/{datafeed_id}/_stats</summary>
        public GetDatafeedStatsDescriptor(Elastic.Clients.Elasticsearch.Ids? datafeed_id) : base(r => r.Optional("datafeed_id", datafeed_id))
		{
		}

		///<summary>/_ml/datafeeds/_stats</summary>
        public GetDatafeedStatsDescriptor() : base()
		{
		}

		public GetDatafeedStatsDescriptor AllowNoDatafeeds(bool? allowNoDatafeeds = true) => Qs("allow_no_datafeeds", allowNoDatafeeds);
	}

	public partial class GetDatafeedsDescriptor : RequestDescriptorBase<GetDatafeedsDescriptor, GetDatafeedsRequestParameters, IGetDatafeedsRequest>, IGetDatafeedsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetDatafeeds;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/_ml/datafeeds/{datafeed_id}</summary>
        public GetDatafeedsDescriptor(Elastic.Clients.Elasticsearch.Ids? datafeed_id) : base(r => r.Optional("datafeed_id", datafeed_id))
		{
		}

		///<summary>/_ml/datafeeds</summary>
        public GetDatafeedsDescriptor() : base()
		{
		}

		public GetDatafeedsDescriptor AllowNoDatafeeds(bool? allowNoDatafeeds = true) => Qs("allow_no_datafeeds", allowNoDatafeeds);
		public GetDatafeedsDescriptor ExcludeGenerated(bool? excludeGenerated = true) => Qs("exclude_generated", excludeGenerated);
	}

	public partial class GetFiltersDescriptor : RequestDescriptorBase<GetFiltersDescriptor, GetFiltersRequestParameters, IGetFiltersRequest>, IGetFiltersRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetFilters;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/_ml/filters</summary>
        public GetFiltersDescriptor() : base()
		{
		}

		///<summary>/_ml/filters/{filter_id}</summary>
        public GetFiltersDescriptor(Elastic.Clients.Elasticsearch.Id? filter_id) : base(r => r.Optional("filter_id", filter_id))
		{
		}

		public GetFiltersDescriptor From(int? from) => Qs("from", from);
		public GetFiltersDescriptor Size(int? size) => Qs("size", size);
	}

	public partial class GetInfluencersDescriptor : RequestDescriptorBase<GetInfluencersDescriptor, GetInfluencersRequestParameters, IGetInfluencersRequest>, IGetInfluencersRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetInfluencers;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/results/influencers</summary>
        public GetInfluencersDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		Elastic.Clients.Elasticsearch.Ml.Page? IGetInfluencersRequest.Page { get; set; }

		public GetInfluencersDescriptor Desc(bool? desc = true) => Qs("desc", desc);
		public GetInfluencersDescriptor End(Elastic.Clients.Elasticsearch.DateString? end) => Qs("end", end);
		public GetInfluencersDescriptor ExcludeInterim(bool? excludeInterim = true) => Qs("exclude_interim", excludeInterim);
		public GetInfluencersDescriptor InfluencerScore(double? influencerScore) => Qs("influencer_score", influencerScore);
		public GetInfluencersDescriptor From(int? from) => Qs("from", from);
		public GetInfluencersDescriptor Size(int? size) => Qs("size", size);
		public GetInfluencersDescriptor Sort(Elastic.Clients.Elasticsearch.Field? sort) => Qs("sort", sort);
		public GetInfluencersDescriptor Start(Elastic.Clients.Elasticsearch.DateString? start) => Qs("start", start);
		public GetInfluencersDescriptor Page(Elastic.Clients.Elasticsearch.Ml.Page? page) => Assign(page, (a, v) => a.Page = v);
	}

	public partial class GetJobStatsDescriptor : RequestDescriptorBase<GetJobStatsDescriptor, GetJobStatsRequestParameters, IGetJobStatsRequest>, IGetJobStatsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetJobStats;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/_stats</summary>
        public GetJobStatsDescriptor() : base()
		{
		}

		///<summary>/_ml/anomaly_detectors/{job_id}/_stats</summary>
        public GetJobStatsDescriptor(Elastic.Clients.Elasticsearch.Id? job_id) : base(r => r.Optional("job_id", job_id))
		{
		}

		public GetJobStatsDescriptor AllowNoJobs(bool? allowNoJobs = true) => Qs("allow_no_jobs", allowNoJobs);
	}

	public partial class GetJobsDescriptor : RequestDescriptorBase<GetJobsDescriptor, GetJobsRequestParameters, IGetJobsRequest>, IGetJobsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetJobs;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}</summary>
        public GetJobsDescriptor(Elastic.Clients.Elasticsearch.Ids? job_id) : base(r => r.Optional("job_id", job_id))
		{
		}

		///<summary>/_ml/anomaly_detectors</summary>
        public GetJobsDescriptor() : base()
		{
		}

		public GetJobsDescriptor AllowNoMatch(bool? allowNoMatch = true) => Qs("allow_no_match", allowNoMatch);
		public GetJobsDescriptor AllowNoJobs(bool? allowNoJobs = true) => Qs("allow_no_jobs", allowNoJobs);
		public GetJobsDescriptor ExcludeGenerated(bool? excludeGenerated = true) => Qs("exclude_generated", excludeGenerated);
	}

	public partial class GetModelSnapshotsDescriptor : RequestDescriptorBase<GetModelSnapshotsDescriptor, GetModelSnapshotsRequestParameters, IGetModelSnapshotsRequest>, IGetModelSnapshotsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetModelSnapshots;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}</summary>
        public GetModelSnapshotsDescriptor(Elastic.Clients.Elasticsearch.Id job_id, Elastic.Clients.Elasticsearch.Id? snapshot_id) : base(r => r.Required("job_id", job_id).Optional("snapshot_id", snapshot_id))
		{
		}

		///<summary>/_ml/anomaly_detectors/{job_id}/model_snapshots</summary>
        public GetModelSnapshotsDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		public GetModelSnapshotsDescriptor Desc(bool? desc = true) => Qs("desc", desc);
		public GetModelSnapshotsDescriptor End(Elastic.Clients.Elasticsearch.Time? end) => Qs("end", end);
		public GetModelSnapshotsDescriptor From(int? from) => Qs("from", from);
		public GetModelSnapshotsDescriptor Size(int? size) => Qs("size", size);
		public GetModelSnapshotsDescriptor Sort(Elastic.Clients.Elasticsearch.Field? sort) => Qs("sort", sort);
		public GetModelSnapshotsDescriptor Start(Elastic.Clients.Elasticsearch.Time? start) => Qs("start", start);
	}

	public partial class GetOverallBucketsDescriptor : RequestDescriptorBase<GetOverallBucketsDescriptor, GetOverallBucketsRequestParameters, IGetOverallBucketsRequest>, IGetOverallBucketsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetOverallBuckets;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/results/overall_buckets</summary>
        public GetOverallBucketsDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		bool? IGetOverallBucketsRequest.AllowNoJobs { get; set; }

		public GetOverallBucketsDescriptor BucketSpan(Elastic.Clients.Elasticsearch.Time? bucketSpan) => Qs("bucket_span", bucketSpan);
		public GetOverallBucketsDescriptor OverallScore(Union<double, string>? overallScore) => Qs("overall_score", overallScore);
		public GetOverallBucketsDescriptor TopN(int? topN) => Qs("top_n", topN);
		public GetOverallBucketsDescriptor End(Elastic.Clients.Elasticsearch.Time? end) => Qs("end", end);
		public GetOverallBucketsDescriptor Start(Elastic.Clients.Elasticsearch.Time? start) => Qs("start", start);
		public GetOverallBucketsDescriptor ExcludeInterim(bool? excludeInterim = true) => Qs("exclude_interim", excludeInterim);
		public GetOverallBucketsDescriptor AllowNoMatch(bool? allowNoMatch = true) => Qs("allow_no_match", allowNoMatch);
		public GetOverallBucketsDescriptor AllowNoJobs(bool? allowNoJobs = true) => Assign(allowNoJobs, (a, v) => a.AllowNoJobs = v);
	}

	public partial class GetRecordsDescriptor : RequestDescriptorBase<GetRecordsDescriptor, GetRecordsRequestParameters, IGetRecordsRequest>, IGetRecordsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetRecords;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/results/records</summary>
        public GetRecordsDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		bool? IGetRecordsRequest.Desc { get; set; }

		Elastic.Clients.Elasticsearch.Ml.Page? IGetRecordsRequest.Page { get; set; }

		double? IGetRecordsRequest.RecordScore { get; set; }

		Elastic.Clients.Elasticsearch.Field? IGetRecordsRequest.Sort { get; set; }

		public GetRecordsDescriptor ExcludeInterim(bool? excludeInterim = true) => Qs("exclude_interim", excludeInterim);
		public GetRecordsDescriptor From(int? from) => Qs("from", from);
		public GetRecordsDescriptor Size(int? size) => Qs("size", size);
		public GetRecordsDescriptor Start(Elastic.Clients.Elasticsearch.DateString? start) => Qs("start", start);
		public GetRecordsDescriptor End(Elastic.Clients.Elasticsearch.DateString? end) => Qs("end", end);
		public GetRecordsDescriptor Desc(bool? desc = true) => Assign(desc, (a, v) => a.Desc = v);
		public GetRecordsDescriptor Page(Elastic.Clients.Elasticsearch.Ml.Page? page) => Assign(page, (a, v) => a.Page = v);
		public GetRecordsDescriptor RecordScore(double? recordScore) => Assign(recordScore, (a, v) => a.RecordScore = v);
		public GetRecordsDescriptor Sort(Elastic.Clients.Elasticsearch.Field? sort) => Assign(sort, (a, v) => a.Sort = v);
	}

	public partial class GetTrainedModelsDescriptor : RequestDescriptorBase<GetTrainedModelsDescriptor, GetTrainedModelsRequestParameters, IGetTrainedModelsRequest>, IGetTrainedModelsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetTrainedModels;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/_ml/trained_models/{model_id}</summary>
        public GetTrainedModelsDescriptor(Elastic.Clients.Elasticsearch.Id? model_id) : base(r => r.Optional("model_id", model_id))
		{
		}

		///<summary>/_ml/trained_models</summary>
        public GetTrainedModelsDescriptor() : base()
		{
		}

		public GetTrainedModelsDescriptor AllowNoMatch(bool? allowNoMatch = true) => Qs("allow_no_match", allowNoMatch);
		public GetTrainedModelsDescriptor DecompressDefinition(bool? decompressDefinition = true) => Qs("decompress_definition", decompressDefinition);
		public GetTrainedModelsDescriptor ExcludeGenerated(bool? excludeGenerated = true) => Qs("exclude_generated", excludeGenerated);
		public GetTrainedModelsDescriptor From(int? from) => Qs("from", from);
		public GetTrainedModelsDescriptor Include(string? include) => Qs("include", include);
		public GetTrainedModelsDescriptor Size(int? size) => Qs("size", size);
		public GetTrainedModelsDescriptor Tags(string? tags) => Qs("tags", tags);
	}

	public partial class GetTrainedModelsStatsDescriptor : RequestDescriptorBase<GetTrainedModelsStatsDescriptor, GetTrainedModelsStatsRequestParameters, IGetTrainedModelsStatsRequest>, IGetTrainedModelsStatsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetTrainedModelsStats;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/_ml/trained_models/{model_id}/_stats</summary>
        public GetTrainedModelsStatsDescriptor(Elastic.Clients.Elasticsearch.Id? model_id) : base(r => r.Optional("model_id", model_id))
		{
		}

		///<summary>/_ml/trained_models/_stats</summary>
        public GetTrainedModelsStatsDescriptor() : base()
		{
		}

		public GetTrainedModelsStatsDescriptor AllowNoMatch(bool? allowNoMatch = true) => Qs("allow_no_match", allowNoMatch);
		public GetTrainedModelsStatsDescriptor From(int? from) => Qs("from", from);
		public GetTrainedModelsStatsDescriptor Size(int? size) => Qs("size", size);
	}

	public partial class InfoDescriptor : RequestDescriptorBase<InfoDescriptor, InfoRequestParameters, IInfoRequest>, IInfoRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningInfo;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		///<summary>/_ml/info</summary>
        public InfoDescriptor() : base()
		{
		}
	}

	public partial class OpenJobDescriptor : RequestDescriptorBase<OpenJobDescriptor, OpenJobRequestParameters, IOpenJobRequest>, IOpenJobRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningOpenJob;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/_open</summary>
        public OpenJobDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		Elastic.Clients.Elasticsearch.Time? IOpenJobRequest.Timeout { get; set; }

		public OpenJobDescriptor Timeout(Elastic.Clients.Elasticsearch.Time? timeout) => Assign(timeout, (a, v) => a.Timeout = v);
	}

	public partial class PostCalendarEventsDescriptor : RequestDescriptorBase<PostCalendarEventsDescriptor, PostCalendarEventsRequestParameters, IPostCalendarEventsRequest>, IPostCalendarEventsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningPostCalendarEvents;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/calendars/{calendar_id}/events</summary>
        public PostCalendarEventsDescriptor(Elastic.Clients.Elasticsearch.Id calendar_id) : base(r => r.Required("calendar_id", calendar_id))
		{
		}

		IEnumerable<Elastic.Clients.Elasticsearch.Ml.CalendarEvent> IPostCalendarEventsRequest.Events { get; set; }

		public PostCalendarEventsDescriptor Events(IEnumerable<Elastic.Clients.Elasticsearch.Ml.CalendarEvent> events) => Assign(events, (a, v) => a.Events = v);
	}

	public partial class PostDataDescriptor : RequestDescriptorBase<PostDataDescriptor, PostDataRequestParameters, IPostDataRequest>, IPostDataRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningPostData;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/_data</summary>
        public PostDataDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		IEnumerable<object>? IPostDataRequest.Data { get; set; }

		public PostDataDescriptor ResetEnd(Elastic.Clients.Elasticsearch.DateString? resetEnd) => Qs("reset_end", resetEnd);
		public PostDataDescriptor ResetStart(Elastic.Clients.Elasticsearch.DateString? resetStart) => Qs("reset_start", resetStart);
		public PostDataDescriptor Data(IEnumerable<object>? data) => Assign(data, (a, v) => a.Data = v);
	}

	public partial class PreviewDataFrameAnalyticsDescriptor : RequestDescriptorBase<PreviewDataFrameAnalyticsDescriptor, PreviewDataFrameAnalyticsRequestParameters, IPreviewDataFrameAnalyticsRequest>, IPreviewDataFrameAnalyticsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningPreviewDataFrameAnalytics;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/data_frame/analytics/_preview</summary>
        public PreviewDataFrameAnalyticsDescriptor() : base()
		{
		}

		///<summary>/_ml/data_frame/analytics/{id}/_preview</summary>
        public PreviewDataFrameAnalyticsDescriptor(Elastic.Clients.Elasticsearch.Id? id) : base(r => r.Optional("id", id))
		{
		}

		Elastic.Clients.Elasticsearch.Ml.PreviewDataFrameAnalytics.DataframePreviewConfig? IPreviewDataFrameAnalyticsRequest.Config { get; set; }

		public PreviewDataFrameAnalyticsDescriptor Config(Elastic.Clients.Elasticsearch.Ml.PreviewDataFrameAnalytics.DataframePreviewConfig? config) => Assign(config, (a, v) => a.Config = v);
	}

	public partial class PreviewDatafeedDescriptor : RequestDescriptorBase<PreviewDatafeedDescriptor, PreviewDatafeedRequestParameters, IPreviewDatafeedRequest>, IPreviewDatafeedRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningPreviewDatafeed;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/datafeeds/{datafeed_id}/_preview</summary>
        public PreviewDatafeedDescriptor(Elastic.Clients.Elasticsearch.Id? datafeed_id) : base(r => r.Optional("datafeed_id", datafeed_id))
		{
		}

		///<summary>/_ml/datafeeds/_preview</summary>
        public PreviewDatafeedDescriptor() : base()
		{
		}

		Elastic.Clients.Elasticsearch.Ml.JobConfig? IPreviewDatafeedRequest.JobConfig { get; set; }

		Elastic.Clients.Elasticsearch.Ml.DatafeedConfig? IPreviewDatafeedRequest.DatafeedConfig { get; set; }

		public PreviewDatafeedDescriptor JobConfig(Elastic.Clients.Elasticsearch.Ml.JobConfig? jobConfig) => Assign(jobConfig, (a, v) => a.JobConfig = v);
		public PreviewDatafeedDescriptor DatafeedConfig(Elastic.Clients.Elasticsearch.Ml.DatafeedConfig? datafeedConfig) => Assign(datafeedConfig, (a, v) => a.DatafeedConfig = v);
	}

	public partial class PutCalendarDescriptor : RequestDescriptorBase<PutCalendarDescriptor, PutCalendarRequestParameters, IPutCalendarRequest>, IPutCalendarRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningPutCalendar;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => false;
		///<summary>/_ml/calendars/{calendar_id}</summary>
        public PutCalendarDescriptor(Elastic.Clients.Elasticsearch.Id calendar_id) : base(r => r.Required("calendar_id", calendar_id))
		{
		}

		string? IPutCalendarRequest.Description { get; set; }

		public PutCalendarDescriptor Description(string? description) => Assign(description, (a, v) => a.Description = v);
	}

	public partial class PutCalendarJobDescriptor : RequestDescriptorBase<PutCalendarJobDescriptor, PutCalendarJobRequestParameters, IPutCalendarJobRequest>, IPutCalendarJobRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningPutCalendarJob;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => false;
		///<summary>/_ml/calendars/{calendar_id}/jobs/{job_id}</summary>
        public PutCalendarJobDescriptor(Elastic.Clients.Elasticsearch.Id calendar_id, Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("calendar_id", calendar_id).Required("job_id", job_id))
		{
		}
	}

	public partial class PutDataFrameAnalyticsDescriptor : RequestDescriptorBase<PutDataFrameAnalyticsDescriptor, PutDataFrameAnalyticsRequestParameters, IPutDataFrameAnalyticsRequest>, IPutDataFrameAnalyticsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningPutDataFrameAnalytics;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => false;
		///<summary>/_ml/data_frame/analytics/{id}</summary>
        public PutDataFrameAnalyticsDescriptor(Elastic.Clients.Elasticsearch.Id id) : base(r => r.Required("id", id))
		{
		}

		bool? IPutDataFrameAnalyticsRequest.AllowLazyStart { get; set; }

		Elastic.Clients.Elasticsearch.Ml.DataframeAnalysisContainer IPutDataFrameAnalyticsRequest.Analysis { get; set; }

		Elastic.Clients.Elasticsearch.Ml.DataframeAnalysisAnalyzedFields? IPutDataFrameAnalyticsRequest.AnalyzedFields { get; set; }

		string? IPutDataFrameAnalyticsRequest.Description { get; set; }

		Elastic.Clients.Elasticsearch.Ml.DataframeAnalyticsDestination IPutDataFrameAnalyticsRequest.Dest { get; set; }

		int? IPutDataFrameAnalyticsRequest.MaxNumThreads { get; set; }

		string? IPutDataFrameAnalyticsRequest.ModelMemoryLimit { get; set; }

		Elastic.Clients.Elasticsearch.Ml.DataframeAnalyticsSource IPutDataFrameAnalyticsRequest.Source { get; set; }

		public PutDataFrameAnalyticsDescriptor AllowLazyStart(bool? allowLazyStart = true) => Assign(allowLazyStart, (a, v) => a.AllowLazyStart = v);
		public PutDataFrameAnalyticsDescriptor Analysis(Elastic.Clients.Elasticsearch.Ml.DataframeAnalysisContainer analysis) => Assign(analysis, (a, v) => a.Analysis = v);
		public PutDataFrameAnalyticsDescriptor AnalyzedFields(Elastic.Clients.Elasticsearch.Ml.DataframeAnalysisAnalyzedFields? analyzedFields) => Assign(analyzedFields, (a, v) => a.AnalyzedFields = v);
		public PutDataFrameAnalyticsDescriptor Description(string? description) => Assign(description, (a, v) => a.Description = v);
		public PutDataFrameAnalyticsDescriptor Dest(Elastic.Clients.Elasticsearch.Ml.DataframeAnalyticsDestination dest) => Assign(dest, (a, v) => a.Dest = v);
		public PutDataFrameAnalyticsDescriptor MaxNumThreads(int? maxNumThreads) => Assign(maxNumThreads, (a, v) => a.MaxNumThreads = v);
		public PutDataFrameAnalyticsDescriptor ModelMemoryLimit(string? modelMemoryLimit) => Assign(modelMemoryLimit, (a, v) => a.ModelMemoryLimit = v);
		public PutDataFrameAnalyticsDescriptor Source(Elastic.Clients.Elasticsearch.Ml.DataframeAnalyticsSource source) => Assign(source, (a, v) => a.Source = v);
	}

	public partial class PutDatafeedDescriptor : RequestDescriptorBase<PutDatafeedDescriptor, PutDatafeedRequestParameters, IPutDatafeedRequest>, IPutDatafeedRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningPutDatafeed;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => false;
		///<summary>/_ml/datafeeds/{datafeed_id}</summary>
        public PutDatafeedDescriptor(Elastic.Clients.Elasticsearch.Id datafeed_id) : base(r => r.Required("datafeed_id", datafeed_id))
		{
		}

		Dictionary<string, Elastic.Clients.Elasticsearch.Aggregations.AggregationContainer>? IPutDatafeedRequest.Aggregations { get; set; }

		Elastic.Clients.Elasticsearch.Ml.ChunkingConfig? IPutDatafeedRequest.ChunkingConfig { get; set; }

		Elastic.Clients.Elasticsearch.Ml.DelayedDataCheckConfig? IPutDatafeedRequest.DelayedDataCheckConfig { get; set; }

		Elastic.Clients.Elasticsearch.Time? IPutDatafeedRequest.Frequency { get; set; }

		IEnumerable<string>? IPutDatafeedRequest.Indices { get; set; }

		IEnumerable<string>? IPutDatafeedRequest.Indexes { get; set; }

		Elastic.Clients.Elasticsearch.Ml.DatafeedIndicesOptions? IPutDatafeedRequest.IndicesOptions { get; set; }

		Elastic.Clients.Elasticsearch.Id? IPutDatafeedRequest.JobId { get; set; }

		int? IPutDatafeedRequest.MaxEmptySearches { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? IPutDatafeedRequest.Query { get; set; }

		Elastic.Clients.Elasticsearch.Time? IPutDatafeedRequest.QueryDelay { get; set; }

		Elastic.Clients.Elasticsearch.Mapping.RuntimeFields? IPutDatafeedRequest.RuntimeMappings { get; set; }

		Dictionary<string, Elastic.Clients.Elasticsearch.ScriptField>? IPutDatafeedRequest.ScriptFields { get; set; }

		int? IPutDatafeedRequest.ScrollSize { get; set; }

		public PutDatafeedDescriptor AllowNoIndices(bool? allowNoIndices = true) => Qs("allow_no_indices", allowNoIndices);
		public PutDatafeedDescriptor ExpandWildcards(Elastic.Clients.Elasticsearch.ExpandWildcards? expandWildcards) => Qs("expand_wildcards", expandWildcards);
		public PutDatafeedDescriptor IgnoreThrottled(bool? ignoreThrottled = true) => Qs("ignore_throttled", ignoreThrottled);
		public PutDatafeedDescriptor IgnoreUnavailable(bool? ignoreUnavailable = true) => Qs("ignore_unavailable", ignoreUnavailable);
		public PutDatafeedDescriptor Aggregations(Dictionary<string, Elastic.Clients.Elasticsearch.Aggregations.AggregationContainer>? aggregations) => Assign(aggregations, (a, v) => a.Aggregations = v);
		public PutDatafeedDescriptor ChunkingConfig(Elastic.Clients.Elasticsearch.Ml.ChunkingConfig? chunkingConfig) => Assign(chunkingConfig, (a, v) => a.ChunkingConfig = v);
		public PutDatafeedDescriptor DelayedDataCheckConfig(Elastic.Clients.Elasticsearch.Ml.DelayedDataCheckConfig? delayedDataCheckConfig) => Assign(delayedDataCheckConfig, (a, v) => a.DelayedDataCheckConfig = v);
		public PutDatafeedDescriptor Frequency(Elastic.Clients.Elasticsearch.Time? frequency) => Assign(frequency, (a, v) => a.Frequency = v);
		public PutDatafeedDescriptor Indices(IEnumerable<string>? indices) => Assign(indices, (a, v) => a.Indices = v);
		public PutDatafeedDescriptor Indexes(IEnumerable<string>? indexes) => Assign(indexes, (a, v) => a.Indexes = v);
		public PutDatafeedDescriptor IndicesOptions(Elastic.Clients.Elasticsearch.Ml.DatafeedIndicesOptions? indicesOptions) => Assign(indicesOptions, (a, v) => a.IndicesOptions = v);
		public PutDatafeedDescriptor JobId(Elastic.Clients.Elasticsearch.Id? jobId) => Assign(jobId, (a, v) => a.JobId = v);
		public PutDatafeedDescriptor MaxEmptySearches(int? maxEmptySearches) => Assign(maxEmptySearches, (a, v) => a.MaxEmptySearches = v);
		public PutDatafeedDescriptor Query(Elastic.Clients.Elasticsearch.QueryDsl.QueryContainer? query) => Assign(query, (a, v) => a.Query = v);
		public PutDatafeedDescriptor QueryDelay(Elastic.Clients.Elasticsearch.Time? queryDelay) => Assign(queryDelay, (a, v) => a.QueryDelay = v);
		public PutDatafeedDescriptor RuntimeMappings(Elastic.Clients.Elasticsearch.Mapping.RuntimeFields? runtimeMappings) => Assign(runtimeMappings, (a, v) => a.RuntimeMappings = v);
		public PutDatafeedDescriptor ScriptFields(Dictionary<string, Elastic.Clients.Elasticsearch.ScriptField>? scriptFields) => Assign(scriptFields, (a, v) => a.ScriptFields = v);
		public PutDatafeedDescriptor ScrollSize(int? scrollSize) => Assign(scrollSize, (a, v) => a.ScrollSize = v);
	}

	public partial class PutFilterDescriptor : RequestDescriptorBase<PutFilterDescriptor, PutFilterRequestParameters, IPutFilterRequest>, IPutFilterRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningPutFilter;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => false;
		///<summary>/_ml/filters/{filter_id}</summary>
        public PutFilterDescriptor(Elastic.Clients.Elasticsearch.Id filter_id) : base(r => r.Required("filter_id", filter_id))
		{
		}

		string? IPutFilterRequest.Description { get; set; }

		IEnumerable<string>? IPutFilterRequest.Items { get; set; }

		public PutFilterDescriptor Description(string? description) => Assign(description, (a, v) => a.Description = v);
		public PutFilterDescriptor Items(IEnumerable<string>? items) => Assign(items, (a, v) => a.Items = v);
	}

	public partial class PutJobDescriptor : RequestDescriptorBase<PutJobDescriptor, PutJobRequestParameters, IPutJobRequest>, IPutJobRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningPutJob;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}</summary>
        public PutJobDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		bool? IPutJobRequest.AllowLazyOpen { get; set; }

		Elastic.Clients.Elasticsearch.Ml.AnalysisConfig IPutJobRequest.AnalysisConfig { get; set; }

		Elastic.Clients.Elasticsearch.Ml.AnalysisLimits? IPutJobRequest.AnalysisLimits { get; set; }

		Elastic.Clients.Elasticsearch.Time IPutJobRequest.BackgroundPersistInterval { get; set; }

		Elastic.Clients.Elasticsearch.Ml.CustomSettings? IPutJobRequest.CustomSettings { get; set; }

		long? IPutJobRequest.DailyModelSnapshotRetentionAfterDays { get; set; }

		Elastic.Clients.Elasticsearch.Ml.DataDescription IPutJobRequest.DataDescription { get; set; }

		Elastic.Clients.Elasticsearch.Ml.DatafeedConfig? IPutJobRequest.DatafeedConfig { get; set; }

		string? IPutJobRequest.Description { get; set; }

		IEnumerable<string>? IPutJobRequest.Groups { get; set; }

		Elastic.Clients.Elasticsearch.Ml.ModelPlotConfig? IPutJobRequest.ModelPlotConfig { get; set; }

		long? IPutJobRequest.ModelSnapshotRetentionDays { get; set; }

		long? IPutJobRequest.RenormalizationWindowDays { get; set; }

		Elastic.Clients.Elasticsearch.IndexName? IPutJobRequest.ResultsIndexName { get; set; }

		long? IPutJobRequest.ResultsRetentionDays { get; set; }

		public PutJobDescriptor AllowLazyOpen(bool? allowLazyOpen = true) => Assign(allowLazyOpen, (a, v) => a.AllowLazyOpen = v);
		public PutJobDescriptor AnalysisConfig(Elastic.Clients.Elasticsearch.Ml.AnalysisConfig analysisConfig) => Assign(analysisConfig, (a, v) => a.AnalysisConfig = v);
		public PutJobDescriptor AnalysisLimits(Elastic.Clients.Elasticsearch.Ml.AnalysisLimits? analysisLimits) => Assign(analysisLimits, (a, v) => a.AnalysisLimits = v);
		public PutJobDescriptor BackgroundPersistInterval(Elastic.Clients.Elasticsearch.Time backgroundPersistInterval) => Assign(backgroundPersistInterval, (a, v) => a.BackgroundPersistInterval = v);
		public PutJobDescriptor CustomSettings(Elastic.Clients.Elasticsearch.Ml.CustomSettings? customSettings) => Assign(customSettings, (a, v) => a.CustomSettings = v);
		public PutJobDescriptor DailyModelSnapshotRetentionAfterDays(long? dailyModelSnapshotRetentionAfterDays) => Assign(dailyModelSnapshotRetentionAfterDays, (a, v) => a.DailyModelSnapshotRetentionAfterDays = v);
		public PutJobDescriptor DataDescription(Elastic.Clients.Elasticsearch.Ml.DataDescription dataDescription) => Assign(dataDescription, (a, v) => a.DataDescription = v);
		public PutJobDescriptor DatafeedConfig(Elastic.Clients.Elasticsearch.Ml.DatafeedConfig? datafeedConfig) => Assign(datafeedConfig, (a, v) => a.DatafeedConfig = v);
		public PutJobDescriptor Description(string? description) => Assign(description, (a, v) => a.Description = v);
		public PutJobDescriptor Groups(IEnumerable<string>? groups) => Assign(groups, (a, v) => a.Groups = v);
		public PutJobDescriptor ModelPlotConfig(Elastic.Clients.Elasticsearch.Ml.ModelPlotConfig? modelPlotConfig) => Assign(modelPlotConfig, (a, v) => a.ModelPlotConfig = v);
		public PutJobDescriptor ModelSnapshotRetentionDays(long? modelSnapshotRetentionDays) => Assign(modelSnapshotRetentionDays, (a, v) => a.ModelSnapshotRetentionDays = v);
		public PutJobDescriptor RenormalizationWindowDays(long? renormalizationWindowDays) => Assign(renormalizationWindowDays, (a, v) => a.RenormalizationWindowDays = v);
		public PutJobDescriptor ResultsIndexName(Elastic.Clients.Elasticsearch.IndexName? resultsIndexName) => Assign(resultsIndexName, (a, v) => a.ResultsIndexName = v);
		public PutJobDescriptor ResultsRetentionDays(long? resultsRetentionDays) => Assign(resultsRetentionDays, (a, v) => a.ResultsRetentionDays = v);
	}

	public partial class PutTrainedModelDescriptor : RequestDescriptorBase<PutTrainedModelDescriptor, PutTrainedModelRequestParameters, IPutTrainedModelRequest>, IPutTrainedModelRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningPutTrainedModel;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => false;
		///<summary>/_ml/trained_models/{model_id}</summary>
        public PutTrainedModelDescriptor(Elastic.Clients.Elasticsearch.Id model_id) : base(r => r.Required("model_id", model_id))
		{
		}

		string? IPutTrainedModelRequest.CompressedDefinition { get; set; }

		Elastic.Clients.Elasticsearch.Ml.PutTrainedModel.Definition? IPutTrainedModelRequest.Definition { get; set; }

		string? IPutTrainedModelRequest.Description { get; set; }

		Elastic.Clients.Elasticsearch.Aggregations.InferenceConfigContainer IPutTrainedModelRequest.InferenceConfig { get; set; }

		Elastic.Clients.Elasticsearch.Ml.PutTrainedModel.Input IPutTrainedModelRequest.Input { get; set; }

		object? IPutTrainedModelRequest.Metadata { get; set; }

		IEnumerable<string>? IPutTrainedModelRequest.Tags { get; set; }

		public PutTrainedModelDescriptor CompressedDefinition(string? compressedDefinition) => Assign(compressedDefinition, (a, v) => a.CompressedDefinition = v);
		public PutTrainedModelDescriptor Definition(Elastic.Clients.Elasticsearch.Ml.PutTrainedModel.Definition? definition) => Assign(definition, (a, v) => a.Definition = v);
		public PutTrainedModelDescriptor Description(string? description) => Assign(description, (a, v) => a.Description = v);
		public PutTrainedModelDescriptor InferenceConfig(Elastic.Clients.Elasticsearch.Aggregations.InferenceConfigContainer inferenceConfig) => Assign(inferenceConfig, (a, v) => a.InferenceConfig = v);
		public PutTrainedModelDescriptor Input(Elastic.Clients.Elasticsearch.Ml.PutTrainedModel.Input input) => Assign(input, (a, v) => a.Input = v);
		public PutTrainedModelDescriptor Metadata(object? metadata) => Assign(metadata, (a, v) => a.Metadata = v);
		public PutTrainedModelDescriptor Tags(IEnumerable<string>? tags) => Assign(tags, (a, v) => a.Tags = v);
	}

	public partial class PutTrainedModelAliasDescriptor : RequestDescriptorBase<PutTrainedModelAliasDescriptor, PutTrainedModelAliasRequestParameters, IPutTrainedModelAliasRequest>, IPutTrainedModelAliasRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningPutTrainedModelAlias;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => false;
		///<summary>/_ml/trained_models/{model_id}/model_aliases/{model_alias}</summary>
        public PutTrainedModelAliasDescriptor(Elastic.Clients.Elasticsearch.Id model_id, Elastic.Clients.Elasticsearch.Name model_alias) : base(r => r.Required("model_id", model_id).Required("model_alias", model_alias))
		{
		}

		public PutTrainedModelAliasDescriptor Reassign(bool? reassign = true) => Qs("reassign", reassign);
	}

	public partial class ResetJobDescriptor : RequestDescriptorBase<ResetJobDescriptor, ResetJobRequestParameters, IResetJobRequest>, IResetJobRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningResetJob;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/_reset</summary>
        public ResetJobDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		public ResetJobDescriptor WaitForCompletion(bool? waitForCompletion = true) => Qs("wait_for_completion", waitForCompletion);
	}

	public partial class RevertModelSnapshotDescriptor : RequestDescriptorBase<RevertModelSnapshotDescriptor, RevertModelSnapshotRequestParameters, IRevertModelSnapshotRequest>, IRevertModelSnapshotRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningRevertModelSnapshot;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_revert</summary>
        public RevertModelSnapshotDescriptor(Elastic.Clients.Elasticsearch.Id job_id, Elastic.Clients.Elasticsearch.Id snapshot_id) : base(r => r.Required("job_id", job_id).Required("snapshot_id", snapshot_id))
		{
		}

		bool? IRevertModelSnapshotRequest.DeleteInterveningResults { get; set; }

		public RevertModelSnapshotDescriptor DeleteInterveningResults(bool? deleteInterveningResults = true) => Assign(deleteInterveningResults, (a, v) => a.DeleteInterveningResults = v);
	}

	public partial class SetUpgradeModeDescriptor : RequestDescriptorBase<SetUpgradeModeDescriptor, SetUpgradeModeRequestParameters, ISetUpgradeModeRequest>, ISetUpgradeModeRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningSetUpgradeMode;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/set_upgrade_mode</summary>
        public SetUpgradeModeDescriptor() : base()
		{
		}

		public SetUpgradeModeDescriptor Enabled(bool? enabled = true) => Qs("enabled", enabled);
		public SetUpgradeModeDescriptor Timeout(Elastic.Clients.Elasticsearch.Time? timeout) => Qs("timeout", timeout);
	}

	public partial class StartDataFrameAnalyticsDescriptor : RequestDescriptorBase<StartDataFrameAnalyticsDescriptor, StartDataFrameAnalyticsRequestParameters, IStartDataFrameAnalyticsRequest>, IStartDataFrameAnalyticsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningStartDataFrameAnalytics;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/data_frame/analytics/{id}/_start</summary>
        public StartDataFrameAnalyticsDescriptor(Elastic.Clients.Elasticsearch.Id id) : base(r => r.Required("id", id))
		{
		}

		public StartDataFrameAnalyticsDescriptor Timeout(Elastic.Clients.Elasticsearch.Time? timeout) => Qs("timeout", timeout);
	}

	public partial class StartDatafeedDescriptor : RequestDescriptorBase<StartDatafeedDescriptor, StartDatafeedRequestParameters, IStartDatafeedRequest>, IStartDatafeedRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningStartDatafeed;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/datafeeds/{datafeed_id}/_start</summary>
        public StartDatafeedDescriptor(Elastic.Clients.Elasticsearch.Id datafeed_id) : base(r => r.Required("datafeed_id", datafeed_id))
		{
		}

		Elastic.Clients.Elasticsearch.Time? IStartDatafeedRequest.End { get; set; }

		Elastic.Clients.Elasticsearch.Time? IStartDatafeedRequest.Timeout { get; set; }

		public StartDatafeedDescriptor Start(Elastic.Clients.Elasticsearch.Time? start) => Qs("start", start);
		public StartDatafeedDescriptor End(Elastic.Clients.Elasticsearch.Time? end) => Assign(end, (a, v) => a.End = v);
		public StartDatafeedDescriptor Timeout(Elastic.Clients.Elasticsearch.Time? timeout) => Assign(timeout, (a, v) => a.Timeout = v);
	}

	public partial class StopDataFrameAnalyticsDescriptor : RequestDescriptorBase<StopDataFrameAnalyticsDescriptor, StopDataFrameAnalyticsRequestParameters, IStopDataFrameAnalyticsRequest>, IStopDataFrameAnalyticsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningStopDataFrameAnalytics;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/data_frame/analytics/{id}/_stop</summary>
        public StopDataFrameAnalyticsDescriptor(Elastic.Clients.Elasticsearch.Id id) : base(r => r.Required("id", id))
		{
		}

		public StopDataFrameAnalyticsDescriptor AllowNoMatch(bool? allowNoMatch = true) => Qs("allow_no_match", allowNoMatch);
		public StopDataFrameAnalyticsDescriptor Force(bool? force = true) => Qs("force", force);
		public StopDataFrameAnalyticsDescriptor Timeout(Elastic.Clients.Elasticsearch.Time? timeout) => Qs("timeout", timeout);
	}

	public partial class StopDatafeedDescriptor : RequestDescriptorBase<StopDatafeedDescriptor, StopDatafeedRequestParameters, IStopDatafeedRequest>, IStopDatafeedRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningStopDatafeed;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/datafeeds/{datafeed_id}/_stop</summary>
        public StopDatafeedDescriptor(Elastic.Clients.Elasticsearch.Id datafeed_id) : base(r => r.Required("datafeed_id", datafeed_id))
		{
		}

		Elastic.Clients.Elasticsearch.Time? IStopDatafeedRequest.Timeout { get; set; }

		public StopDatafeedDescriptor AllowNoMatch(bool? allowNoMatch = true) => Qs("allow_no_match", allowNoMatch);
		public StopDatafeedDescriptor Force(bool? force = true) => Qs("force", force);
		public StopDatafeedDescriptor Timeout(Elastic.Clients.Elasticsearch.Time? timeout) => Assign(timeout, (a, v) => a.Timeout = v);
	}

	public partial class UpdateDataFrameAnalyticsDescriptor : RequestDescriptorBase<UpdateDataFrameAnalyticsDescriptor, UpdateDataFrameAnalyticsRequestParameters, IUpdateDataFrameAnalyticsRequest>, IUpdateDataFrameAnalyticsRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningUpdateDataFrameAnalytics;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/data_frame/analytics/{id}/_update</summary>
        public UpdateDataFrameAnalyticsDescriptor(Elastic.Clients.Elasticsearch.Id id) : base(r => r.Required("id", id))
		{
		}

		string? IUpdateDataFrameAnalyticsRequest.Description { get; set; }

		string? IUpdateDataFrameAnalyticsRequest.ModelMemoryLimit { get; set; }

		int? IUpdateDataFrameAnalyticsRequest.MaxNumThreads { get; set; }

		bool? IUpdateDataFrameAnalyticsRequest.AllowLazyStart { get; set; }

		public UpdateDataFrameAnalyticsDescriptor Description(string? description) => Assign(description, (a, v) => a.Description = v);
		public UpdateDataFrameAnalyticsDescriptor ModelMemoryLimit(string? modelMemoryLimit) => Assign(modelMemoryLimit, (a, v) => a.ModelMemoryLimit = v);
		public UpdateDataFrameAnalyticsDescriptor MaxNumThreads(int? maxNumThreads) => Assign(maxNumThreads, (a, v) => a.MaxNumThreads = v);
		public UpdateDataFrameAnalyticsDescriptor AllowLazyStart(bool? allowLazyStart = true) => Assign(allowLazyStart, (a, v) => a.AllowLazyStart = v);
	}

	public partial class UpdateFilterDescriptor : RequestDescriptorBase<UpdateFilterDescriptor, UpdateFilterRequestParameters, IUpdateFilterRequest>, IUpdateFilterRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningUpdateFilter;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/filters/{filter_id}/_update</summary>
        public UpdateFilterDescriptor(Elastic.Clients.Elasticsearch.Id filter_id) : base(r => r.Required("filter_id", filter_id))
		{
		}

		IEnumerable<string>? IUpdateFilterRequest.AddItems { get; set; }

		string? IUpdateFilterRequest.Description { get; set; }

		IEnumerable<string>? IUpdateFilterRequest.RemoveItems { get; set; }

		public UpdateFilterDescriptor AddItems(IEnumerable<string>? addItems) => Assign(addItems, (a, v) => a.AddItems = v);
		public UpdateFilterDescriptor Description(string? description) => Assign(description, (a, v) => a.Description = v);
		public UpdateFilterDescriptor RemoveItems(IEnumerable<string>? removeItems) => Assign(removeItems, (a, v) => a.RemoveItems = v);
	}

	public partial class UpdateJobDescriptor : RequestDescriptorBase<UpdateJobDescriptor, UpdateJobRequestParameters, IUpdateJobRequest>, IUpdateJobRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningUpdateJob;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/_update</summary>
        public UpdateJobDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		bool? IUpdateJobRequest.AllowLazyOpen { get; set; }

		Elastic.Clients.Elasticsearch.Ml.AnalysisMemoryLimit? IUpdateJobRequest.AnalysisLimits { get; set; }

		Elastic.Clients.Elasticsearch.Time? IUpdateJobRequest.BackgroundPersistInterval { get; set; }

		Dictionary<string, object>? IUpdateJobRequest.CustomSettings { get; set; }

		IEnumerable<string>? IUpdateJobRequest.CategorizationFilters { get; set; }

		string? IUpdateJobRequest.Description { get; set; }

		Elastic.Clients.Elasticsearch.Ml.ModelPlotConfig? IUpdateJobRequest.ModelPlotConfig { get; set; }

		long? IUpdateJobRequest.DailyModelSnapshotRetentionAfterDays { get; set; }

		long? IUpdateJobRequest.ModelSnapshotRetentionDays { get; set; }

		long? IUpdateJobRequest.RenormalizationWindowDays { get; set; }

		long? IUpdateJobRequest.ResultsRetentionDays { get; set; }

		IEnumerable<string>? IUpdateJobRequest.Groups { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Ml.Detector>? IUpdateJobRequest.Detectors { get; set; }

		Elastic.Clients.Elasticsearch.Ml.PerPartitionCategorization? IUpdateJobRequest.PerPartitionCategorization { get; set; }

		public UpdateJobDescriptor AllowLazyOpen(bool? allowLazyOpen = true) => Assign(allowLazyOpen, (a, v) => a.AllowLazyOpen = v);
		public UpdateJobDescriptor AnalysisLimits(Elastic.Clients.Elasticsearch.Ml.AnalysisMemoryLimit? analysisLimits) => Assign(analysisLimits, (a, v) => a.AnalysisLimits = v);
		public UpdateJobDescriptor BackgroundPersistInterval(Elastic.Clients.Elasticsearch.Time? backgroundPersistInterval) => Assign(backgroundPersistInterval, (a, v) => a.BackgroundPersistInterval = v);
		public UpdateJobDescriptor CustomSettings(Dictionary<string, object>? customSettings) => Assign(customSettings, (a, v) => a.CustomSettings = v);
		public UpdateJobDescriptor CategorizationFilters(IEnumerable<string>? categorizationFilters) => Assign(categorizationFilters, (a, v) => a.CategorizationFilters = v);
		public UpdateJobDescriptor Description(string? description) => Assign(description, (a, v) => a.Description = v);
		public UpdateJobDescriptor ModelPlotConfig(Elastic.Clients.Elasticsearch.Ml.ModelPlotConfig? modelPlotConfig) => Assign(modelPlotConfig, (a, v) => a.ModelPlotConfig = v);
		public UpdateJobDescriptor DailyModelSnapshotRetentionAfterDays(long? dailyModelSnapshotRetentionAfterDays) => Assign(dailyModelSnapshotRetentionAfterDays, (a, v) => a.DailyModelSnapshotRetentionAfterDays = v);
		public UpdateJobDescriptor ModelSnapshotRetentionDays(long? modelSnapshotRetentionDays) => Assign(modelSnapshotRetentionDays, (a, v) => a.ModelSnapshotRetentionDays = v);
		public UpdateJobDescriptor RenormalizationWindowDays(long? renormalizationWindowDays) => Assign(renormalizationWindowDays, (a, v) => a.RenormalizationWindowDays = v);
		public UpdateJobDescriptor ResultsRetentionDays(long? resultsRetentionDays) => Assign(resultsRetentionDays, (a, v) => a.ResultsRetentionDays = v);
		public UpdateJobDescriptor Groups(IEnumerable<string>? groups) => Assign(groups, (a, v) => a.Groups = v);
		public UpdateJobDescriptor Detectors(IEnumerable<Elastic.Clients.Elasticsearch.Ml.Detector>? detectors) => Assign(detectors, (a, v) => a.Detectors = v);
		public UpdateJobDescriptor PerPartitionCategorization(Elastic.Clients.Elasticsearch.Ml.PerPartitionCategorization? perPartitionCategorization) => Assign(perPartitionCategorization, (a, v) => a.PerPartitionCategorization = v);
	}

	public partial class UpdateModelSnapshotDescriptor : RequestDescriptorBase<UpdateModelSnapshotDescriptor, UpdateModelSnapshotRequestParameters, IUpdateModelSnapshotRequest>, IUpdateModelSnapshotRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningUpdateModelSnapshot;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_update</summary>
        public UpdateModelSnapshotDescriptor(Elastic.Clients.Elasticsearch.Id job_id, Elastic.Clients.Elasticsearch.Id snapshot_id) : base(r => r.Required("job_id", job_id).Required("snapshot_id", snapshot_id))
		{
		}

		string? IUpdateModelSnapshotRequest.Description { get; set; }

		bool? IUpdateModelSnapshotRequest.Retain { get; set; }

		public UpdateModelSnapshotDescriptor Description(string? description) => Assign(description, (a, v) => a.Description = v);
		public UpdateModelSnapshotDescriptor Retain(bool? retain = true) => Assign(retain, (a, v) => a.Retain = v);
	}

	public partial class UpgradeJobSnapshotDescriptor : RequestDescriptorBase<UpgradeJobSnapshotDescriptor, UpgradeJobSnapshotRequestParameters, IUpgradeJobSnapshotRequest>, IUpgradeJobSnapshotRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningUpgradeJobSnapshot;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_upgrade</summary>
        public UpgradeJobSnapshotDescriptor(Elastic.Clients.Elasticsearch.Id job_id, Elastic.Clients.Elasticsearch.Id snapshot_id) : base(r => r.Required("job_id", job_id).Required("snapshot_id", snapshot_id))
		{
		}

		public UpgradeJobSnapshotDescriptor WaitForCompletion(bool? waitForCompletion = true) => Qs("wait_for_completion", waitForCompletion);
		public UpgradeJobSnapshotDescriptor Timeout(Elastic.Clients.Elasticsearch.Time? timeout) => Qs("timeout", timeout);
	}

	public partial class ValidateDescriptor : RequestDescriptorBase<ValidateDescriptor, ValidateRequestParameters, IValidateRequest>, IValidateRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningValidate;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/_validate</summary>
        public ValidateDescriptor() : base()
		{
		}

		Elastic.Clients.Elasticsearch.Id? IValidateRequest.JobId { get; set; }

		Elastic.Clients.Elasticsearch.Ml.AnalysisConfig? IValidateRequest.AnalysisConfig { get; set; }

		Elastic.Clients.Elasticsearch.Ml.AnalysisLimits? IValidateRequest.AnalysisLimits { get; set; }

		Elastic.Clients.Elasticsearch.Ml.DataDescription? IValidateRequest.DataDescription { get; set; }

		string? IValidateRequest.Description { get; set; }

		Elastic.Clients.Elasticsearch.Ml.ModelPlotConfig? IValidateRequest.ModelPlot { get; set; }

		long? IValidateRequest.ModelSnapshotRetentionDays { get; set; }

		Elastic.Clients.Elasticsearch.IndexName? IValidateRequest.ResultsIndexName { get; set; }

		public ValidateDescriptor JobId(Elastic.Clients.Elasticsearch.Id? jobId) => Assign(jobId, (a, v) => a.JobId = v);
		public ValidateDescriptor AnalysisConfig(Elastic.Clients.Elasticsearch.Ml.AnalysisConfig? analysisConfig) => Assign(analysisConfig, (a, v) => a.AnalysisConfig = v);
		public ValidateDescriptor AnalysisLimits(Elastic.Clients.Elasticsearch.Ml.AnalysisLimits? analysisLimits) => Assign(analysisLimits, (a, v) => a.AnalysisLimits = v);
		public ValidateDescriptor DataDescription(Elastic.Clients.Elasticsearch.Ml.DataDescription? dataDescription) => Assign(dataDescription, (a, v) => a.DataDescription = v);
		public ValidateDescriptor Description(string? description) => Assign(description, (a, v) => a.Description = v);
		public ValidateDescriptor ModelPlot(Elastic.Clients.Elasticsearch.Ml.ModelPlotConfig? modelPlot) => Assign(modelPlot, (a, v) => a.ModelPlot = v);
		public ValidateDescriptor ModelSnapshotRetentionDays(long? modelSnapshotRetentionDays) => Assign(modelSnapshotRetentionDays, (a, v) => a.ModelSnapshotRetentionDays = v);
		public ValidateDescriptor ResultsIndexName(Elastic.Clients.Elasticsearch.IndexName? resultsIndexName) => Assign(resultsIndexName, (a, v) => a.ResultsIndexName = v);
	}

	public partial class ValidateDetectorDescriptor : RequestDescriptorBase<ValidateDetectorDescriptor, ValidateDetectorRequestParameters, IValidateDetectorRequest>, IValidateDetectorRequest
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningValidateDetector;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		///<summary>/_ml/anomaly_detectors/_validate/detector</summary>
        public ValidateDetectorDescriptor() : base()
		{
		}
	}
}
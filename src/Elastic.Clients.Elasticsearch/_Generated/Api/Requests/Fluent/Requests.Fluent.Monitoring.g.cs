// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System.Collections.Generic;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Monitoring
{
	public partial class BulkDescriptor<TSource> : RequestDescriptorBase<BulkDescriptor<TSource>, BulkRequestParameters, IBulkRequest<TSource>>, IBulkRequest<TSource>
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.MonitoringBulk;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => false;
		///<summary>/_monitoring/bulk</summary>
        public BulkDescriptor() : base()
		{
		}

		public BulkDescriptor<TSource> SystemId(string systemId) => Qs("system_id", systemId);
		public BulkDescriptor<TSource> SystemApiVersion(string systemApiVersion) => Qs("system_api_version", systemApiVersion);
		public BulkDescriptor<TSource> Interval(Elastic.Clients.Elasticsearch.TimeSpanTempReplacement interval) => Qs("interval", interval);
	}
}
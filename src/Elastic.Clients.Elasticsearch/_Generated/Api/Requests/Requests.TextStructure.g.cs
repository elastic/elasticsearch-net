// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.TextStructure
{
	[ConvertAs(typeof(FindStructureRequest<>))]
	public partial interface IFindStructureRequest<TJsonDocument> : IRequest<FindStructureRequestParameters>
	{
	}

	public partial class FindStructureRequest<TJsonDocument> : PlainRequestBase<FindStructureRequestParameters>, IFindStructureRequest<TJsonDocument>
	{
		protected IFindStructureRequest<TJsonDocument> Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.TextStructureFindStructure;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		protected override bool CanBeEmpty => true;
		protected override bool IsEmpty => true;

		///<summary>/_text_structure/find_structure</summary>
        public FindStructureRequest() : base()
		{
		}

		[JsonIgnore]
		public string? Charset { get => Q<string?>("charset"); set => Q("charset", value); }

		[JsonIgnore]
		public string? ColumnNames { get => Q<string?>("column_names"); set => Q("column_names", value); }

		[JsonIgnore]
		public string? Delimiter { get => Q<string?>("delimiter"); set => Q("delimiter", value); }

		[JsonIgnore]
		public bool? Explain { get => Q<bool?>("explain"); set => Q("explain", value); }

		[JsonIgnore]
		public string? Format { get => Q<string?>("format"); set => Q("format", value); }

		[JsonIgnore]
		public string? GrokPattern { get => Q<string?>("grok_pattern"); set => Q("grok_pattern", value); }

		[JsonIgnore]
		public bool? HasHeaderRow { get => Q<bool?>("has_header_row"); set => Q("has_header_row", value); }

		[JsonIgnore]
		public uint? LineMergeSizeLimit { get => Q<uint?>("line_merge_size_limit"); set => Q("line_merge_size_limit", value); }

		[JsonIgnore]
		public uint? LinesToSample { get => Q<uint?>("lines_to_sample"); set => Q("lines_to_sample", value); }

		[JsonIgnore]
		public string? Quote { get => Q<string?>("quote"); set => Q("quote", value); }

		[JsonIgnore]
		public bool? ShouldTrimFields { get => Q<bool?>("should_trim_fields"); set => Q("should_trim_fields", value); }

		[JsonIgnore]
		public Elastic.Clients.Elasticsearch.Time? Timeout { get => Q<Elastic.Clients.Elasticsearch.Time?>("timeout"); set => Q("timeout", value); }

		[JsonIgnore]
		public Elastic.Clients.Elasticsearch.Field? TimestampField { get => Q<Elastic.Clients.Elasticsearch.Field?>("timestamp_field"); set => Q("timestamp_field", value); }

		[JsonIgnore]
		public string? TimestampFormat { get => Q<string?>("timestamp_format"); set => Q("timestamp_format", value); }
	}
}
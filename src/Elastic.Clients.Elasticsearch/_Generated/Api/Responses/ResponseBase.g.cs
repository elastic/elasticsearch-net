// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch
{
	public abstract class AcknowledgedResponseBase : ResponseBase
	{
		[JsonPropertyName("acknowledged")]
		public bool Acknowledged
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public abstract class AsyncSearchDocumentResponseBase<TDocument> : AsyncSearchResponseBase
	{
		[JsonPropertyName("response")]
		public Elastic.Clients.Elasticsearch.AsyncSearch.AsyncSearch<TDocument> Response
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public abstract class AsyncSearchResponseBase : ResponseBase
	{
		[JsonPropertyName("id")]
		public Elastic.Clients.Elasticsearch.Id? Id
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("is_partial")]
		public bool IsPartial
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("is_running")]
		public bool IsRunning
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("expiration_time_in_millis")]
		public Elastic.Clients.Elasticsearch.EpochMillis ExpirationTimeInMillis
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("start_time_in_millis")]
		public Elastic.Clients.Elasticsearch.EpochMillis StartTimeInMillis
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public abstract class DictionaryResponseBase<TKey, TValue> : ResponseBase
	{
	}

	public abstract class EqlSearchResponseBase<TEvent> : ResponseBase
	{
		[JsonPropertyName("id")]
		public Elastic.Clients.Elasticsearch.Id? Id
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("is_partial")]
		public bool? IsPartial
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("is_running")]
		public bool? IsRunning
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("took")]
		public int? Took
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("timed_out")]
		public bool? TimedOut
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("hits")]
		public Elastic.Clients.Elasticsearch.Eql.EqlHits<TEvent> Hits
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public abstract class ErrorResponseBase : ResponseBase
	{
		[JsonPropertyName("status")]
		public int Status
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public abstract class IndicesResponseBase : AcknowledgedResponseBase
	{
		[JsonPropertyName("_shards")]
		public Elastic.Clients.Elasticsearch.ShardStatistics? Shards
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public abstract class NodesResponseBase : ResponseBase
	{
		[JsonPropertyName("_nodes")]
		public Elastic.Clients.Elasticsearch.NodeStatistics node_stats
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public abstract class ShardsOperationResponseBase : ResponseBase
	{
		[JsonPropertyName("_shards")]
		public Elastic.Clients.Elasticsearch.ShardStatistics Shards
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}

	public abstract class WriteResponseBase : ResponseBase
	{
		[JsonPropertyName("_id")]
		public Elastic.Clients.Elasticsearch.Id Id
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_index")]
		public Elastic.Clients.Elasticsearch.IndexName Index
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_primary_term")]
		public long PrimaryTerm
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("result")]
		public Elastic.Clients.Elasticsearch.Result Result
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_seq_no")]
		public Elastic.Clients.Elasticsearch.SequenceNumber SeqNo
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_shards")]
		public Elastic.Clients.Elasticsearch.ShardStatistics Shards
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_type")]
		public Elastic.Clients.Elasticsearch.DocType? Type
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("_version")]
		public Elastic.Clients.Elasticsearch.VersionNumber Version
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}

		[JsonPropertyName("forced_refresh")]
		public bool? ForcedRefresh
		{
			get;
#if NET5_0
			init;
#else
			internal set;
#endif
		}
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using OneOf;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.IndexManagement
{
	public partial class AddBlockResponse : AcknowledgedResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("indices")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.IndexManagement.AddBlock.IndicesBlockStatus> Indices
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class AnalyzeResponse : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("detail")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Analyze.AnalyzeDetail? Detail
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("tokens")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.IndexManagement.Analyze.AnalyzeToken>? Tokens
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ClearCacheResponse : ShardsOperationResponseBase
	{
	}

	public partial class CloneResponse : AcknowledgedResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("index")]
		public Elastic.Clients.Elasticsearch.IndexName Index
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class CloseResponse : AcknowledgedResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("indices")]
		public Dictionary<Elastic.Clients.Elasticsearch.IndexName, Elastic.Clients.Elasticsearch.IndexManagement.Close.CloseIndexResult> Indices
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class CreateDataStreamResponse : AcknowledgedResponseBase
	{
	}

	public partial class CreateResponse : AcknowledgedResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("index")]
		public Elastic.Clients.Elasticsearch.IndexName Index
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class DataStreamsStatsResponse : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("backing_indices")]
		public int BackingIndices
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("data_stream_count")]
		public int DataStreamCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("data_streams")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.IndexManagement.DataStreamsStats.DataStreamsStatsItem> DataStreams
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_shards")]
		public Elastic.Clients.Elasticsearch.ShardStatistics Shards
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("total_store_size_bytes")]
		public int TotalStoreSizeBytes
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("total_store_sizes")]
		public Elastic.Clients.Elasticsearch.ByteSize? TotalStoreSizes
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class DeleteAliasResponse : AcknowledgedResponseBase
	{
	}

	public partial class DeleteDataStreamResponse : AcknowledgedResponseBase
	{
	}

	public partial class DeleteIndexTemplateResponse : AcknowledgedResponseBase
	{
	}

	public partial class DeleteResponse : IndicesResponseBase
	{
	}

	public partial class DeleteTemplateResponse : AcknowledgedResponseBase
	{
	}

	public partial class DiskUsageResponse : ResponseBase
	{
	}

	public partial class ExistsAliasResponse : ResponseBase
	{
	}

	public partial class ExistsIndexTemplateResponse : ResponseBase
	{
	}

	public partial class ExistsResponse : ExistsResponseBase
	{
	}

	public partial class ExistsTemplateResponse : ResponseBase
	{
	}

	public partial class FlushResponse : ShardsOperationResponseBase
	{
	}

	public partial class ForcemergeResponse : ShardsOperationResponseBase
	{
	}

	public partial class GetAliasResponse : DictionaryResponseBase<Elastic.Clients.Elasticsearch.IndexName, Elastic.Clients.Elasticsearch.IndexManagement.GetAlias.IndexAliases>
	{
	}

	public partial class GetDataStreamResponse : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("data_streams")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.IndexManagement.GetDataStream.IndicesGetDataStreamItem> DataStreams
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GetFieldMappingResponse : DictionaryResponseBase<Elastic.Clients.Elasticsearch.IndexName, Elastic.Clients.Elasticsearch.IndexManagement.GetFieldMapping.TypeFieldMappings>
	{
	}

	public partial class GetIndexTemplateResponse : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("index_templates")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.IndexManagement.GetIndexTemplate.IndexTemplateItem> IndexTemplates
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class GetMappingResponse : DictionaryResponseBase<Elastic.Clients.Elasticsearch.IndexName, Elastic.Clients.Elasticsearch.IndexManagement.GetMapping.IndexMappingRecord>
	{
	}

	public partial class GetResponse : DictionaryResponseBase<Elastic.Clients.Elasticsearch.IndexName, Elastic.Clients.Elasticsearch.IndexManagement.IndexState>
	{
	}

	public partial class GetSettingsResponse : DictionaryResponseBase<Elastic.Clients.Elasticsearch.IndexName, Elastic.Clients.Elasticsearch.IndexManagement.IndexState>
	{
	}

	public partial class GetTemplateResponse : DictionaryResponseBase<string, Elastic.Clients.Elasticsearch.IndexManagement.TemplateMapping>
	{
	}

	public partial class MigrateToDataStreamResponse : AcknowledgedResponseBase
	{
	}

	public partial class OpenResponse : AcknowledgedResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class PromoteDataStreamResponse : ResponseBase
	{
	}

	public partial class PutAliasResponse : AcknowledgedResponseBase
	{
	}

	public partial class PutIndexTemplateResponse : AcknowledgedResponseBase
	{
	}

	public partial class PutMappingResponse : IndicesResponseBase
	{
	}

	public partial class PutSettingsResponse : AcknowledgedResponseBase
	{
	}

	public partial class PutTemplateResponse : AcknowledgedResponseBase
	{
	}

	public partial class RecoveryResponse : DictionaryResponseBase<Elastic.Clients.Elasticsearch.IndexName, Elastic.Clients.Elasticsearch.IndexManagement.Recovery.RecoveryStatus>
	{
	}

	public partial class RefreshResponse : ShardsOperationResponseBase
	{
	}

	public partial class ReloadSearchAnalyzersResponse : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("reload_details")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.IndexManagement.ReloadSearchAnalyzers.ReloadDetails> ReloadDetails
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_shards")]
		public Elastic.Clients.Elasticsearch.ShardStatistics Shards
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ResolveIndexResponse : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("aliases")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.IndexManagement.ResolveIndex.ResolveIndexAliasItem> Aliases
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("data_streams")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.IndexManagement.ResolveIndex.ResolveIndexDataStreamsItem> DataStreams
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("indices")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.IndexManagement.ResolveIndex.ResolveIndexItem> Indices
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class RolloverResponse : AcknowledgedResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("conditions")]
		public Dictionary<string, bool> Conditions
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("dry_run")]
		public bool DryRun
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("new_index")]
		public string NewIndex
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("old_index")]
		public string OldIndex
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("rolled_over")]
		public bool RolledOver
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class SegmentsResponse : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("indices")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.IndexManagement.Segments.IndexSegment> Indices
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_shards")]
		public Elastic.Clients.Elasticsearch.ShardStatistics Shards
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ShardStoresResponse : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("indices")]
		public Dictionary<Elastic.Clients.Elasticsearch.IndexName, Elastic.Clients.Elasticsearch.IndexManagement.ShardStores.IndicesShardStores> Indices
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ShrinkResponse : AcknowledgedResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("index")]
		public Elastic.Clients.Elasticsearch.IndexName Index
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class SimulateIndexTemplateResponse : ResponseBase
	{
	}

	public partial class SimulateTemplateResponse : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("template")]
		public Elastic.Clients.Elasticsearch.IndexManagement.SimulateTemplate.Template Template
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class SplitResponse : AcknowledgedResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("index")]
		public Elastic.Clients.Elasticsearch.IndexName Index
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("shards_acknowledged")]
		public bool ShardsAcknowledged
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class StatsResponse : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("_all")]
		public Elastic.Clients.Elasticsearch.IndexManagement.Stats.IndicesStats All
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("indices")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.IndexManagement.Stats.IndicesStats>? Indices
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_shards")]
		public Elastic.Clients.Elasticsearch.ShardStatistics Shards
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class UpdateAliasesResponse : AcknowledgedResponseBase
	{
	}

	public partial class ValidateQueryResponse : ResponseBase
	{
		[JsonInclude]
		[JsonPropertyName("explanations")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.IndexManagement.ValidateQuery.IndicesValidationExplanation>? Explanations
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_shards")]
		public Elastic.Clients.Elasticsearch.ShardStatistics? Shards
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("valid")]
		public bool Valid
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}
}
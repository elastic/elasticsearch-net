// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Ccr
{
	public sealed class CcrResumeFollowRequestParameters : RequestParameters<CcrResumeFollowRequestParameters>
	{
	}

	public partial class CcrResumeFollowRequest : PlainRequestBase<CcrResumeFollowRequestParameters>
	{
		public CcrResumeFollowRequest(Elastic.Clients.Elasticsearch.IndexName index) : base(r => r.Required("index", index))
		{
		}

		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationResumeFollow;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		[JsonInclude]
		[JsonPropertyName("max_outstanding_read_requests")]
		public long? MaxOutstandingReadRequests { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_outstanding_write_requests")]
		public long? MaxOutstandingWriteRequests { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_read_request_operation_count")]
		public long? MaxReadRequestOperationCount { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_read_request_size")]
		public string? MaxReadRequestSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_retry_delay")]
		public Elastic.Clients.Elasticsearch.Duration? MaxRetryDelay { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_write_buffer_count")]
		public long? MaxWriteBufferCount { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_write_buffer_size")]
		public string? MaxWriteBufferSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_write_request_operation_count")]
		public long? MaxWriteRequestOperationCount { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_write_request_size")]
		public string? MaxWriteRequestSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("read_poll_timeout")]
		public Elastic.Clients.Elasticsearch.Duration? ReadPollTimeout { get; set; }
	}

	public sealed partial class CcrResumeFollowRequestDescriptor<TDocument> : RequestDescriptorBase<CcrResumeFollowRequestDescriptor<TDocument>, CcrResumeFollowRequestParameters>
	{
		internal CcrResumeFollowRequestDescriptor(Action<CcrResumeFollowRequestDescriptor<TDocument>> configure) => configure.Invoke(this);
		public CcrResumeFollowRequestDescriptor(Elastic.Clients.Elasticsearch.IndexName index) : base(r => r.Required("index", index))
		{
		}

		public CcrResumeFollowRequestDescriptor(TDocument document) : this(typeof(TDocument))
		{
		}

		internal CcrResumeFollowRequestDescriptor()
		{
		}

		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationResumeFollow;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		public CcrResumeFollowRequestDescriptor<TDocument> Index(Elastic.Clients.Elasticsearch.IndexName index)
		{
			RouteValues.Required("index", index);
			return Self;
		}

		private long? MaxOutstandingReadRequestsValue { get; set; }

		private long? MaxOutstandingWriteRequestsValue { get; set; }

		private long? MaxReadRequestOperationCountValue { get; set; }

		private string? MaxReadRequestSizeValue { get; set; }

		private Elastic.Clients.Elasticsearch.Duration? MaxRetryDelayValue { get; set; }

		private long? MaxWriteBufferCountValue { get; set; }

		private string? MaxWriteBufferSizeValue { get; set; }

		private long? MaxWriteRequestOperationCountValue { get; set; }

		private string? MaxWriteRequestSizeValue { get; set; }

		private Elastic.Clients.Elasticsearch.Duration? ReadPollTimeoutValue { get; set; }

		public CcrResumeFollowRequestDescriptor<TDocument> MaxOutstandingReadRequests(long? maxOutstandingReadRequests)
		{
			MaxOutstandingReadRequestsValue = maxOutstandingReadRequests;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor<TDocument> MaxOutstandingWriteRequests(long? maxOutstandingWriteRequests)
		{
			MaxOutstandingWriteRequestsValue = maxOutstandingWriteRequests;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor<TDocument> MaxReadRequestOperationCount(long? maxReadRequestOperationCount)
		{
			MaxReadRequestOperationCountValue = maxReadRequestOperationCount;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor<TDocument> MaxReadRequestSize(string? maxReadRequestSize)
		{
			MaxReadRequestSizeValue = maxReadRequestSize;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor<TDocument> MaxRetryDelay(Elastic.Clients.Elasticsearch.Duration? maxRetryDelay)
		{
			MaxRetryDelayValue = maxRetryDelay;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor<TDocument> MaxWriteBufferCount(long? maxWriteBufferCount)
		{
			MaxWriteBufferCountValue = maxWriteBufferCount;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor<TDocument> MaxWriteBufferSize(string? maxWriteBufferSize)
		{
			MaxWriteBufferSizeValue = maxWriteBufferSize;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor<TDocument> MaxWriteRequestOperationCount(long? maxWriteRequestOperationCount)
		{
			MaxWriteRequestOperationCountValue = maxWriteRequestOperationCount;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor<TDocument> MaxWriteRequestSize(string? maxWriteRequestSize)
		{
			MaxWriteRequestSizeValue = maxWriteRequestSize;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor<TDocument> ReadPollTimeout(Elastic.Clients.Elasticsearch.Duration? readPollTimeout)
		{
			ReadPollTimeoutValue = readPollTimeout;
			return Self;
		}

		protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
		{
			writer.WriteStartObject();
			if (MaxOutstandingReadRequestsValue.HasValue)
			{
				writer.WritePropertyName("max_outstanding_read_requests");
				writer.WriteNumberValue(MaxOutstandingReadRequestsValue.Value);
			}

			if (MaxOutstandingWriteRequestsValue.HasValue)
			{
				writer.WritePropertyName("max_outstanding_write_requests");
				writer.WriteNumberValue(MaxOutstandingWriteRequestsValue.Value);
			}

			if (MaxReadRequestOperationCountValue.HasValue)
			{
				writer.WritePropertyName("max_read_request_operation_count");
				writer.WriteNumberValue(MaxReadRequestOperationCountValue.Value);
			}

			if (!string.IsNullOrEmpty(MaxReadRequestSizeValue))
			{
				writer.WritePropertyName("max_read_request_size");
				writer.WriteStringValue(MaxReadRequestSizeValue);
			}

			if (MaxRetryDelayValue is not null)
			{
				writer.WritePropertyName("max_retry_delay");
				JsonSerializer.Serialize(writer, MaxRetryDelayValue, options);
			}

			if (MaxWriteBufferCountValue.HasValue)
			{
				writer.WritePropertyName("max_write_buffer_count");
				writer.WriteNumberValue(MaxWriteBufferCountValue.Value);
			}

			if (!string.IsNullOrEmpty(MaxWriteBufferSizeValue))
			{
				writer.WritePropertyName("max_write_buffer_size");
				writer.WriteStringValue(MaxWriteBufferSizeValue);
			}

			if (MaxWriteRequestOperationCountValue.HasValue)
			{
				writer.WritePropertyName("max_write_request_operation_count");
				writer.WriteNumberValue(MaxWriteRequestOperationCountValue.Value);
			}

			if (!string.IsNullOrEmpty(MaxWriteRequestSizeValue))
			{
				writer.WritePropertyName("max_write_request_size");
				writer.WriteStringValue(MaxWriteRequestSizeValue);
			}

			if (ReadPollTimeoutValue is not null)
			{
				writer.WritePropertyName("read_poll_timeout");
				JsonSerializer.Serialize(writer, ReadPollTimeoutValue, options);
			}

			writer.WriteEndObject();
		}
	}

	public sealed partial class CcrResumeFollowRequestDescriptor : RequestDescriptorBase<CcrResumeFollowRequestDescriptor, CcrResumeFollowRequestParameters>
	{
		internal CcrResumeFollowRequestDescriptor(Action<CcrResumeFollowRequestDescriptor> configure) => configure.Invoke(this);
		public CcrResumeFollowRequestDescriptor(Elastic.Clients.Elasticsearch.IndexName index) : base(r => r.Required("index", index))
		{
		}

		internal CcrResumeFollowRequestDescriptor()
		{
		}

		internal override ApiUrls ApiUrls => ApiUrlsLookups.CrossClusterReplicationResumeFollow;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		public CcrResumeFollowRequestDescriptor Index(Elastic.Clients.Elasticsearch.IndexName index)
		{
			RouteValues.Required("index", index);
			return Self;
		}

		private long? MaxOutstandingReadRequestsValue { get; set; }

		private long? MaxOutstandingWriteRequestsValue { get; set; }

		private long? MaxReadRequestOperationCountValue { get; set; }

		private string? MaxReadRequestSizeValue { get; set; }

		private Elastic.Clients.Elasticsearch.Duration? MaxRetryDelayValue { get; set; }

		private long? MaxWriteBufferCountValue { get; set; }

		private string? MaxWriteBufferSizeValue { get; set; }

		private long? MaxWriteRequestOperationCountValue { get; set; }

		private string? MaxWriteRequestSizeValue { get; set; }

		private Elastic.Clients.Elasticsearch.Duration? ReadPollTimeoutValue { get; set; }

		public CcrResumeFollowRequestDescriptor MaxOutstandingReadRequests(long? maxOutstandingReadRequests)
		{
			MaxOutstandingReadRequestsValue = maxOutstandingReadRequests;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor MaxOutstandingWriteRequests(long? maxOutstandingWriteRequests)
		{
			MaxOutstandingWriteRequestsValue = maxOutstandingWriteRequests;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor MaxReadRequestOperationCount(long? maxReadRequestOperationCount)
		{
			MaxReadRequestOperationCountValue = maxReadRequestOperationCount;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor MaxReadRequestSize(string? maxReadRequestSize)
		{
			MaxReadRequestSizeValue = maxReadRequestSize;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor MaxRetryDelay(Elastic.Clients.Elasticsearch.Duration? maxRetryDelay)
		{
			MaxRetryDelayValue = maxRetryDelay;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor MaxWriteBufferCount(long? maxWriteBufferCount)
		{
			MaxWriteBufferCountValue = maxWriteBufferCount;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor MaxWriteBufferSize(string? maxWriteBufferSize)
		{
			MaxWriteBufferSizeValue = maxWriteBufferSize;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor MaxWriteRequestOperationCount(long? maxWriteRequestOperationCount)
		{
			MaxWriteRequestOperationCountValue = maxWriteRequestOperationCount;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor MaxWriteRequestSize(string? maxWriteRequestSize)
		{
			MaxWriteRequestSizeValue = maxWriteRequestSize;
			return Self;
		}

		public CcrResumeFollowRequestDescriptor ReadPollTimeout(Elastic.Clients.Elasticsearch.Duration? readPollTimeout)
		{
			ReadPollTimeoutValue = readPollTimeout;
			return Self;
		}

		protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
		{
			writer.WriteStartObject();
			if (MaxOutstandingReadRequestsValue.HasValue)
			{
				writer.WritePropertyName("max_outstanding_read_requests");
				writer.WriteNumberValue(MaxOutstandingReadRequestsValue.Value);
			}

			if (MaxOutstandingWriteRequestsValue.HasValue)
			{
				writer.WritePropertyName("max_outstanding_write_requests");
				writer.WriteNumberValue(MaxOutstandingWriteRequestsValue.Value);
			}

			if (MaxReadRequestOperationCountValue.HasValue)
			{
				writer.WritePropertyName("max_read_request_operation_count");
				writer.WriteNumberValue(MaxReadRequestOperationCountValue.Value);
			}

			if (!string.IsNullOrEmpty(MaxReadRequestSizeValue))
			{
				writer.WritePropertyName("max_read_request_size");
				writer.WriteStringValue(MaxReadRequestSizeValue);
			}

			if (MaxRetryDelayValue is not null)
			{
				writer.WritePropertyName("max_retry_delay");
				JsonSerializer.Serialize(writer, MaxRetryDelayValue, options);
			}

			if (MaxWriteBufferCountValue.HasValue)
			{
				writer.WritePropertyName("max_write_buffer_count");
				writer.WriteNumberValue(MaxWriteBufferCountValue.Value);
			}

			if (!string.IsNullOrEmpty(MaxWriteBufferSizeValue))
			{
				writer.WritePropertyName("max_write_buffer_size");
				writer.WriteStringValue(MaxWriteBufferSizeValue);
			}

			if (MaxWriteRequestOperationCountValue.HasValue)
			{
				writer.WritePropertyName("max_write_request_operation_count");
				writer.WriteNumberValue(MaxWriteRequestOperationCountValue.Value);
			}

			if (!string.IsNullOrEmpty(MaxWriteRequestSizeValue))
			{
				writer.WritePropertyName("max_write_request_size");
				writer.WriteStringValue(MaxWriteRequestSizeValue);
			}

			if (ReadPollTimeoutValue is not null)
			{
				writer.WritePropertyName("read_poll_timeout");
				JsonSerializer.Serialize(writer, ReadPollTimeoutValue, options);
			}

			writer.WriteEndObject();
		}
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Tasks
{
	public class TasksCancelRequestParameters : RequestParameters<TasksCancelRequestParameters>
	{
		[JsonIgnore]
		public IEnumerable<string>? Actions { get => Q<IEnumerable<string>?>("actions"); set => Q("actions", value); }

		[JsonIgnore]
		public IEnumerable<string>? Nodes { get => Q<IEnumerable<string>?>("nodes"); set => Q("nodes", value); }

		[JsonIgnore]
		public string? ParentTaskId { get => Q<string?>("parent_task_id"); set => Q("parent_task_id", value); }

		[JsonIgnore]
		public bool? WaitForCompletion { get => Q<bool?>("wait_for_completion"); set => Q("wait_for_completion", value); }
	}

	public partial class TasksCancelRequest : PlainRequestBase<TasksCancelRequestParameters>
	{
		public TasksCancelRequest()
		{
		}

		public TasksCancelRequest(Elastic.Clients.Elasticsearch.TaskId? task_id) : base(r => r.Optional("task_id", task_id))
		{
		}

		internal override ApiUrls ApiUrls => ApiUrlsLookups.TasksCancel;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		[JsonIgnore]
		public IEnumerable<string>? Actions { get => Q<IEnumerable<string>?>("actions"); set => Q("actions", value); }

		[JsonIgnore]
		public IEnumerable<string>? Nodes { get => Q<IEnumerable<string>?>("nodes"); set => Q("nodes", value); }

		[JsonIgnore]
		public string? ParentTaskId { get => Q<string?>("parent_task_id"); set => Q("parent_task_id", value); }

		[JsonIgnore]
		public bool? WaitForCompletion { get => Q<bool?>("wait_for_completion"); set => Q("wait_for_completion", value); }
	}

	public sealed partial class TasksCancelRequestDescriptor : RequestDescriptorBase<TasksCancelRequestDescriptor, TasksCancelRequestParameters>
	{
		internal TasksCancelRequestDescriptor(Action<TasksCancelRequestDescriptor> configure) => configure.Invoke(this);
		public TasksCancelRequestDescriptor()
		{
		}

		internal override ApiUrls ApiUrls => ApiUrlsLookups.TasksCancel;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => false;
		public TasksCancelRequestDescriptor Actions(IEnumerable<string>? actions) => Qs("actions", actions);
		public TasksCancelRequestDescriptor Nodes(IEnumerable<string>? nodes) => Qs("nodes", nodes);
		public TasksCancelRequestDescriptor ParentTaskId(string? parentTaskId) => Qs("parent_task_id", parentTaskId);
		public TasksCancelRequestDescriptor WaitForCompletion(bool? waitForCompletion = true) => Qs("wait_for_completion", waitForCompletion);
		public TasksCancelRequestDescriptor TaskId(Elastic.Clients.Elasticsearch.TaskId? task_id)
		{
			RouteValues.Optional("task_id", task_id);
			return Self;
		}

		protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
		{
		}
	}
}
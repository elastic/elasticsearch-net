// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Requests;
using Elastic.Clients.Elasticsearch.Serialization;
using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.MachineLearning;

public sealed partial class UpdateFilterRequestParameters : RequestParameters
{
}

/// <summary>
/// <para>
/// Updates the description of a filter, adds items, or removes items from the list.
/// </para>
/// </summary>
public sealed partial class UpdateFilterRequest : PlainRequest<UpdateFilterRequestParameters>
{
	public UpdateFilterRequest(Elastic.Clients.Elasticsearch.Id filterId) : base(r => r.Required("filter_id", filterId))
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.MachineLearningUpdateFilter;

	protected override HttpMethod StaticHttpMethod => HttpMethod.POST;

	internal override bool SupportsBody => true;

	internal override string OperationName => "ml.update_filter";

	/// <summary>
	/// <para>
	/// The items to add to the filter.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("add_items")]
	public ICollection<string>? AddItems { get; set; }

	/// <summary>
	/// <para>
	/// A description for the filter.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("description")]
	public string? Description { get; set; }

	/// <summary>
	/// <para>
	/// The items to remove from the filter.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("remove_items")]
	public ICollection<string>? RemoveItems { get; set; }
}

/// <summary>
/// <para>
/// Updates the description of a filter, adds items, or removes items from the list.
/// </para>
/// </summary>
public sealed partial class UpdateFilterRequestDescriptor : RequestDescriptor<UpdateFilterRequestDescriptor, UpdateFilterRequestParameters>
{
	internal UpdateFilterRequestDescriptor(Action<UpdateFilterRequestDescriptor> configure) => configure.Invoke(this);

	public UpdateFilterRequestDescriptor(Elastic.Clients.Elasticsearch.Id filterId) : base(r => r.Required("filter_id", filterId))
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.MachineLearningUpdateFilter;

	protected override HttpMethod StaticHttpMethod => HttpMethod.POST;

	internal override bool SupportsBody => true;

	internal override string OperationName => "ml.update_filter";

	public UpdateFilterRequestDescriptor FilterId(Elastic.Clients.Elasticsearch.Id filterId)
	{
		RouteValues.Required("filter_id", filterId);
		return Self;
	}

	private ICollection<string>? AddItemsValue { get; set; }
	private string? DescriptionValue { get; set; }
	private ICollection<string>? RemoveItemsValue { get; set; }

	/// <summary>
	/// <para>
	/// The items to add to the filter.
	/// </para>
	/// </summary>
	public UpdateFilterRequestDescriptor AddItems(ICollection<string>? addItems)
	{
		AddItemsValue = addItems;
		return Self;
	}

	/// <summary>
	/// <para>
	/// A description for the filter.
	/// </para>
	/// </summary>
	public UpdateFilterRequestDescriptor Description(string? description)
	{
		DescriptionValue = description;
		return Self;
	}

	/// <summary>
	/// <para>
	/// The items to remove from the filter.
	/// </para>
	/// </summary>
	public UpdateFilterRequestDescriptor RemoveItems(ICollection<string>? removeItems)
	{
		RemoveItemsValue = removeItems;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		if (AddItemsValue is not null)
		{
			writer.WritePropertyName("add_items");
			JsonSerializer.Serialize(writer, AddItemsValue, options);
		}

		if (!string.IsNullOrEmpty(DescriptionValue))
		{
			writer.WritePropertyName("description");
			writer.WriteStringValue(DescriptionValue);
		}

		if (RemoveItemsValue is not null)
		{
			writer.WritePropertyName("remove_items");
			JsonSerializer.Serialize(writer, RemoveItemsValue, options);
		}

		writer.WriteEndObject();
	}
}
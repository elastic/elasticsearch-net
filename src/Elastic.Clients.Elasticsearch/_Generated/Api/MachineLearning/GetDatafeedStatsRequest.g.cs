// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Requests;
using Elastic.Clients.Elasticsearch.Serialization;
using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.MachineLearning;

public sealed partial class GetDatafeedStatsRequestParameters : RequestParameters
{
	/// <summary>
	/// <para>Specifies what to do when the request:</para>
	/// <para>1. Contains wildcard expressions and there are no datafeeds that match.<br/>2. Contains the `_all` string or no identifiers and there are no matches.<br/>3. Contains wildcard expressions and there are only partial matches.</para>
	/// <para>The default value is `true`, which returns an empty `datafeeds` array<br/>when there are no matches and the subset of results when there are<br/>partial matches. If this parameter is `false`, the request returns a<br/>`404` status code when there are no matches or only partial matches.</para>
	/// </summary>
	public bool? AllowNoMatch { get => Q<bool?>("allow_no_match"); set => Q("allow_no_match", value); }
}

/// <summary>
/// <para>Retrieves usage information for datafeeds.<br/>You can get statistics for multiple datafeeds in a single API request by<br/>using a comma-separated list of datafeeds or a wildcard expression. You can<br/>get statistics for all datafeeds by using `_all`, by specifying `*` as the<br/>`<feed_id>`, or by omitting the `<feed_id>`. If the datafeed is stopped, the<br/>only information you receive is the `datafeed_id` and the `state`.<br/>This API returns a maximum of 10,000 datafeeds.</para>
/// </summary>
public sealed partial class GetDatafeedStatsRequest : PlainRequest<GetDatafeedStatsRequestParameters>
{
	public GetDatafeedStatsRequest()
	{
	}

	public GetDatafeedStatsRequest(Elastic.Clients.Elasticsearch.Ids? datafeedId) : base(r => r.Optional("datafeed_id", datafeedId))
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.MachineLearningGetDatafeedStats;

	protected override HttpMethod StaticHttpMethod => HttpMethod.GET;

	internal override bool SupportsBody => false;

	internal override string OperationName => "ml.get_datafeed_stats";

	/// <summary>
	/// <para>Specifies what to do when the request:</para>
	/// <para>1. Contains wildcard expressions and there are no datafeeds that match.<br/>2. Contains the `_all` string or no identifiers and there are no matches.<br/>3. Contains wildcard expressions and there are only partial matches.</para>
	/// <para>The default value is `true`, which returns an empty `datafeeds` array<br/>when there are no matches and the subset of results when there are<br/>partial matches. If this parameter is `false`, the request returns a<br/>`404` status code when there are no matches or only partial matches.</para>
	/// </summary>
	[JsonIgnore]
	public bool? AllowNoMatch { get => Q<bool?>("allow_no_match"); set => Q("allow_no_match", value); }
}

/// <summary>
/// <para>Retrieves usage information for datafeeds.<br/>You can get statistics for multiple datafeeds in a single API request by<br/>using a comma-separated list of datafeeds or a wildcard expression. You can<br/>get statistics for all datafeeds by using `_all`, by specifying `*` as the<br/>`<feed_id>`, or by omitting the `<feed_id>`. If the datafeed is stopped, the<br/>only information you receive is the `datafeed_id` and the `state`.<br/>This API returns a maximum of 10,000 datafeeds.</para>
/// </summary>
public sealed partial class GetDatafeedStatsRequestDescriptor : RequestDescriptor<GetDatafeedStatsRequestDescriptor, GetDatafeedStatsRequestParameters>
{
	internal GetDatafeedStatsRequestDescriptor(Action<GetDatafeedStatsRequestDescriptor> configure) => configure.Invoke(this);

	public GetDatafeedStatsRequestDescriptor(Elastic.Clients.Elasticsearch.Ids? datafeedId) : base(r => r.Optional("datafeed_id", datafeedId))
	{
	}

	public GetDatafeedStatsRequestDescriptor()
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.MachineLearningGetDatafeedStats;

	protected override HttpMethod StaticHttpMethod => HttpMethod.GET;

	internal override bool SupportsBody => false;

	internal override string OperationName => "ml.get_datafeed_stats";

	public GetDatafeedStatsRequestDescriptor AllowNoMatch(bool? allowNoMatch = true) => Qs("allow_no_match", allowNoMatch);

	public GetDatafeedStatsRequestDescriptor DatafeedId(Elastic.Clients.Elasticsearch.Ids? datafeedId)
	{
		RouteValues.Optional("datafeed_id", datafeedId);
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
	}
}
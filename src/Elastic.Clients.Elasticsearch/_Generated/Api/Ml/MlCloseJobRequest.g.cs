// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Ml
{
	public sealed class MlCloseJobRequestParameters : RequestParameters<MlCloseJobRequestParameters>
	{
	}

	public sealed partial class MlCloseJobRequest : PlainRequestBase<MlCloseJobRequestParameters>
	{
		public MlCloseJobRequest(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningCloseJob;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		[JsonInclude]
		[JsonPropertyName("allow_no_match")]
		public bool? AllowNoMatch { get; set; }

		[JsonInclude]
		[JsonPropertyName("force")]
		public bool? Force { get; set; }

		[JsonInclude]
		[JsonPropertyName("timeout")]
		public Elastic.Clients.Elasticsearch.Duration? Timeout { get; set; }
	}

	public sealed partial class MlCloseJobRequestDescriptor : RequestDescriptorBase<MlCloseJobRequestDescriptor, MlCloseJobRequestParameters>
	{
		internal MlCloseJobRequestDescriptor(Action<MlCloseJobRequestDescriptor> configure) => configure.Invoke(this);
		public MlCloseJobRequestDescriptor(Elastic.Clients.Elasticsearch.Id job_id) : base(r => r.Required("job_id", job_id))
		{
		}

		internal MlCloseJobRequestDescriptor()
		{
		}

		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningCloseJob;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		public MlCloseJobRequestDescriptor JobId(Elastic.Clients.Elasticsearch.Id job_id)
		{
			RouteValues.Required("job_id", job_id);
			return Self;
		}

		private bool? AllowNoMatchValue { get; set; }

		private bool? ForceValue { get; set; }

		private Elastic.Clients.Elasticsearch.Duration? TimeoutValue { get; set; }

		public MlCloseJobRequestDescriptor AllowNoMatch(bool? allowNoMatch = true)
		{
			AllowNoMatchValue = allowNoMatch;
			return Self;
		}

		public MlCloseJobRequestDescriptor Force(bool? force = true)
		{
			ForceValue = force;
			return Self;
		}

		public MlCloseJobRequestDescriptor Timeout(Elastic.Clients.Elasticsearch.Duration? timeout)
		{
			TimeoutValue = timeout;
			return Self;
		}

		protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
		{
			writer.WriteStartObject();
			if (AllowNoMatchValue.HasValue)
			{
				writer.WritePropertyName("allow_no_match");
				writer.WriteBooleanValue(AllowNoMatchValue.Value);
			}

			if (ForceValue.HasValue)
			{
				writer.WritePropertyName("force");
				writer.WriteBooleanValue(ForceValue.Value);
			}

			if (TimeoutValue is not null)
			{
				writer.WritePropertyName("timeout");
				JsonSerializer.Serialize(writer, TimeoutValue, options);
			}

			writer.WriteEndObject();
		}
	}
}
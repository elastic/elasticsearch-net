// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Ml
{
	public class MlPutTrainedModelVocabularyRequestParameters : RequestParameters<MlPutTrainedModelVocabularyRequestParameters>
	{
	}

	public partial class MlPutTrainedModelVocabularyRequest : PlainRequestBase<MlPutTrainedModelVocabularyRequestParameters>
	{
		public MlPutTrainedModelVocabularyRequest(Elastic.Clients.Elasticsearch.Id model_id) : base(r => r.Required("model_id", model_id))
		{
		}

		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningPutTrainedModelVocabulary;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => true;
		[JsonInclude]
		[JsonPropertyName("vocabulary")]
		public IEnumerable<string> Vocabulary { get; set; }
	}

	public sealed partial class MlPutTrainedModelVocabularyRequestDescriptor : RequestDescriptorBase<MlPutTrainedModelVocabularyRequestDescriptor, MlPutTrainedModelVocabularyRequestParameters>
	{
		internal MlPutTrainedModelVocabularyRequestDescriptor(Action<MlPutTrainedModelVocabularyRequestDescriptor> configure) => configure.Invoke(this);
		public MlPutTrainedModelVocabularyRequestDescriptor(Elastic.Clients.Elasticsearch.Id model_id) : base(r => r.Required("model_id", model_id))
		{
		}

		internal MlPutTrainedModelVocabularyRequestDescriptor()
		{
		}

		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningPutTrainedModelVocabulary;
		protected override HttpMethod HttpMethod => HttpMethod.PUT;
		protected override bool SupportsBody => true;
		public MlPutTrainedModelVocabularyRequestDescriptor ModelId(Elastic.Clients.Elasticsearch.Id model_id)
		{
			RouteValues.Required("model_id", model_id);
			return Self;
		}

		private IEnumerable<string> VocabularyValue { get; set; }

		public MlPutTrainedModelVocabularyRequestDescriptor Vocabulary(IEnumerable<string> vocabulary)
		{
			VocabularyValue = vocabulary;
			return Self;
		}

		protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
		{
			writer.WriteStartObject();
			writer.WritePropertyName("vocabulary");
			JsonSerializer.Serialize(writer, VocabularyValue, options);
			writer.WriteEndObject();
		}
	}
}
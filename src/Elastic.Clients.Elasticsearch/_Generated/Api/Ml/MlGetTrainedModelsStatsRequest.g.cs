// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Ml
{
	public sealed class MlGetTrainedModelsStatsRequestParameters : RequestParameters<MlGetTrainedModelsStatsRequestParameters>
	{
		[JsonIgnore]
		public bool? AllowNoMatch { get => Q<bool?>("allow_no_match"); set => Q("allow_no_match", value); }

		[JsonIgnore]
		public int? From { get => Q<int?>("from"); set => Q("from", value); }

		[JsonIgnore]
		public int? Size { get => Q<int?>("size"); set => Q("size", value); }
	}

	public partial class MlGetTrainedModelsStatsRequest : PlainRequestBase<MlGetTrainedModelsStatsRequestParameters>
	{
		public MlGetTrainedModelsStatsRequest()
		{
		}

		public MlGetTrainedModelsStatsRequest(Elastic.Clients.Elasticsearch.Id? model_id) : base(r => r.Optional("model_id", model_id))
		{
		}

		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetTrainedModelsStats;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		[JsonIgnore]
		public bool? AllowNoMatch { get => Q<bool?>("allow_no_match"); set => Q("allow_no_match", value); }

		[JsonIgnore]
		public int? From { get => Q<int?>("from"); set => Q("from", value); }

		[JsonIgnore]
		public int? Size { get => Q<int?>("size"); set => Q("size", value); }
	}

	public sealed partial class MlGetTrainedModelsStatsRequestDescriptor : RequestDescriptorBase<MlGetTrainedModelsStatsRequestDescriptor, MlGetTrainedModelsStatsRequestParameters>
	{
		internal MlGetTrainedModelsStatsRequestDescriptor(Action<MlGetTrainedModelsStatsRequestDescriptor> configure) => configure.Invoke(this);
		public MlGetTrainedModelsStatsRequestDescriptor()
		{
		}

		internal override ApiUrls ApiUrls => ApiUrlsLookups.MachineLearningGetTrainedModelsStats;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		public MlGetTrainedModelsStatsRequestDescriptor AllowNoMatch(bool? allowNoMatch = true) => Qs("allow_no_match", allowNoMatch);
		public MlGetTrainedModelsStatsRequestDescriptor From(int? from) => Qs("from", from);
		public MlGetTrainedModelsStatsRequestDescriptor Size(int? size) => Qs("size", size);
		public MlGetTrainedModelsStatsRequestDescriptor ModelId(Elastic.Clients.Elasticsearch.Id? model_id)
		{
			RouteValues.Optional("model_id", model_id);
			return Self;
		}

		protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
		{
		}
	}
}
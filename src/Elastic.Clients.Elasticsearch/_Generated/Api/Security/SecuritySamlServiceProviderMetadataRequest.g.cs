// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Security
{
	public class SecuritySamlServiceProviderMetadataRequestParameters : RequestParameters<SecuritySamlServiceProviderMetadataRequestParameters>
	{
	}

	public partial class SecuritySamlServiceProviderMetadataRequest : PlainRequestBase<SecuritySamlServiceProviderMetadataRequestParameters>
	{
		public SecuritySamlServiceProviderMetadataRequest(Elastic.Clients.Elasticsearch.Name realm_name) : base(r => r.Required("realm_name", realm_name))
		{
		}

		internal override ApiUrls ApiUrls => ApiUrlsLookups.SecuritySamlServiceProviderMetadata;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
	}

	public sealed partial class SecuritySamlServiceProviderMetadataRequestDescriptor : RequestDescriptorBase<SecuritySamlServiceProviderMetadataRequestDescriptor, SecuritySamlServiceProviderMetadataRequestParameters>
	{
		internal SecuritySamlServiceProviderMetadataRequestDescriptor(Action<SecuritySamlServiceProviderMetadataRequestDescriptor> configure) => configure.Invoke(this);
		public SecuritySamlServiceProviderMetadataRequestDescriptor(Elastic.Clients.Elasticsearch.Name realm_name) : base(r => r.Required("realm_name", realm_name))
		{
		}

		internal SecuritySamlServiceProviderMetadataRequestDescriptor()
		{
		}

		internal override ApiUrls ApiUrls => ApiUrlsLookups.SecuritySamlServiceProviderMetadata;
		protected override HttpMethod HttpMethod => HttpMethod.GET;
		protected override bool SupportsBody => false;
		public SecuritySamlServiceProviderMetadataRequestDescriptor RealmName(Elastic.Clients.Elasticsearch.Name realm_name)
		{
			RouteValues.Required("realm_name", realm_name);
			return Self;
		}

		protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
		{
		}
	}
}
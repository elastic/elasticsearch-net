// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Requests;
using Elastic.Clients.Elasticsearch.Serialization;
using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Security;

public sealed partial class GetServiceCredentialsRequestParameters : RequestParameters
{
}

/// <summary>
/// <para>
/// Retrieves information of all service credentials for a service account.
/// </para>
/// </summary>
public sealed partial class GetServiceCredentialsRequest : PlainRequest<GetServiceCredentialsRequestParameters>
{
	public GetServiceCredentialsRequest(string ns, Elastic.Clients.Elasticsearch.Name service) : base(r => r.Required("namespace", ns).Required("service", service))
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.SecurityGetServiceCredentials;

	protected override HttpMethod StaticHttpMethod => HttpMethod.GET;

	internal override bool SupportsBody => false;

	internal override string OperationName => "security.get_service_credentials";
}

/// <summary>
/// <para>
/// Retrieves information of all service credentials for a service account.
/// </para>
/// </summary>
public sealed partial class GetServiceCredentialsRequestDescriptor : RequestDescriptor<GetServiceCredentialsRequestDescriptor, GetServiceCredentialsRequestParameters>
{
	internal GetServiceCredentialsRequestDescriptor(Action<GetServiceCredentialsRequestDescriptor> configure) => configure.Invoke(this);

	public GetServiceCredentialsRequestDescriptor(string ns, Elastic.Clients.Elasticsearch.Name service) : base(r => r.Required("namespace", ns).Required("service", service))
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.SecurityGetServiceCredentials;

	protected override HttpMethod StaticHttpMethod => HttpMethod.GET;

	internal override bool SupportsBody => false;

	internal override string OperationName => "security.get_service_credentials";

	public GetServiceCredentialsRequestDescriptor Namespace(string ns)
	{
		RouteValues.Required("namespace", ns);
		return Self;
	}

	public GetServiceCredentialsRequestDescriptor Service(Elastic.Clients.Elasticsearch.Name service)
	{
		RouteValues.Required("service", service);
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
	}
}
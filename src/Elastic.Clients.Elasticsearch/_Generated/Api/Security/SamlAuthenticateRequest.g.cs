// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Requests;
using Elastic.Clients.Elasticsearch.Serialization;
using Elastic.Transport;
using Elastic.Transport.Extensions;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Security;

public sealed partial class SamlAuthenticateRequestParameters : RequestParameters
{
}

/// <summary>
/// <para>
/// Authenticate SAML.
/// </para>
/// <para>
/// Submit a SAML response message to Elasticsearch for consumption.
/// </para>
/// <para>
/// NOTE: This API is intended for use by custom web applications other than Kibana.
/// If you are using Kibana, refer to the documentation for configuring SAML single-sign-on on the Elastic Stack.
/// </para>
/// <para>
/// The SAML message that is submitted can be:
/// </para>
/// <list type="bullet">
/// <item>
/// <para>
/// A response to a SAML authentication request that was previously created using the SAML prepare authentication API.
/// </para>
/// </item>
/// <item>
/// <para>
/// An unsolicited SAML message in the case of an IdP-initiated single sign-on (SSO) flow.
/// </para>
/// </item>
/// </list>
/// <para>
/// In either case, the SAML message needs to be a base64 encoded XML document with a root element of <c>&lt;Response></c>.
/// </para>
/// <para>
/// After successful validation, Elasticsearch responds with an Elasticsearch internal access token and refresh token that can be subsequently used for authentication.
/// This API endpoint essentially exchanges SAML responses that indicate successful authentication in the IdP for Elasticsearch access and refresh tokens, which can be used for authentication against Elasticsearch.
/// </para>
/// </summary>
public sealed partial class SamlAuthenticateRequest : PlainRequest<SamlAuthenticateRequestParameters>
{
	internal override ApiUrls ApiUrls => ApiUrlLookup.SecuritySamlAuthenticate;

	protected override HttpMethod StaticHttpMethod => HttpMethod.POST;

	internal override bool SupportsBody => true;

	internal override string OperationName => "security.saml_authenticate";

	/// <summary>
	/// <para>
	/// The SAML response as it was sent by the user's browser, usually a Base64 encoded XML document.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("content")]
	public string Content { get; set; }

	/// <summary>
	/// <para>
	/// A JSON array with all the valid SAML Request Ids that the caller of the API has for the current user.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("ids")]
	public Elastic.Clients.Elasticsearch.Ids Ids { get; set; }

	/// <summary>
	/// <para>
	/// The name of the realm that should authenticate the SAML response. Useful in cases where many SAML realms are defined.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("realm")]
	public string? Realm { get; set; }
}

/// <summary>
/// <para>
/// Authenticate SAML.
/// </para>
/// <para>
/// Submit a SAML response message to Elasticsearch for consumption.
/// </para>
/// <para>
/// NOTE: This API is intended for use by custom web applications other than Kibana.
/// If you are using Kibana, refer to the documentation for configuring SAML single-sign-on on the Elastic Stack.
/// </para>
/// <para>
/// The SAML message that is submitted can be:
/// </para>
/// <list type="bullet">
/// <item>
/// <para>
/// A response to a SAML authentication request that was previously created using the SAML prepare authentication API.
/// </para>
/// </item>
/// <item>
/// <para>
/// An unsolicited SAML message in the case of an IdP-initiated single sign-on (SSO) flow.
/// </para>
/// </item>
/// </list>
/// <para>
/// In either case, the SAML message needs to be a base64 encoded XML document with a root element of <c>&lt;Response></c>.
/// </para>
/// <para>
/// After successful validation, Elasticsearch responds with an Elasticsearch internal access token and refresh token that can be subsequently used for authentication.
/// This API endpoint essentially exchanges SAML responses that indicate successful authentication in the IdP for Elasticsearch access and refresh tokens, which can be used for authentication against Elasticsearch.
/// </para>
/// </summary>
public sealed partial class SamlAuthenticateRequestDescriptor : RequestDescriptor<SamlAuthenticateRequestDescriptor, SamlAuthenticateRequestParameters>
{
	internal SamlAuthenticateRequestDescriptor(Action<SamlAuthenticateRequestDescriptor> configure) => configure.Invoke(this);

	public SamlAuthenticateRequestDescriptor()
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.SecuritySamlAuthenticate;

	protected override HttpMethod StaticHttpMethod => HttpMethod.POST;

	internal override bool SupportsBody => true;

	internal override string OperationName => "security.saml_authenticate";

	private string ContentValue { get; set; }
	private Elastic.Clients.Elasticsearch.Ids IdsValue { get; set; }
	private string? RealmValue { get; set; }

	/// <summary>
	/// <para>
	/// The SAML response as it was sent by the user's browser, usually a Base64 encoded XML document.
	/// </para>
	/// </summary>
	public SamlAuthenticateRequestDescriptor Content(string content)
	{
		ContentValue = content;
		return Self;
	}

	/// <summary>
	/// <para>
	/// A JSON array with all the valid SAML Request Ids that the caller of the API has for the current user.
	/// </para>
	/// </summary>
	public SamlAuthenticateRequestDescriptor Ids(Elastic.Clients.Elasticsearch.Ids ids)
	{
		IdsValue = ids;
		return Self;
	}

	/// <summary>
	/// <para>
	/// The name of the realm that should authenticate the SAML response. Useful in cases where many SAML realms are defined.
	/// </para>
	/// </summary>
	public SamlAuthenticateRequestDescriptor Realm(string? realm)
	{
		RealmValue = realm;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		writer.WriteStartObject();
		writer.WritePropertyName("content");
		writer.WriteStringValue(ContentValue);
		writer.WritePropertyName("ids");
		JsonSerializer.Serialize(writer, IdsValue, options);
		if (!string.IsNullOrEmpty(RealmValue))
		{
			writer.WritePropertyName("realm");
			writer.WriteStringValue(RealmValue);
		}

		writer.WriteEndObject();
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Requests;
using Elastic.Clients.Elasticsearch.Serialization;
using Elastic.Transport;
using Elastic.Transport.Extensions;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.SearchApplication;

public sealed partial class PostBehavioralAnalyticsEventRequestParameters : RequestParameters
{
	/// <summary>
	/// <para>
	/// Whether the response type has to include more details
	/// </para>
	/// </summary>
	public bool? Debug { get => Q<bool?>("debug"); set => Q("debug", value); }
}

/// <summary>
/// <para>
/// Create a behavioral analytics collection event.
/// </para>
/// </summary>
public sealed partial class PostBehavioralAnalyticsEventRequest : PlainRequest<PostBehavioralAnalyticsEventRequestParameters>, ISelfSerializable
{
	public PostBehavioralAnalyticsEventRequest(Elastic.Clients.Elasticsearch.Name collectionName, Elastic.Clients.Elasticsearch.SearchApplication.EventType eventType) : base(r => r.Required("collection_name", collectionName).Required("event_type", eventType))
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.SearchApplicationPostBehavioralAnalyticsEvent;

	protected override HttpMethod StaticHttpMethod => HttpMethod.POST;

	internal override bool SupportsBody => true;

	internal override string OperationName => "search_application.post_behavioral_analytics_event";

	/// <summary>
	/// <para>
	/// Whether the response type has to include more details
	/// </para>
	/// </summary>
	[JsonIgnore]
	public bool? Debug { get => Q<bool?>("debug"); set => Q("debug", value); }
	[JsonIgnore]
	public object Payload { get; set; }

	void ISelfSerializable.Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		JsonSerializer.Serialize(writer, Payload, options);
	}
}

/// <summary>
/// <para>
/// Create a behavioral analytics collection event.
/// </para>
/// </summary>
public sealed partial class PostBehavioralAnalyticsEventRequestDescriptor : RequestDescriptor<PostBehavioralAnalyticsEventRequestDescriptor, PostBehavioralAnalyticsEventRequestParameters>
{
	internal PostBehavioralAnalyticsEventRequestDescriptor(Action<PostBehavioralAnalyticsEventRequestDescriptor> configure) => configure.Invoke(this);

	public PostBehavioralAnalyticsEventRequestDescriptor(Elastic.Clients.Elasticsearch.Name collectionName, Elastic.Clients.Elasticsearch.SearchApplication.EventType eventType) : base(r => r.Required("collection_name", collectionName).Required("event_type", eventType))
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.SearchApplicationPostBehavioralAnalyticsEvent;

	protected override HttpMethod StaticHttpMethod => HttpMethod.POST;

	internal override bool SupportsBody => true;

	internal override string OperationName => "search_application.post_behavioral_analytics_event";

	public PostBehavioralAnalyticsEventRequestDescriptor Debug(bool? debug = true) => Qs("debug", debug);

	public PostBehavioralAnalyticsEventRequestDescriptor CollectionName(Elastic.Clients.Elasticsearch.Name collectionName)
	{
		RouteValues.Required("collection_name", collectionName);
		return Self;
	}

	public PostBehavioralAnalyticsEventRequestDescriptor EventType(Elastic.Clients.Elasticsearch.SearchApplication.EventType eventType)
	{
		RouteValues.Required("event_type", eventType);
		return Self;
	}

	private object PayloadValue { get; set; }

	public PostBehavioralAnalyticsEventRequestDescriptor Payload(object payload)
	{
		PayloadValue = payload;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		JsonSerializer.Serialize(writer, PayloadValue, options);
	}
}
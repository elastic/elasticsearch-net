// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Requests;
using Elastic.Clients.Elasticsearch.Serialization;
using Elastic.Transport;
using Elastic.Transport.Extensions;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.CrossClusterReplication;

public sealed partial class FollowInfoRequestParameters : RequestParameters
{
}

/// <summary>
/// <para>
/// Get follower information.
/// Get information about all cross-cluster replication follower indices.
/// For example, the results include follower index names, leader index names, replication options, and whether the follower indices are active or paused.
/// </para>
/// </summary>
public sealed partial class FollowInfoRequest : PlainRequest<FollowInfoRequestParameters>
{
	public FollowInfoRequest(Elastic.Clients.Elasticsearch.Indices indices) : base(r => r.Required("index", indices))
	{
	}

	[JsonConstructor]
	internal FollowInfoRequest()
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.CrossClusterReplicationFollowInfo;

	protected override HttpMethod StaticHttpMethod => HttpMethod.GET;

	internal override bool SupportsBody => false;

	internal override string OperationName => "ccr.follow_info";

	/// <summary>
	/// <para>
	/// A comma-separated list of index patterns; use <c>_all</c> to perform the operation on all indices
	/// </para>
	/// </summary>
	[JsonIgnore]
	public Elastic.Clients.Elasticsearch.Indices Indices { get => P<Elastic.Clients.Elasticsearch.Indices>("index"); set => PR("index", value); }
}

/// <summary>
/// <para>
/// Get follower information.
/// Get information about all cross-cluster replication follower indices.
/// For example, the results include follower index names, leader index names, replication options, and whether the follower indices are active or paused.
/// </para>
/// </summary>
public sealed partial class FollowInfoRequestDescriptor<TDocument> : RequestDescriptor<FollowInfoRequestDescriptor<TDocument>, FollowInfoRequestParameters>
{
	internal FollowInfoRequestDescriptor(Action<FollowInfoRequestDescriptor<TDocument>> configure) => configure.Invoke(this);

	public FollowInfoRequestDescriptor(Elastic.Clients.Elasticsearch.Indices indices) : base(r => r.Required("index", indices))
	{
	}

	public FollowInfoRequestDescriptor() : this(typeof(TDocument))
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.CrossClusterReplicationFollowInfo;

	protected override HttpMethod StaticHttpMethod => HttpMethod.GET;

	internal override bool SupportsBody => false;

	internal override string OperationName => "ccr.follow_info";

	public FollowInfoRequestDescriptor<TDocument> Indices(Elastic.Clients.Elasticsearch.Indices indices)
	{
		RouteValues.Required("index", indices);
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
	}
}

/// <summary>
/// <para>
/// Get follower information.
/// Get information about all cross-cluster replication follower indices.
/// For example, the results include follower index names, leader index names, replication options, and whether the follower indices are active or paused.
/// </para>
/// </summary>
public sealed partial class FollowInfoRequestDescriptor : RequestDescriptor<FollowInfoRequestDescriptor, FollowInfoRequestParameters>
{
	internal FollowInfoRequestDescriptor(Action<FollowInfoRequestDescriptor> configure) => configure.Invoke(this);

	public FollowInfoRequestDescriptor(Elastic.Clients.Elasticsearch.Indices indices) : base(r => r.Required("index", indices))
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.CrossClusterReplicationFollowInfo;

	protected override HttpMethod StaticHttpMethod => HttpMethod.GET;

	internal override bool SupportsBody => false;

	internal override string OperationName => "ccr.follow_info";

	public FollowInfoRequestDescriptor Indices(Elastic.Clients.Elasticsearch.Indices indices)
	{
		RouteValues.Required("index", indices);
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
	}
}
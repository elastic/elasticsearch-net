// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Serialization;
using Elastic.Transport.Products.Elasticsearch;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.AsyncSearch;

public sealed partial class SubmitAsyncSearchResponse<TDocument> : ElasticsearchResponse
{
	/// <summary>
	/// <para>
	/// Indicates when the async search completed. Only present
	/// when the search has completed.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("completion_time")]
	public DateTimeOffset? CompletionTime { get; init; }
	[JsonInclude, JsonPropertyName("completion_time_in_millis")]
	public long? CompletionTimeInMillis { get; init; }

	/// <summary>
	/// <para>
	/// Indicates when the async search will expire.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("expiration_time")]
	public DateTimeOffset? ExpirationTime { get; init; }
	[JsonInclude, JsonPropertyName("expiration_time_in_millis")]
	public long ExpirationTimeInMillis { get; init; }
	[JsonInclude, JsonPropertyName("id")]
	public string? Id { get; init; }

	/// <summary>
	/// <para>
	/// When the query is no longer running, this property indicates whether the search failed or was successfully completed on all shards.
	/// While the query is running, <c>is_partial</c> is always set to <c>true</c>.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("is_partial")]
	public bool IsPartial { get; init; }

	/// <summary>
	/// <para>
	/// Indicates whether the search is still running or has completed.
	/// NOTE: If the search failed after some shards returned their results or the node that is coordinating the async search dies, results may be partial even though <c>is_running</c> is <c>false</c>.
	/// </para>
	/// </summary>
	[JsonInclude, JsonPropertyName("is_running")]
	public bool IsRunning { get; init; }
	[JsonInclude, JsonPropertyName("response")]
	public Elastic.Clients.Elasticsearch.AsyncSearch.AsyncSearch<TDocument> Response { get; init; }
	[JsonInclude, JsonPropertyName("start_time")]
	public DateTimeOffset? StartTime { get; init; }
	[JsonInclude, JsonPropertyName("start_time_in_millis")]
	public long StartTimeInMillis { get; init; }
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Requests;
using Elastic.Clients.Elasticsearch.Serialization;
using Elastic.Transport;
using Elastic.Transport.Extensions;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.IndexManagement;

public sealed partial class CreateFromRequestParameters : RequestParameters
{
}

/// <summary>
/// <para>
/// Create an index from a source index.
/// </para>
/// <para>
/// Copy the mappings and settings from the source index to a destination index while allowing request settings and mappings to override the source values.
/// </para>
/// </summary>
public sealed partial class CreateFromRequest : PlainRequest<CreateFromRequestParameters>, ISelfSerializable
{
	public CreateFromRequest(Elastic.Clients.Elasticsearch.IndexName source, Elastic.Clients.Elasticsearch.IndexName dest) : base(r => r.Required("source", source).Required("dest", dest))
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.IndexManagementCreateFrom;

	protected override HttpMethod StaticHttpMethod => HttpMethod.PUT;

	internal override bool SupportsBody => true;

	internal override string OperationName => "indices.create_from";

	[JsonIgnore]
	public Elastic.Clients.Elasticsearch.IndexManagement.CreateFrom CreateFrom { get; set; }

	void ISelfSerializable.Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		JsonSerializer.Serialize(writer, CreateFrom, options);
	}
}

/// <summary>
/// <para>
/// Create an index from a source index.
/// </para>
/// <para>
/// Copy the mappings and settings from the source index to a destination index while allowing request settings and mappings to override the source values.
/// </para>
/// </summary>
public sealed partial class CreateFromRequestDescriptor<TDocument> : RequestDescriptor<CreateFromRequestDescriptor<TDocument>, CreateFromRequestParameters>
{
	internal CreateFromRequestDescriptor(Action<CreateFromRequestDescriptor<TDocument>> configure) => configure.Invoke(this);
	public CreateFromRequestDescriptor(Elastic.Clients.Elasticsearch.IndexManagement.CreateFrom createFrom, Elastic.Clients.Elasticsearch.IndexName source, Elastic.Clients.Elasticsearch.IndexName dest) : base(r => r.Required("source", source).Required("dest", dest)) => CreateFromValue = createFrom;

	internal override ApiUrls ApiUrls => ApiUrlLookup.IndexManagementCreateFrom;

	protected override HttpMethod StaticHttpMethod => HttpMethod.PUT;

	internal override bool SupportsBody => true;

	internal override string OperationName => "indices.create_from";

	public CreateFromRequestDescriptor<TDocument> Dest(Elastic.Clients.Elasticsearch.IndexName dest)
	{
		RouteValues.Required("dest", dest);
		return Self;
	}

	public CreateFromRequestDescriptor<TDocument> Source(Elastic.Clients.Elasticsearch.IndexName source)
	{
		RouteValues.Required("source", source);
		return Self;
	}

	private Elastic.Clients.Elasticsearch.IndexManagement.CreateFrom CreateFromValue { get; set; }
	private Elastic.Clients.Elasticsearch.IndexManagement.CreateFromDescriptor<TDocument> CreateFromDescriptor { get; set; }
	private Action<Elastic.Clients.Elasticsearch.IndexManagement.CreateFromDescriptor<TDocument>> CreateFromDescriptorAction { get; set; }

	public CreateFromRequestDescriptor<TDocument> CreateFrom(Elastic.Clients.Elasticsearch.IndexManagement.CreateFrom createFrom)
	{
		CreateFromDescriptor = null;
		CreateFromDescriptorAction = null;
		CreateFromValue = createFrom;
		return Self;
	}

	public CreateFromRequestDescriptor<TDocument> CreateFrom(Elastic.Clients.Elasticsearch.IndexManagement.CreateFromDescriptor<TDocument> descriptor)
	{
		CreateFromValue = null;
		CreateFromDescriptorAction = null;
		CreateFromDescriptor = descriptor;
		return Self;
	}

	public CreateFromRequestDescriptor<TDocument> CreateFrom(Action<Elastic.Clients.Elasticsearch.IndexManagement.CreateFromDescriptor<TDocument>> configure)
	{
		CreateFromValue = null;
		CreateFromDescriptor = null;
		CreateFromDescriptorAction = configure;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		JsonSerializer.Serialize(writer, CreateFromValue, options);
	}
}

/// <summary>
/// <para>
/// Create an index from a source index.
/// </para>
/// <para>
/// Copy the mappings and settings from the source index to a destination index while allowing request settings and mappings to override the source values.
/// </para>
/// </summary>
public sealed partial class CreateFromRequestDescriptor : RequestDescriptor<CreateFromRequestDescriptor, CreateFromRequestParameters>
{
	internal CreateFromRequestDescriptor(Action<CreateFromRequestDescriptor> configure) => configure.Invoke(this);
	public CreateFromRequestDescriptor(Elastic.Clients.Elasticsearch.IndexManagement.CreateFrom createFrom, Elastic.Clients.Elasticsearch.IndexName source, Elastic.Clients.Elasticsearch.IndexName dest) : base(r => r.Required("source", source).Required("dest", dest)) => CreateFromValue = createFrom;

	internal override ApiUrls ApiUrls => ApiUrlLookup.IndexManagementCreateFrom;

	protected override HttpMethod StaticHttpMethod => HttpMethod.PUT;

	internal override bool SupportsBody => true;

	internal override string OperationName => "indices.create_from";

	public CreateFromRequestDescriptor Dest(Elastic.Clients.Elasticsearch.IndexName dest)
	{
		RouteValues.Required("dest", dest);
		return Self;
	}

	public CreateFromRequestDescriptor Source(Elastic.Clients.Elasticsearch.IndexName source)
	{
		RouteValues.Required("source", source);
		return Self;
	}

	private Elastic.Clients.Elasticsearch.IndexManagement.CreateFrom CreateFromValue { get; set; }
	private Elastic.Clients.Elasticsearch.IndexManagement.CreateFromDescriptor CreateFromDescriptor { get; set; }
	private Action<Elastic.Clients.Elasticsearch.IndexManagement.CreateFromDescriptor> CreateFromDescriptorAction { get; set; }

	public CreateFromRequestDescriptor CreateFrom(Elastic.Clients.Elasticsearch.IndexManagement.CreateFrom createFrom)
	{
		CreateFromDescriptor = null;
		CreateFromDescriptorAction = null;
		CreateFromValue = createFrom;
		return Self;
	}

	public CreateFromRequestDescriptor CreateFrom(Elastic.Clients.Elasticsearch.IndexManagement.CreateFromDescriptor descriptor)
	{
		CreateFromValue = null;
		CreateFromDescriptorAction = null;
		CreateFromDescriptor = descriptor;
		return Self;
	}

	public CreateFromRequestDescriptor CreateFrom(Action<Elastic.Clients.Elasticsearch.IndexManagement.CreateFromDescriptor> configure)
	{
		CreateFromValue = null;
		CreateFromDescriptor = null;
		CreateFromDescriptorAction = configure;
		return Self;
	}

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
		JsonSerializer.Serialize(writer, CreateFromValue, options);
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport;
using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.IndexManagement
{
	public class IndexUpdateAliasesRequestParameters : RequestParameters<IndexUpdateAliasesRequestParameters>
	{
		[JsonIgnore]
		public Elastic.Clients.Elasticsearch.Time? MasterTimeout { get => Q<Elastic.Clients.Elasticsearch.Time?>("master_timeout"); set => Q("master_timeout", value); }

		[JsonIgnore]
		public Elastic.Clients.Elasticsearch.Time? Timeout { get => Q<Elastic.Clients.Elasticsearch.Time?>("timeout"); set => Q("timeout", value); }
	}

	public partial class IndexUpdateAliasesRequest : PlainRequestBase<IndexUpdateAliasesRequestParameters>
	{
		internal override ApiUrls ApiUrls => ApiUrlsLookups.IndexManagementUpdateAliases;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		[JsonIgnore]
		public Elastic.Clients.Elasticsearch.Time? MasterTimeout { get => Q<Elastic.Clients.Elasticsearch.Time?>("master_timeout"); set => Q("master_timeout", value); }

		[JsonIgnore]
		public Elastic.Clients.Elasticsearch.Time? Timeout { get => Q<Elastic.Clients.Elasticsearch.Time?>("timeout"); set => Q("timeout", value); }

		[JsonInclude]
		[JsonPropertyName("actions")]
		public IEnumerable<Elastic.Clients.Elasticsearch.IndexManagement.UpdateAliases.Action>? Actions { get; set; }
	}

	[JsonConverter(typeof(IndexUpdateAliasesRequestDescriptorConverter))]
	public sealed partial class IndexUpdateAliasesRequestDescriptor : RequestDescriptorBase<IndexUpdateAliasesRequestDescriptor, IndexUpdateAliasesRequestParameters>
	{
		public IndexUpdateAliasesRequestDescriptor()
		{
		}

		internal IndexUpdateAliasesRequestDescriptor(Action<IndexUpdateAliasesRequestDescriptor> configure) => configure.Invoke(this);
		internal override ApiUrls ApiUrls => ApiUrlsLookups.IndexManagementUpdateAliases;
		protected override HttpMethod HttpMethod => HttpMethod.POST;
		protected override bool SupportsBody => true;
		public IndexUpdateAliasesRequestDescriptor MasterTimeout(Elastic.Clients.Elasticsearch.Time? masterTimeout) => Qs("master_timeout", masterTimeout);
		public IndexUpdateAliasesRequestDescriptor Timeout(Elastic.Clients.Elasticsearch.Time? timeout) => Qs("timeout", timeout);
		internal IEnumerable<Elastic.Clients.Elasticsearch.IndexManagement.UpdateAliases.Action>? ActionsValue { get; private set; }

		public IndexUpdateAliasesRequestDescriptor Actions(IEnumerable<Elastic.Clients.Elasticsearch.IndexManagement.UpdateAliases.Action>? actions) => Assign(actions, (a, v) => a.ActionsValue = v);
	}

	internal sealed class IndexUpdateAliasesRequestDescriptorConverter : JsonConverter<IndexUpdateAliasesRequestDescriptor>
	{
		public override IndexUpdateAliasesRequestDescriptor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) => throw new NotImplementedException();
		public override void Write(Utf8JsonWriter writer, IndexUpdateAliasesRequestDescriptor value, JsonSerializerOptions options)
		{
			writer.WriteStartObject();
			if (value.ActionsValue is not null)
			{
				writer.WritePropertyName("actions");
				JsonSerializer.Serialize(writer, value.ActionsValue, options);
			}

			writer.WriteEndObject();
		}
	}
}
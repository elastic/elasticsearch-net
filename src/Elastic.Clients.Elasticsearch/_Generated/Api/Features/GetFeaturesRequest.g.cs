// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

#nullable restore

using Elastic.Clients.Elasticsearch.Fluent;
using Elastic.Clients.Elasticsearch.Requests;
using Elastic.Clients.Elasticsearch.Serialization;
using Elastic.Transport;
using Elastic.Transport.Extensions;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.Clients.Elasticsearch.Features;

public sealed partial class GetFeaturesRequestParameters : RequestParameters
{
}

/// <summary>
/// <para>
/// Get the features.
/// Get a list of features that can be included in snapshots using the <c>feature_states</c> field when creating a snapshot.
/// You can use this API to determine which feature states to include when taking a snapshot.
/// By default, all feature states are included in a snapshot if that snapshot includes the global state, or none if it does not.
/// </para>
/// <para>
/// A feature state includes one or more system indices necessary for a given feature to function.
/// In order to ensure data integrity, all system indices that comprise a feature state are snapshotted and restored together.
/// </para>
/// <para>
/// The features listed by this API are a combination of built-in features and features defined by plugins.
/// In order for a feature state to be listed in this API and recognized as a valid feature state by the create snapshot API, the plugin that defines that feature must be installed on the master node.
/// </para>
/// </summary>
public sealed partial class GetFeaturesRequest : PlainRequest<GetFeaturesRequestParameters>
{
	[JsonConstructor]
	internal GetFeaturesRequest()
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.FeaturesGetFeatures;

	protected override HttpMethod StaticHttpMethod => HttpMethod.GET;

	internal override bool SupportsBody => false;

	internal override string OperationName => "features.get_features";
}

/// <summary>
/// <para>
/// Get the features.
/// Get a list of features that can be included in snapshots using the <c>feature_states</c> field when creating a snapshot.
/// You can use this API to determine which feature states to include when taking a snapshot.
/// By default, all feature states are included in a snapshot if that snapshot includes the global state, or none if it does not.
/// </para>
/// <para>
/// A feature state includes one or more system indices necessary for a given feature to function.
/// In order to ensure data integrity, all system indices that comprise a feature state are snapshotted and restored together.
/// </para>
/// <para>
/// The features listed by this API are a combination of built-in features and features defined by plugins.
/// In order for a feature state to be listed in this API and recognized as a valid feature state by the create snapshot API, the plugin that defines that feature must be installed on the master node.
/// </para>
/// </summary>
public sealed partial class GetFeaturesRequestDescriptor : RequestDescriptor<GetFeaturesRequestDescriptor, GetFeaturesRequestParameters>
{
	internal GetFeaturesRequestDescriptor(Action<GetFeaturesRequestDescriptor> configure) => configure.Invoke(this);

	public GetFeaturesRequestDescriptor()
	{
	}

	internal override ApiUrls ApiUrls => ApiUrlLookup.FeaturesGetFeatures;

	protected override HttpMethod StaticHttpMethod => HttpMethod.GET;

	internal override bool SupportsBody => false;

	internal override string OperationName => "features.get_features";

	protected override void Serialize(Utf8JsonWriter writer, JsonSerializerOptions options, IElasticsearchClientSettings settings)
	{
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using OneOf;
using Elastic.Transport;

#nullable restore
namespace Elastic.Clients.Elasticsearch
{
	public partial class ByteSize
	{
	}

	public partial class DataStreamNames : IUrlParameter
	{
		private readonly List<DataStreamName> _dataStreamNameList = new();
	}

	public partial class EpochMillis
	{
	}

	public partial class ExpandWildcards
	{
	}

	public partial class Fields : IUrlParameter
	{
		private readonly List<Field> _fieldList = new();
	}

	public partial class Fuzziness
	{
	}

	public partial class Ids : IUrlParameter
	{
		private readonly List<Id> _idList = new();
	}

	public partial class Indices : IUrlParameter
	{
		private readonly List<IndexName> _indexNameList = new();
	}

	public partial class Metrics : IUrlParameter
	{
		private readonly List<string> _stringList = new();
	}

	public partial class MinimumShouldMatch
	{
	}

	public partial class Names : IUrlParameter
	{
		private readonly List<Name> _nameList = new();
	}

	public partial class NodeIds : IUrlParameter
	{
		private readonly List<NodeId> _nodeIdList = new();
	}

	public partial class Percentage
	{
	}

	public partial class Refresh
	{
	}

	public partial class Script
	{
	}

	public partial class TaskId : IUrlParameter
	{
		public string GetString(ITransportConfiguration settings) =>  string . Empty ;
	}

	//public partial class Time
	//{
	//}

	public partial class WaitForActiveShards
	{
	}
}

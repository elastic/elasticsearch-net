// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.QueryDsl
{
	[ConvertAs(typeof(CombinedFieldsQuery))]
	public partial interface ICombinedFieldsQuery : IQuery
	{
		IEnumerable<Elastic.Clients.Elasticsearch.Field> Fields { get; set; }

		string Query { get; set; }

		bool? AutoGenerateSynonymsPhraseQuery { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.CombinedFieldsOperator? Operator { get; set; }

		Elastic.Clients.Elasticsearch.MinimumShouldMatch? MimimumShouldMatch { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.CombinedFieldsZeroTerms? ZeroTermsQuery { get; set; }
	}

	public partial class CombinedFieldsQuery : QueryBase, ICombinedFieldsQuery
	{
		[JsonInclude]
		[JsonPropertyName("fields")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Field> Fields { get; set; }

		[JsonInclude]
		[JsonPropertyName("query")]
		public string Query { get; set; }

		[JsonInclude]
		[JsonPropertyName("auto_generate_synonyms_phrase_query")]
		public bool? AutoGenerateSynonymsPhraseQuery { get; set; }

		[JsonInclude]
		[JsonPropertyName("operator")]
		public Elastic.Clients.Elasticsearch.QueryDsl.CombinedFieldsOperator? Operator { get; set; }

		[JsonInclude]
		[JsonPropertyName("mimimum_should_match")]
		public Elastic.Clients.Elasticsearch.MinimumShouldMatch? MimimumShouldMatch { get; set; }

		[JsonInclude]
		[JsonPropertyName("zero_terms_query")]
		public Elastic.Clients.Elasticsearch.QueryDsl.CombinedFieldsZeroTerms? ZeroTermsQuery { get; set; }
	}

	public partial class CombinedFieldsQueryDescriptor : QueryDescriptorBase<CombinedFieldsQueryDescriptor, ICombinedFieldsQuery>, ICombinedFieldsQuery
	{
		IEnumerable<Elastic.Clients.Elasticsearch.Field> ICombinedFieldsQuery.Fields { get; set; }

		string ICombinedFieldsQuery.Query { get; set; }

		bool? ICombinedFieldsQuery.AutoGenerateSynonymsPhraseQuery { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.CombinedFieldsOperator? ICombinedFieldsQuery.Operator { get; set; }

		Elastic.Clients.Elasticsearch.MinimumShouldMatch? ICombinedFieldsQuery.MimimumShouldMatch { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.CombinedFieldsZeroTerms? ICombinedFieldsQuery.ZeroTermsQuery { get; set; }
	}
}
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using Elastic.Transport;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.QueryDsl
{
	[ConvertAs(typeof(FuzzyQuery))]
	public partial interface IFuzzyQuery : IFieldNameQuery
	{
		int? MaxExpansions { get; set; }

		int? PrefixLength { get; set; }

		Elastic.Clients.Elasticsearch.MultiTermQueryRewrite? Rewrite { get; set; }

		bool? Transpositions { get; set; }

		Elastic.Clients.Elasticsearch.Fuzziness? Fuzziness { get; set; }

		string Value { get; set; }
	}

	public partial class FuzzyQuery : FieldNameQueryBase, IFuzzyQuery
	{
		[JsonInclude]
		[JsonPropertyName("max_expansions")]
		public int? MaxExpansions { get; set; }

		[JsonInclude]
		[JsonPropertyName("prefix_length")]
		public int? PrefixLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("rewrite")]
		public Elastic.Clients.Elasticsearch.MultiTermQueryRewrite? Rewrite { get; set; }

		[JsonInclude]
		[JsonPropertyName("transpositions")]
		public bool? Transpositions { get; set; }

		[JsonInclude]
		[JsonPropertyName("fuzziness")]
		public Elastic.Clients.Elasticsearch.Fuzziness? Fuzziness { get; set; }

		[JsonInclude]
		[JsonPropertyName("value")]
		public string Value { get; set; }
	}

	public partial class FuzzyQueryDescriptor : IFuzzyQuery
	{
		int? IFuzzyQuery.MaxExpansions { get; set; }

		int? IFuzzyQuery.PrefixLength { get; set; }

		Elastic.Clients.Elasticsearch.MultiTermQueryRewrite? IFuzzyQuery.Rewrite { get; set; }

		bool? IFuzzyQuery.Transpositions { get; set; }

		Elastic.Clients.Elasticsearch.Fuzziness? IFuzzyQuery.Fuzziness { get; set; }

		string IFuzzyQuery.Value { get; set; }
	}
}
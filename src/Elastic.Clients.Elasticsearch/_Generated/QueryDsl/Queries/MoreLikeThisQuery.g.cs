// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.QueryDsl
{
	[ConvertAs(typeof(MoreLikeThisQuery))]
	public partial interface IMoreLikeThisQuery : IQuery
	{
		string? Analyzer { get; set; }

		double? BoostTerms { get; set; }

		bool? FailOnUnsupportedField { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Field>? Fields { get; set; }

		bool? Include { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.QueryDsl.Like> Like { get; set; }

		int? MaxDocFreq { get; set; }

		int? MaxQueryTerms { get; set; }

		int? MaxWordLength { get; set; }

		int? MinDocFreq { get; set; }

		Elastic.Clients.Elasticsearch.MinimumShouldMatch? MinimumShouldMatch { get; set; }

		int? MinTermFreq { get; set; }

		int? MinWordLength { get; set; }

		Dictionary<Elastic.Clients.Elasticsearch.Field, string>? PerFieldAnalyzer { get; set; }

		Elastic.Clients.Elasticsearch.Routing? Routing { get; set; }

		Elastic.Clients.Elasticsearch.Analysis.StopWords? StopWords { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.QueryDsl.Like>? Unlike { get; set; }

		Elastic.Clients.Elasticsearch.VersionNumber? Version { get; set; }

		Elastic.Clients.Elasticsearch.VersionType? VersionType { get; set; }
	}

	public partial class MoreLikeThisQuery : QueryBase, IMoreLikeThisQuery
	{
		[JsonInclude]
		[JsonPropertyName("analyzer")]
		public string? Analyzer { get; set; }

		[JsonInclude]
		[JsonPropertyName("boost_terms")]
		public double? BoostTerms { get; set; }

		[JsonInclude]
		[JsonPropertyName("fail_on_unsupported_field")]
		public bool? FailOnUnsupportedField { get; set; }

		[JsonInclude]
		[JsonPropertyName("fields")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Field>? Fields { get; set; }

		[JsonInclude]
		[JsonPropertyName("include")]
		public bool? Include { get; set; }

		[JsonInclude]
		[JsonPropertyName("like")]
		public IEnumerable<Elastic.Clients.Elasticsearch.QueryDsl.Like> Like { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_doc_freq")]
		public int? MaxDocFreq { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_query_terms")]
		public int? MaxQueryTerms { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_word_length")]
		public int? MaxWordLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_doc_freq")]
		public int? MinDocFreq { get; set; }

		[JsonInclude]
		[JsonPropertyName("minimum_should_match")]
		public Elastic.Clients.Elasticsearch.MinimumShouldMatch? MinimumShouldMatch { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_term_freq")]
		public int? MinTermFreq { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_word_length")]
		public int? MinWordLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("per_field_analyzer")]
		public Dictionary<Elastic.Clients.Elasticsearch.Field, string>? PerFieldAnalyzer { get; set; }

		[JsonInclude]
		[JsonPropertyName("routing")]
		public Elastic.Clients.Elasticsearch.Routing? Routing { get; set; }

		[JsonInclude]
		[JsonPropertyName("stop_words")]
		public Elastic.Clients.Elasticsearch.Analysis.StopWords? StopWords { get; set; }

		[JsonInclude]
		[JsonPropertyName("unlike")]
		public IEnumerable<Elastic.Clients.Elasticsearch.QueryDsl.Like>? Unlike { get; set; }

		[JsonInclude]
		[JsonPropertyName("version")]
		public Elastic.Clients.Elasticsearch.VersionNumber? Version { get; set; }

		[JsonInclude]
		[JsonPropertyName("version_type")]
		public Elastic.Clients.Elasticsearch.VersionType? VersionType { get; set; }
	}

	public partial class MoreLikeThisQueryDescriptor : QueryDescriptorBase<MoreLikeThisQueryDescriptor, IMoreLikeThisQuery>, IMoreLikeThisQuery
	{
		string? IMoreLikeThisQuery.Analyzer { get; set; }

		double? IMoreLikeThisQuery.BoostTerms { get; set; }

		bool? IMoreLikeThisQuery.FailOnUnsupportedField { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Field>? IMoreLikeThisQuery.Fields { get; set; }

		bool? IMoreLikeThisQuery.Include { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.QueryDsl.Like> IMoreLikeThisQuery.Like { get; set; }

		int? IMoreLikeThisQuery.MaxDocFreq { get; set; }

		int? IMoreLikeThisQuery.MaxQueryTerms { get; set; }

		int? IMoreLikeThisQuery.MaxWordLength { get; set; }

		int? IMoreLikeThisQuery.MinDocFreq { get; set; }

		Elastic.Clients.Elasticsearch.MinimumShouldMatch? IMoreLikeThisQuery.MinimumShouldMatch { get; set; }

		int? IMoreLikeThisQuery.MinTermFreq { get; set; }

		int? IMoreLikeThisQuery.MinWordLength { get; set; }

		Dictionary<Elastic.Clients.Elasticsearch.Field, string>? IMoreLikeThisQuery.PerFieldAnalyzer { get; set; }

		Elastic.Clients.Elasticsearch.Routing? IMoreLikeThisQuery.Routing { get; set; }

		Elastic.Clients.Elasticsearch.Analysis.StopWords? IMoreLikeThisQuery.StopWords { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.QueryDsl.Like>? IMoreLikeThisQuery.Unlike { get; set; }

		Elastic.Clients.Elasticsearch.VersionNumber? IMoreLikeThisQuery.Version { get; set; }

		Elastic.Clients.Elasticsearch.VersionType? IMoreLikeThisQuery.VersionType { get; set; }
	}
}